<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\mdk5.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\mdk5.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Wed Oct 11 09:09:57 2023
<BR><P>
<H3>Maximum Stack Usage =       1128 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
view_load &rArr; nt_recent_create &rArr; quantity_create &rArr; lv_spinbox_set_digit_format &rArr; lv_spinbox_updatevalue &rArr; lv_textarea_set_text &rArr; lv_textarea_add_char &rArr; insert_handler &rArr; lv_textarea_add_text &rArr;  lv_textarea_add_char (Cycle)
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[2b]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2b]">SysTick_Handler</a><BR>
 <LI><a href="#[3e]">ADC0_1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3e]">ADC0_1_IRQHandler</a><BR>
 <LI><a href="#[16a]">_lv_area_is_point_on</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[16a]">_lv_area_is_point_on</a><BR>
 <LI><a href="#[311]">event_send_core</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[311]">event_send_core</a><BR>
 <LI><a href="#[1e9]">apply_color_filter</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1b8]">lv_obj_get_style_prop</a><BR>
 <LI><a href="#[25d]">lv_obj_move_children_by</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[25d]">lv_obj_move_children_by</a><BR>
 <LI><a href="#[4a1]">lv_obj_scroll_by_bounded</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[172]">lv_obj_update_layout</a><BR>
 <LI><a href="#[38e]">layout_update_core</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[38e]">layout_update_core</a><BR>
 <LI><a href="#[4be]">lv_refr_obj</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4be]">lv_refr_obj</a><BR>
 <LI><a href="#[4ba]">lv_refr_get_top_obj</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4ba]">lv_refr_get_top_obj</a><BR>
 <LI><a href="#[496]">refresh_children_style</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[496]">refresh_children_style</a><BR>
 <LI><a href="#[366]">lv_indev_search_obj</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[366]">lv_indev_search_obj</a><BR>
 <LI><a href="#[1b6]">_lv_obj_destruct</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1b6]">_lv_obj_destruct</a><BR>
 <LI><a href="#[45f]">obj_del_core</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[45f]">obj_del_core</a><BR>
 <LI><a href="#[1ea]">apply_theme</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1ea]">apply_theme</a><BR>
 <LI><a href="#[45b]">lv_obj_construct</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[45b]">lv_obj_construct</a><BR>
 <LI><a href="#[1e0]">_vsnprintf</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1e0]">_vsnprintf</a><BR>
 <LI><a href="#[36e]">lv_textarea_add_text</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4d5]">lv_textarea_add_char</a><BR>
 <LI><a href="#[539]">nt_page_state_update</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[539]">nt_page_state_update</a><BR>
 <LI><a href="#[49b]">report_style_change_core</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[49b]">report_style_change_core</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[3e]">ADC0_1_IRQHandler</a> from startup_gd32f10x_hd.o(.text) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[5b]">ADC2_IRQHandler</a> from startup_gd32f10x_hd.o(.text) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[26]">BusFault_Handler</a> from gd32f10x_it.o(i.BusFault_Handler) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[42]">CAN0_EWMC_IRQHandler</a> from startup_gd32f10x_hd.o(.text) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[41]">CAN0_RX1_IRQHandler</a> from startup_gd32f10x_hd.o(.text) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[37]">DMA0_Channel0_IRQHandler</a> from startup_gd32f10x_hd.o(.text) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[38]">DMA0_Channel1_IRQHandler</a> from startup_gd32f10x_hd.o(.text) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[39]">DMA0_Channel2_IRQHandler</a> from startup_gd32f10x_hd.o(.text) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[3a]">DMA0_Channel3_IRQHandler</a> from startup_gd32f10x_hd.o(.text) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[3b]">DMA0_Channel4_IRQHandler</a> from startup_gd32f10x_hd.o(.text) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[3c]">DMA0_Channel5_IRQHandler</a> from startup_gd32f10x_hd.o(.text) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[3d]">DMA0_Channel6_IRQHandler</a> from startup_gd32f10x_hd.o(.text) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[64]">DMA1_Channel0_IRQHandler</a> from startup_gd32f10x_hd.o(.text) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[65]">DMA1_Channel1_IRQHandler</a> from startup_gd32f10x_hd.o(.text) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[66]">DMA1_Channel2_IRQHandler</a> from startup_gd32f10x_hd.o(.text) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[67]">DMA1_Channel3_4_IRQHandler</a> from startup_gd32f10x_hd.o(.text) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[29]">DebugMon_Handler</a> from gd32f10x_it.o(i.DebugMon_Handler) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[5c]">EXMC_IRQHandler</a> from startup_gd32f10x_hd.o(.text) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[32]">EXTI0_IRQHandler</a> from startup_gd32f10x_hd.o(.text) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[54]">EXTI10_15_IRQHandler</a> from startup_gd32f10x_hd.o(.text) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[33]">EXTI1_IRQHandler</a> from startup_gd32f10x_hd.o(.text) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[34]">EXTI2_IRQHandler</a> from startup_gd32f10x_hd.o(.text) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[35]">EXTI3_IRQHandler</a> from startup_gd32f10x_hd.o(.text) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[36]">EXTI4_IRQHandler</a> from startup_gd32f10x_hd.o(.text) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[43]">EXTI5_9_IRQHandler</a> from startup_gd32f10x_hd.o(.text) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[30]">FMC_IRQHandler</a> from startup_gd32f10x_hd.o(.text) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[24]">HardFault_Handler</a> from gd32f10x_it.o(i.HardFault_Handler) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[4c]">I2C0_ER_IRQHandler</a> from startup_gd32f10x_hd.o(.text) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[4b]">I2C0_EV_IRQHandler</a> from startup_gd32f10x_hd.o(.text) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[4e]">I2C1_ER_IRQHandler</a> from startup_gd32f10x_hd.o(.text) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[4d]">I2C1_EV_IRQHandler</a> from startup_gd32f10x_hd.o(.text) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[2d]">LVD_IRQHandler</a> from startup_gd32f10x_hd.o(.text) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[25]">MemManage_Handler</a> from gd32f10x_it.o(i.MemManage_Handler) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[23]">NMI_Handler</a> from gd32f10x_it.o(i.NMI_Handler) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[2a]">PendSV_Handler</a> from gd32f10x_it.o(i.PendSV_Handler) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[31]">RCU_IRQHandler</a> from startup_gd32f10x_hd.o(.text) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[55]">RTC_Alarm_IRQHandler</a> from startup_gd32f10x_hd.o(.text) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[2f]">RTC_IRQHandler</a> from startup_gd32f10x_hd.o(.text) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[22]">Reset_Handler</a> from startup_gd32f10x_hd.o(.text) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[5d]">SDIO_IRQHandler</a> from startup_gd32f10x_hd.o(.text) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[4f]">SPI0_IRQHandler</a> from startup_gd32f10x_hd.o(.text) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[50]">SPI1_IRQHandler</a> from startup_gd32f10x_hd.o(.text) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[5f]">SPI2_IRQHandler</a> from startup_gd32f10x_hd.o(.text) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[28]">SVC_Handler</a> from gd32f10x_it.o(i.SVC_Handler) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[2b]">SysTick_Handler</a> from startup_gd32f10x_hd.o(.text) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[68]">SystemInit</a> from system_gd32f10x.o(i.SystemInit) referenced from startup_gd32f10x_hd.o(.text)
 <LI><a href="#[2e]">TAMPER_IRQHandler</a> from startup_gd32f10x_hd.o(.text) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[44]">TIMER0_BRK_IRQHandler</a> from startup_gd32f10x_hd.o(.text) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[47]">TIMER0_Channel_IRQHandler</a> from startup_gd32f10x_hd.o(.text) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[46]">TIMER0_TRG_CMT_IRQHandler</a> from startup_gd32f10x_hd.o(.text) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[45]">TIMER0_UP_IRQHandler</a> from startup_gd32f10x_hd.o(.text) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[48]">TIMER1_IRQHandler</a> from main.o(i.TIMER1_IRQHandler) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[49]">TIMER2_IRQHandler</a> from startup_gd32f10x_hd.o(.text) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[4a]">TIMER3_IRQHandler</a> from startup_gd32f10x_hd.o(.text) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[5e]">TIMER4_IRQHandler</a> from startup_gd32f10x_hd.o(.text) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[62]">TIMER5_IRQHandler</a> from startup_gd32f10x_hd.o(.text) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[63]">TIMER6_IRQHandler</a> from startup_gd32f10x_hd.o(.text) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[57]">TIMER7_BRK_IRQHandler</a> from startup_gd32f10x_hd.o(.text) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[5a]">TIMER7_Channel_IRQHandler</a> from startup_gd32f10x_hd.o(.text) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[59]">TIMER7_TRG_CMT_IRQHandler</a> from startup_gd32f10x_hd.o(.text) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[58]">TIMER7_UP_IRQHandler</a> from startup_gd32f10x_hd.o(.text) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[60]">UART3_IRQHandler</a> from startup_gd32f10x_hd.o(.text) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[61]">UART4_IRQHandler</a> from startup_gd32f10x_hd.o(.text) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[51]">USART0_IRQHandler</a> from startup_gd32f10x_hd.o(.text) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[52]">USART1_IRQHandler</a> from usart.o(i.USART1_IRQHandler) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[53]">USART2_IRQHandler</a> from startup_gd32f10x_hd.o(.text) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[3f]">USBD_HP_CAN0_TX_IRQHandler</a> from startup_gd32f10x_hd.o(.text) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[40]">USBD_LP_CAN0_RX0_IRQHandler</a> from gd32f10x_it.o(i.USBD_LP_CAN0_RX0_IRQHandler) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[56]">USBD_WKUP_IRQHandler</a> from startup_gd32f10x_hd.o(.text) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[27]">UsageFault_Handler</a> from gd32f10x_it.o(i.UsageFault_Handler) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[2c]">WWDGT_IRQHandler</a> from startup_gd32f10x_hd.o(.text) referenced from startup_gd32f10x_hd.o(RESET)
 <LI><a href="#[106]">__main</a> from __main.o(!!!main) referenced from startup_gd32f10x_hd.o(.text)
 <LI><a href="#[8e]">_lv_disp_refr_timer</a> from lv_refr.o(i._lv_disp_refr_timer) referenced from lv_hal_disp.o(i.lv_disp_drv_register)
 <LI><a href="#[9e]">_lv_ll_get_head</a> from lv_ll.o(i._lv_ll_get_head) referenced from lv_group.o(i.lv_group_focus_next)
 <LI><a href="#[9d]">_lv_ll_get_next</a> from lv_ll.o(i._lv_ll_get_next) referenced from lv_group.o(i.lv_group_focus_next)
 <LI><a href="#[9f]">_lv_ll_get_prev</a> from lv_ll.o(i._lv_ll_get_prev) referenced from lv_group.o(i.lv_group_focus_prev)
 <LI><a href="#[a0]">_lv_ll_get_tail</a> from lv_ll.o(i._lv_ll_get_tail) referenced from lv_group.o(i.lv_group_focus_prev)
 <LI><a href="#[ad]">_out_buffer</a> from lv_printf.o(i._out_buffer) referenced from lv_printf.o(i.lv_snprintf)
 <LI><a href="#[ad]">_out_buffer</a> from lv_printf.o(i._out_buffer) referenced from lv_printf.o(i.lv_vsnprintf)
 <LI><a href="#[74]">_out_null</a> from lv_printf.o(i._out_null) referenced from lv_printf.o(i._vsnprintf)
 <LI><a href="#[6b]">_printf_input_char</a> from _printf_char_common.o(.text) referenced from _printf_char_common.o(.text)
 <LI><a href="#[6a]">_snputc</a> from _snputc.o(.text) referenced from __2snprintf.o(.text)
 <LI><a href="#[6c]">anim_timer</a> from lv_anim.o(i.anim_timer) referenced from lv_anim.o(i._lv_anim_core_init)
 <LI><a href="#[a]">cdc_acm_data_handler</a> from cdc_acm_core.o(i.cdc_acm_data_handler) referenced 2 times from usbd_cdc.o(.data)
 <LI><a href="#[8]">cdc_acm_deinit</a> from cdc_acm_core.o(i.cdc_acm_deinit) referenced 2 times from usbd_cdc.o(.data)
 <LI><a href="#[7]">cdc_acm_init</a> from cdc_acm_core.o(i.cdc_acm_init) referenced 2 times from usbd_cdc.o(.data)
 <LI><a href="#[9]">cdc_acm_req_handler</a> from cdc_acm_core.o(i.cdc_acm_req_handler) referenced 2 times from usbd_cdc.o(.data)
 <LI><a href="#[80]">color_blend_true_color_additive</a> from lv_draw_sw_blend.o(i.color_blend_true_color_additive) referenced from lv_draw_sw_blend.o(i.fill_blended)
 <LI><a href="#[80]">color_blend_true_color_additive</a> from lv_draw_sw_blend.o(i.color_blend_true_color_additive) referenced from lv_draw_sw_blend.o(i.map_blended)
 <LI><a href="#[82]">color_blend_true_color_multiply</a> from lv_draw_sw_blend.o(i.color_blend_true_color_multiply) referenced from lv_draw_sw_blend.o(i.fill_blended)
 <LI><a href="#[82]">color_blend_true_color_multiply</a> from lv_draw_sw_blend.o(i.color_blend_true_color_multiply) referenced from lv_draw_sw_blend.o(i.map_blended)
 <LI><a href="#[81]">color_blend_true_color_subtractive</a> from lv_draw_sw_blend.o(i.color_blend_true_color_subtractive) referenced from lv_draw_sw_blend.o(i.fill_blended)
 <LI><a href="#[81]">color_blend_true_color_subtractive</a> from lv_draw_sw_blend.o(i.color_blend_true_color_subtractive) referenced from lv_draw_sw_blend.o(i.map_blended)
 <LI><a href="#[c0]">cursor_blink_anim_cb</a> from lv_textarea.o(i.cursor_blink_anim_cb) referenced from lv_textarea.o(i.start_cursor_blink)
 <LI><a href="#[c1]">dark_color_filter_cb</a> from lv_theme_default.o(i.dark_color_filter_cb) referenced from lv_theme_default.o(i.style_init)
 <LI><a href="#[b5]">default_walker</a> from lv_tlsf.o(i.default_walker) referenced from lv_tlsf.o(i.lv_tlsf_walk_pool)
 <LI><a href="#[aa]">disp_flush</a> from lv_port_disp.o(i.disp_flush) referenced from lv_port_disp.o(i.lv_port_disp_init)
 <LI><a href="#[8c]">draw_part_begin_event_cb</a> from lv_calendar.o(i.draw_part_begin_event_cb) referenced from lv_calendar.o(i.lv_calendar_constructor)
 <LI><a href="#[9c]">find_item</a> from lv_draw_sw_gradient.o(i.find_item) referenced from lv_draw_sw_gradient.o(i.lv_gradient_get)
 <LI><a href="#[75]">find_oldest_item_life</a> from lv_draw_sw_gradient.o(i.find_oldest_item_life) referenced from lv_draw_sw_gradient.o(i.allocate_item)
 <LI><a href="#[9b]">flex_update</a> from lv_flex.o(i.flex_update) referenced from lv_flex.o(i.lv_flex_init)
 <LI><a href="#[c2]">grey_filter_cb</a> from lv_theme_default.o(i.grey_filter_cb) referenced from lv_theme_default.o(i.style_init)
 <LI><a href="#[b6]">ina226_update</a> from main.o(i.ina226_update) referenced from main.o(i.main)
 <LI><a href="#[87]">kern_pair_16_compare</a> from lv_font_fmt_txt.o(i.kern_pair_16_compare) referenced from lv_font_fmt_txt.o(i.get_kern_value)
 <LI><a href="#[86]">kern_pair_8_compare</a> from lv_font_fmt_txt.o(i.kern_pair_8_compare) referenced from lv_font_fmt_txt.o(i.get_kern_value)
 <LI><a href="#[b7]">key_update</a> from main.o(i.key_update) referenced from main.o(i.main)
 <LI><a href="#[ab]">keypad_read</a> from lv_port_indev.o(i.keypad_read) referenced from lv_port_indev.o(i.lv_port_indev_init)
 <LI><a href="#[76]">kill_oldest_item</a> from lv_draw_sw_gradient.o(i.kill_oldest_item) referenced from lv_draw_sw_gradient.o(i.allocate_item)
 <LI><a href="#[b3]">label_event_cb</a> from lv_textarea.o(i.label_event_cb) referenced from lv_textarea.o(i.lv_textarea_constructor)
 <LI><a href="#[5]">led1_set_state</a> from led.o(i.led1_set_state) referenced 2 times from led.o(.data)
 <LI><a href="#[6]">led2_set_state</a> from led.o(i.led2_set_state) referenced 2 times from led.o(.data)
 <LI><a href="#[a8]">lv_anim_path_ease_out</a> from lv_anim.o(i.lv_anim_path_ease_out) referenced from lv_obj_scroll.o(i.lv_obj_scroll_by)
 <LI><a href="#[a8]">lv_anim_path_ease_out</a> from lv_anim.o(i.lv_anim_path_ease_out) referenced from nt_pm.o(i.nt_pm_anim_default_init)
 <LI><a href="#[a8]">lv_anim_path_ease_out</a> from lv_anim.o(i.lv_anim_path_ease_out) referenced from lv_roller.o(i.refr_position)
 <LI><a href="#[88]">lv_anim_path_linear</a> from lv_anim.o(i.lv_anim_path_linear) referenced from lv_anim.o(i.lv_anim_init)
 <LI><a href="#[88]">lv_anim_path_linear</a> from lv_anim.o(i.lv_anim_path_linear) referenced from lv_style.o(i.lv_style_transition_dsc_init)
 <LI><a href="#[88]">lv_anim_path_linear</a> from lv_anim.o(i.lv_anim_path_linear) referenced from lv_theme_default.o(i.style_init)
 <LI><a href="#[b1]">lv_anim_path_step</a> from lv_anim.o(i.lv_anim_path_step) referenced from lv_textarea.o(i.lv_textarea_add_char)
 <LI><a href="#[b1]">lv_anim_path_step</a> from lv_anim.o(i.lv_anim_path_step) referenced from lv_textarea.o(i.lv_textarea_add_text)
 <LI><a href="#[b1]">lv_anim_path_step</a> from lv_anim.o(i.lv_anim_path_step) referenced from lv_textarea.o(i.lv_textarea_set_text)
 <LI><a href="#[b1]">lv_anim_path_step</a> from lv_anim.o(i.lv_anim_path_step) referenced from lv_textarea.o(i.start_cursor_blink)
 <LI><a href="#[7d]">lv_area_get_height</a> from lv_flex.o(i.lv_area_get_height) referenced from lv_flex.o(i.children_repos)
 <LI><a href="#[7f]">lv_area_get_height</a> from lv_bar.o(i.lv_area_get_height) referenced from lv_bar.o(i.draw_indic)
 <LI><a href="#[7c]">lv_area_get_width</a> from lv_flex.o(i.lv_area_get_width) referenced from lv_flex.o(i.children_repos)
 <LI><a href="#[7e]">lv_area_get_width</a> from lv_bar.o(i.lv_area_get_width) referenced from lv_bar.o(i.draw_indic)
 <LI><a href="#[7b]">lv_area_set_height</a> from lv_area.o(i.lv_area_set_height) referenced from lv_flex.o(i.children_repos)
 <LI><a href="#[7a]">lv_area_set_width</a> from lv_area.o(i.lv_area_set_width) referenced from lv_flex.o(i.children_repos)
 <LI><a href="#[89]">lv_async_timer_cb</a> from lv_async.o(i.lv_async_timer_cb) referenced from lv_async.o(i.lv_async_call)
 <LI><a href="#[8a]">lv_bar_anim</a> from lv_bar.o(i.lv_bar_anim) referenced from lv_bar.o(i.lv_bar_set_value_with_anim)
 <LI><a href="#[8b]">lv_bar_anim_ready</a> from lv_bar.o(i.lv_bar_anim_ready) referenced from lv_bar.o(i.lv_bar_set_value_with_anim)
 <LI><a href="#[d0]">lv_bar_constructor</a> from lv_bar.o(i.lv_bar_constructor) referenced from lv_bar.o(.constdata)
 <LI><a href="#[d1]">lv_bar_destructor</a> from lv_bar.o(i.lv_bar_destructor) referenced from lv_bar.o(.constdata)
 <LI><a href="#[d2]">lv_bar_event</a> from lv_bar.o(i.lv_bar_event) referenced from lv_bar.o(.constdata)
 <LI><a href="#[d3]">lv_btn_constructor</a> from lv_btn.o(i.lv_btn_constructor) referenced from lv_btn.o(.constdata)
 <LI><a href="#[d4]">lv_btnmatrix_constructor</a> from lv_btnmatrix.o(i.lv_btnmatrix_constructor) referenced from lv_btnmatrix.o(.constdata)
 <LI><a href="#[d5]">lv_btnmatrix_destructor</a> from lv_btnmatrix.o(i.lv_btnmatrix_destructor) referenced from lv_btnmatrix.o(.constdata)
 <LI><a href="#[d6]">lv_btnmatrix_event</a> from lv_btnmatrix.o(i.lv_btnmatrix_event) referenced from lv_btnmatrix.o(.constdata)
 <LI><a href="#[c9]">lv_calendar_constructor</a> from lv_calendar.o(i.lv_calendar_constructor) referenced from lv_calendar.o(.constdata)
 <LI><a href="#[d7]">lv_checkbox_constructor</a> from lv_checkbox.o(i.lv_checkbox_constructor) referenced from lv_checkbox.o(.constdata)
 <LI><a href="#[d8]">lv_checkbox_destructor</a> from lv_checkbox.o(i.lv_checkbox_destructor) referenced from lv_checkbox.o(.constdata)
 <LI><a href="#[d9]">lv_checkbox_event</a> from lv_checkbox.o(i.lv_checkbox_event) referenced from lv_checkbox.o(.constdata)
 <LI><a href="#[8f]">lv_draw_mask_angle</a> from lv_draw_mask.o(i.lv_draw_mask_angle) referenced from lv_draw_mask.o(i.lv_draw_mask_angle_init)
 <LI><a href="#[90]">lv_draw_mask_line</a> from lv_draw_mask.o(i.lv_draw_mask_line) referenced from lv_draw_mask.o(i.lv_draw_mask_line_points_init)
 <LI><a href="#[91]">lv_draw_mask_radius</a> from lv_draw_mask.o(i.lv_draw_mask_radius) referenced from lv_draw_mask.o(i.lv_draw_mask_radius_init)
 <LI><a href="#[92]">lv_draw_sw_arc</a> from lv_draw_sw_arc.o(i.lv_draw_sw_arc) referenced from lv_draw_sw.o(i.lv_draw_sw_init_ctx)
 <LI><a href="#[94]">lv_draw_sw_bg</a> from lv_draw_sw_rect.o(i.lv_draw_sw_bg) referenced from lv_draw_sw.o(i.lv_draw_sw_init_ctx)
 <LI><a href="#[9a]">lv_draw_sw_blend_basic</a> from lv_draw_sw_blend.o(i.lv_draw_sw_blend_basic) referenced from lv_draw_sw.o(i.lv_draw_sw_init_ctx)
 <LI><a href="#[96]">lv_draw_sw_img_decoded</a> from lv_draw_sw_img.o(i.lv_draw_sw_img_decoded) referenced from lv_draw_sw.o(i.lv_draw_sw_init_ctx)
 <LI><a href="#[8d]">lv_draw_sw_init_ctx</a> from lv_draw_sw.o(i.lv_draw_sw_init_ctx) referenced from lv_hal_disp.o(i.lv_disp_drv_init)
 <LI><a href="#[95]">lv_draw_sw_letter</a> from lv_draw_sw_letter.o(i.lv_draw_sw_letter) referenced from lv_draw_sw.o(i.lv_draw_sw_init_ctx)
 <LI><a href="#[97]">lv_draw_sw_line</a> from lv_draw_sw_line.o(i.lv_draw_sw_line) referenced from lv_draw_sw.o(i.lv_draw_sw_init_ctx)
 <LI><a href="#[98]">lv_draw_sw_polygon</a> from lv_draw_sw_polygon.o(i.lv_draw_sw_polygon) referenced from lv_draw_sw.o(i.lv_draw_sw_init_ctx)
 <LI><a href="#[93]">lv_draw_sw_rect</a> from lv_draw_sw_rect.o(i.lv_draw_sw_rect) referenced from lv_draw_sw.o(i.lv_draw_sw_init_ctx)
 <LI><a href="#[99]">lv_draw_sw_wait_for_finish</a> from lv_draw_sw.o(i.lv_draw_sw_wait_for_finish) referenced from lv_draw_sw.o(i.lv_draw_sw_init_ctx)
 <LI><a href="#[da]">lv_dropdown_constructor</a> from lv_dropdown.o(i.lv_dropdown_constructor) referenced from lv_dropdown.o(.constdata)
 <LI><a href="#[db]">lv_dropdown_destructor</a> from lv_dropdown.o(i.lv_dropdown_destructor) referenced from lv_dropdown.o(.constdata)
 <LI><a href="#[dc]">lv_dropdown_event</a> from lv_dropdown.o(i.lv_dropdown_event) referenced from lv_dropdown.o(.constdata)
 <LI><a href="#[df]">lv_dropdown_list_event</a> from lv_dropdown.o(i.lv_dropdown_list_event) referenced from lv_dropdown.o(.constdata)
 <LI><a href="#[dd]">lv_dropdownlist_constructor</a> from lv_dropdown.o(i.lv_dropdownlist_constructor) referenced from lv_dropdown.o(.constdata)
 <LI><a href="#[de]">lv_dropdownlist_destructor</a> from lv_dropdown.o(i.lv_dropdownlist_destructor) referenced from lv_dropdown.o(.constdata)
 <LI><a href="#[cf]">lv_font_get_bitmap_fmt_txt</a> from lv_font_fmt_txt.o(i.lv_font_get_bitmap_fmt_txt) referenced 4 times from lv_font_montserrat_14.o(.constdata)
 <LI><a href="#[ce]">lv_font_get_glyph_dsc_fmt_txt</a> from lv_font_fmt_txt.o(i.lv_font_get_glyph_dsc_fmt_txt) referenced 4 times from lv_font_montserrat_14.o(.constdata)
 <LI><a href="#[70]">lv_img_decoder_built_in_close</a> from lv_img_decoder.o(i.lv_img_decoder_built_in_close) referenced from lv_img_decoder.o(i._lv_img_decoder_init)
 <LI><a href="#[6d]">lv_img_decoder_built_in_info</a> from lv_img_decoder.o(i.lv_img_decoder_built_in_info) referenced from lv_img_decoder.o(i._lv_img_decoder_init)
 <LI><a href="#[6e]">lv_img_decoder_built_in_open</a> from lv_img_decoder.o(i.lv_img_decoder_built_in_open) referenced from lv_img_decoder.o(i._lv_img_decoder_init)
 <LI><a href="#[6f]">lv_img_decoder_built_in_read_line</a> from lv_img_decoder.o(i.lv_img_decoder_built_in_read_line) referenced from lv_img_decoder.o(i._lv_img_decoder_init)
 <LI><a href="#[a1]">lv_indev_read_timer_cb</a> from lv_indev.o(i.lv_indev_read_timer_cb) referenced from lv_hal_indev.o(i.lv_indev_drv_register)
 <LI><a href="#[e0]">lv_label_constructor</a> from lv_label.o(i.lv_label_constructor) referenced from lv_label.o(.constdata)
 <LI><a href="#[e1]">lv_label_destructor</a> from lv_label.o(i.lv_label_destructor) referenced from lv_label.o(.constdata)
 <LI><a href="#[e2]">lv_label_event</a> from lv_label.o(i.lv_label_event) referenced from lv_label.o(.constdata)
 <LI><a href="#[a4]">lv_mem_walker</a> from lv_mem.o(i.lv_mem_walker) referenced from lv_mem.o(i.lv_mem_monitor)
 <LI><a href="#[c6]">lv_obj_constructor</a> from lv_obj.o(i.lv_obj_constructor) referenced from lv_obj.o(.constdata)
 <LI><a href="#[a5]">lv_obj_del_async_cb</a> from lv_obj_tree.o(i.lv_obj_del_async_cb) referenced from lv_obj_tree.o(i.lv_obj_del_async)
 <LI><a href="#[c7]">lv_obj_destructor</a> from lv_obj.o(i.lv_obj_destructor) referenced from lv_obj.o(.constdata)
 <LI><a href="#[c8]">lv_obj_event</a> from lv_obj.o(i.lv_obj_event) referenced from lv_obj.o(.constdata)
 <LI><a href="#[84]">lv_obj_get_height</a> from lv_obj_pos.o(i.lv_obj_get_height) referenced from lv_flex.o(i.find_track_end)
 <LI><a href="#[83]">lv_obj_get_width</a> from lv_obj_pos.o(i.lv_obj_get_width) referenced from lv_flex.o(i.find_track_end)
 <LI><a href="#[be]">lv_obj_set_y</a> from lv_obj_pos.o(i.lv_obj_set_y) referenced from nt_pm.o(i.nt_pm_view_rotations_anim_create)
 <LI><a href="#[e3]">lv_roller_constructor</a> from lv_roller.o(i.lv_roller_constructor) referenced from lv_roller.o(.constdata)
 <LI><a href="#[e4]">lv_roller_event</a> from lv_roller.o(i.lv_roller_event) referenced from lv_roller.o(.constdata)
 <LI><a href="#[e5]">lv_roller_label_event</a> from lv_roller.o(i.lv_roller_label_event) referenced from lv_roller.o(.constdata)
 <LI><a href="#[e6]">lv_slider_constructor</a> from lv_slider.o(i.lv_slider_constructor) referenced from lv_slider.o(.constdata)
 <LI><a href="#[e7]">lv_slider_event</a> from lv_slider.o(i.lv_slider_event) referenced from lv_slider.o(.constdata)
 <LI><a href="#[cc]">lv_spinbox_constructor</a> from lv_spinbox.o(i.lv_spinbox_constructor) referenced from lv_spinbox.o(.constdata)
 <LI><a href="#[cd]">lv_spinbox_event</a> from lv_spinbox.o(i.lv_spinbox_event) referenced from lv_spinbox.o(.constdata)
 <LI><a href="#[ae]">lv_switch_anim_exec_cb</a> from lv_switch.o(i.lv_switch_anim_exec_cb) referenced from lv_switch.o(i.lv_switch_trigger_anim)
 <LI><a href="#[af]">lv_switch_anim_ready</a> from lv_switch.o(i.lv_switch_anim_ready) referenced from lv_switch.o(i.lv_switch_trigger_anim)
 <LI><a href="#[e8]">lv_switch_constructor</a> from lv_switch.o(i.lv_switch_constructor) referenced from lv_switch.o(.constdata)
 <LI><a href="#[e9]">lv_switch_destructor</a> from lv_switch.o(i.lv_switch_destructor) referenced from lv_switch.o(.constdata)
 <LI><a href="#[ea]">lv_switch_event</a> from lv_switch.o(i.lv_switch_event) referenced from lv_switch.o(.constdata)
 <LI><a href="#[eb]">lv_table_constructor</a> from lv_table.o(i.lv_table_constructor) referenced from lv_table.o(.constdata)
 <LI><a href="#[ec]">lv_table_destructor</a> from lv_table.o(i.lv_table_destructor) referenced from lv_table.o(.constdata)
 <LI><a href="#[ed]">lv_table_event</a> from lv_table.o(i.lv_table_event) referenced from lv_table.o(.constdata)
 <LI><a href="#[ee]">lv_textarea_constructor</a> from lv_textarea.o(i.lv_textarea_constructor) referenced from lv_textarea.o(.constdata)
 <LI><a href="#[ef]">lv_textarea_destructor</a> from lv_textarea.o(i.lv_textarea_destructor) referenced from lv_textarea.o(.constdata)
 <LI><a href="#[f0]">lv_textarea_event</a> from lv_textarea.o(i.lv_textarea_event) referenced from lv_textarea.o(.constdata)
 <LI><a href="#[1b]">lv_txt_unicode_to_utf8</a> from lv_txt.o(i.lv_txt_unicode_to_utf8) referenced 2 times from lv_txt.o(.data)
 <LI><a href="#[1c]">lv_txt_utf8_conv_wc</a> from lv_txt.o(i.lv_txt_utf8_conv_wc) referenced 2 times from lv_txt.o(.data)
 <LI><a href="#[1f]">lv_txt_utf8_get_byte_id</a> from lv_txt.o(i.lv_txt_utf8_get_byte_id) referenced 2 times from lv_txt.o(.data)
 <LI><a href="#[20]">lv_txt_utf8_get_char_id</a> from lv_txt.o(i.lv_txt_utf8_get_char_id) referenced 2 times from lv_txt.o(.data)
 <LI><a href="#[21]">lv_txt_utf8_get_length</a> from lv_txt.o(i.lv_txt_utf8_get_length) referenced 2 times from lv_txt.o(.data)
 <LI><a href="#[1d]">lv_txt_utf8_next</a> from lv_txt.o(i.lv_txt_utf8_next) referenced 2 times from lv_txt.o(.data)
 <LI><a href="#[1e]">lv_txt_utf8_prev</a> from lv_txt.o(i.lv_txt_utf8_prev) referenced 2 times from lv_txt.o(.data)
 <LI><a href="#[1a]">lv_txt_utf8_size</a> from lv_txt.o(i.lv_txt_utf8_size) referenced 2 times from lv_txt.o(.data)
 <LI><a href="#[b8]">month_event_cb</a> from lv_calendar_header_arrow.o(i.month_event_cb) referenced 2 times from lv_calendar_header_arrow.o(i.my_constructor)
 <LI><a href="#[ca]">my_constructor</a> from lv_calendar_header_arrow.o(i.my_constructor) referenced 2 times from lv_calendar_header_arrow.o(.constdata)
 <LI><a href="#[bd]">nt_pm_view_rotations_anim_finish</a> from nt_pm.o(i.nt_pm_view_rotations_anim_finish) referenced from nt_pm.o(i.nt_pm_view_rotations_anim_create)
 <LI><a href="#[77]">on_event</a> from dialplate.o(i.on_event) referenced 3 times from dialplate.o(i.attach_event)
 <LI><a href="#[c3]">ontimer_update</a> from dialplate.o(i.ontimer_update) referenced 3 times from dialplate.o(i.view_did_appear)
 <LI><a href="#[b0]">pwd_char_hider_anim</a> from lv_textarea.o(i.pwd_char_hider_anim) referenced from lv_textarea.o(i.lv_textarea_add_char)
 <LI><a href="#[b0]">pwd_char_hider_anim</a> from lv_textarea.o(i.pwd_char_hider_anim) referenced from lv_textarea.o(i.lv_textarea_add_text)
 <LI><a href="#[b0]">pwd_char_hider_anim</a> from lv_textarea.o(i.pwd_char_hider_anim) referenced from lv_textarea.o(i.lv_textarea_set_text)
 <LI><a href="#[b2]">pwd_char_hider_anim_ready</a> from lv_textarea.o(i.pwd_char_hider_anim_ready) referenced from lv_textarea.o(i.lv_textarea_add_char)
 <LI><a href="#[b2]">pwd_char_hider_anim_ready</a> from lv_textarea.o(i.pwd_char_hider_anim_ready) referenced from lv_textarea.o(i.lv_textarea_add_text)
 <LI><a href="#[b2]">pwd_char_hider_anim_ready</a> from lv_textarea.o(i.pwd_char_hider_anim_ready) referenced from lv_textarea.o(i.lv_textarea_set_text)
 <LI><a href="#[a6]">scroll_anim_ready_cb</a> from lv_obj_scroll.o(i.scroll_anim_ready_cb) referenced from lv_obj_scroll.o(i.lv_obj_scroll_by)
 <LI><a href="#[bf]">scroll_anim_ready_cb</a> from lv_roller.o(i.scroll_anim_ready_cb) referenced from lv_roller.o(i.refr_position)
 <LI><a href="#[a7]">scroll_x_anim</a> from lv_obj_scroll.o(i.scroll_x_anim) referenced from lv_obj_scroll.o(i.lv_obj_scroll_by)
 <LI><a href="#[a7]">scroll_x_anim</a> from lv_obj_scroll.o(i.scroll_x_anim) referenced from lv_obj_scroll.o(i.lv_obj_scroll_to_x)
 <LI><a href="#[a7]">scroll_x_anim</a> from lv_obj_scroll.o(i.scroll_x_anim) referenced from lv_obj_scroll.o(i.scroll_area_into_view)
 <LI><a href="#[a9]">scroll_y_anim</a> from lv_obj_scroll.o(i.scroll_y_anim) referenced from lv_obj_scroll.o(i.lv_obj_scroll_by)
 <LI><a href="#[a9]">scroll_y_anim</a> from lv_obj_scroll.o(i.scroll_y_anim) referenced from lv_obj_scroll.o(i.lv_obj_scroll_to_y)
 <LI><a href="#[a9]">scroll_y_anim</a> from lv_obj_scroll.o(i.scroll_y_anim) referenced from lv_obj_scroll.o(i.scroll_area_into_view)
 <LI><a href="#[a2]">set_ofs_x_anim</a> from lv_label.o(i.set_ofs_x_anim) referenced from lv_label.o(i.lv_label_refr_text)
 <LI><a href="#[a2]">set_ofs_x_anim</a> from lv_label.o(i.set_ofs_x_anim) referenced from lv_label.o(i.lv_label_set_long_mode)
 <LI><a href="#[a3]">set_ofs_y_anim</a> from lv_label.o(i.set_ofs_y_anim) referenced from lv_label.o(i.lv_label_refr_text)
 <LI><a href="#[a3]">set_ofs_y_anim</a> from lv_label.o(i.set_ofs_y_anim) referenced from lv_label.o(i.lv_label_set_long_mode)
 <LI><a href="#[ac]">set_y_anim</a> from lv_roller.o(i.set_y_anim) referenced from lv_roller.o(i.lv_roller_event)
 <LI><a href="#[ac]">set_y_anim</a> from lv_roller.o(i.set_y_anim) referenced from lv_roller.o(i.refr_position)
 <LI><a href="#[b4]">theme_apply</a> from lv_theme_default.o(i.theme_apply) referenced from lv_theme_default.o(i.lv_theme_default_init)
 <LI><a href="#[71]">trans_anim_cb</a> from lv_obj_style.o(i.trans_anim_cb) referenced from lv_obj_style.o(i._lv_obj_style_create_transition)
 <LI><a href="#[73]">trans_anim_ready_cb</a> from lv_obj_style.o(i.trans_anim_ready_cb) referenced from lv_obj_style.o(i._lv_obj_style_create_transition)
 <LI><a href="#[72]">trans_anim_start_cb</a> from lv_obj_style.o(i.trans_anim_start_cb) referenced from lv_obj_style.o(i._lv_obj_style_create_transition)
 <LI><a href="#[85]">unicode_list_compare</a> from lv_font_fmt_txt.o(i.unicode_list_compare) referenced from lv_font_fmt_txt.o(i.get_glyph_dsc_id)
 <LI><a href="#[c]">usbd_clearfeature</a> from usbd_std.o(i.usbd_clearfeature) referenced 2 times from usbd_std.o(.data)
 <LI><a href="#[18]">usbd_configuration_descriptor_get</a> from usbd_std.o(i.usbd_configuration_descriptor_get) referenced 2 times from usbd_std.o(.data)
 <LI><a href="#[17]">usbd_device_descriptor_get</a> from usbd_std.o(i.usbd_device_descriptor_get) referenced 2 times from usbd_std.o(.data)
 <LI><a href="#[12]">usbd_getconfiguration</a> from usbd_std.o(i.usbd_getconfiguration) referenced 2 times from usbd_std.o(.data)
 <LI><a href="#[10]">usbd_getdescriptor</a> from usbd_std.o(i.usbd_getdescriptor) referenced 2 times from usbd_std.o(.data)
 <LI><a href="#[14]">usbd_getinterface</a> from usbd_std.o(i.usbd_getinterface) referenced 2 times from usbd_std.o(.data)
 <LI><a href="#[b]">usbd_getstatus</a> from usbd_std.o(i.usbd_getstatus) referenced 2 times from usbd_std.o(.data)
 <LI><a href="#[d]">usbd_reserved</a> from usbd_std.o(i.usbd_reserved) referenced 4 times from usbd_std.o(.data)
 <LI><a href="#[f]">usbd_setaddress</a> from usbd_std.o(i.usbd_setaddress) referenced 2 times from usbd_std.o(.data)
 <LI><a href="#[13]">usbd_setconfiguration</a> from usbd_std.o(i.usbd_setconfiguration) referenced 2 times from usbd_std.o(.data)
 <LI><a href="#[11]">usbd_setdescriptor</a> from usbd_std.o(i.usbd_setdescriptor) referenced 2 times from usbd_std.o(.data)
 <LI><a href="#[e]">usbd_setfeature</a> from usbd_std.o(i.usbd_setfeature) referenced 2 times from usbd_std.o(.data)
 <LI><a href="#[15]">usbd_setinterface</a> from usbd_std.o(i.usbd_setinterface) referenced 2 times from usbd_std.o(.data)
 <LI><a href="#[19]">usbd_string_descriptor_get</a> from usbd_std.o(i.usbd_string_descriptor_get) referenced 2 times from usbd_std.o(.data)
 <LI><a href="#[16]">usbd_synchframe</a> from usbd_std.o(i.usbd_synchframe) referenced 2 times from usbd_std.o(.data)
 <LI><a href="#[b9]">value_changed_event_cb</a> from lv_calendar_header_arrow.o(i.value_changed_event_cb) referenced 2 times from lv_calendar_header_arrow.o(i.my_constructor)
 <LI><a href="#[f4]">view_did_appear</a> from dialplate.o(i.view_did_appear) referenced 3 times from dialplate.o(.constdata)
 <LI><a href="#[f6]">view_did_disappear</a> from dialplate.o(i.view_did_disappear) referenced 3 times from dialplate.o(.constdata)
 <LI><a href="#[f2]">view_did_load</a> from dialplate.o(i.view_did_load) referenced 3 times from dialplate.o(.constdata)
 <LI><a href="#[f7]">view_did_unload</a> from dialplate.o(i.view_did_unload) referenced 3 times from dialplate.o(.constdata)
 <LI><a href="#[f1]">view_load</a> from dialplate.o(i.view_load) referenced 3 times from dialplate.o(.constdata)
 <LI><a href="#[f3]">view_will_appear</a> from dialplate.o(i.view_will_appear) referenced 3 times from dialplate.o(.constdata)
 <LI><a href="#[f5]">view_will_disappear</a> from dialplate.o(i.view_will_disappear) referenced 3 times from dialplate.o(.constdata)
 <LI><a href="#[ba]">year_event_cb</a> from lv_calendar_header_dropdown.o(i.year_event_cb) referenced from lv_calendar_header_dropdown.o(i.my_constructor)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[106]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[107]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[109]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[5aa]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[5ab]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[5ac]"></a>__decompress</STRONG> (Thumb, 90 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[5ad]"></a>__decompress1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[5ae]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[10a]"></a>_printf_f</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_f.o(.ARM.Collect$$_printf_percent$$00000003))
<BR><BR>[Stack]<UL><LI>Max Depth = 324 + Unknown Stack Size
<LI>Call Chain = _printf_f &rArr; _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[125]"></a>_printf_percent</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[10c]"></a>_printf_s</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_s.o(.ARM.Collect$$_printf_percent$$00000014))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = _printf_s &rArr; _printf_string &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
</UL>

<P><STRONG><a name="[5af]"></a>_printf_percent_end</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017))

<P><STRONG><a name="[115]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[5b0]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[5b1]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[10e]"></a>__rt_lib_init_lc_common</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))
<BR><BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>

<P><STRONG><a name="[5b2]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[5b3]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[5b4]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[5b5]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[5b6]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[5b7]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[110]"></a>__rt_lib_init_lc_numeric_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000016))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_lc_numeric_2 &rArr; _get_lc_numeric
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric
</UL>

<P><STRONG><a name="[5b8]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[5b9]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[5ba]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[5bb]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[5bc]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[5bd]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[5be]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[5bf]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[5c0]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[5c1]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[5c2]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[5c3]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[5c4]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[11a]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[5c5]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[5c6]"></a>__rt_lib_shutdown_fini_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[5c7]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[5c8]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000011))

<P><STRONG><a name="[5c9]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000012))

<P><STRONG><a name="[5ca]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[5cb]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[5cc]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[108]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[5cd]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[112]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[114]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[5ce]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[116]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 504 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; nt_start_page &rArr; nt_page_state_update &rArr;  nt_page_state_update (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[5cf]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[139]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[119]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[5d0]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[11b]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[22]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_gd32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_gd32f10x_hd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>ADC0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f10x_hd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>ADC2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>CAN0_EWMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>CAN0_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>DMA0_Channel0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>DMA0_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>DMA0_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>DMA0_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>DMA0_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>DMA0_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>DMA0_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>DMA1_Channel0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>DMA1_Channel3_4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>EXMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>EXTI10_15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>EXTI5_9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>I2C0_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>I2C0_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>LVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>RCU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>TIMER0_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>TIMER0_Channel_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>TIMER0_TRG_CMT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>TIMER0_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>TIMER3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>TIMER4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>TIMER5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>TIMER6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>TIMER7_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>TIMER7_Channel_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>TIMER7_TRG_CMT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>TIMER7_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>UART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>USART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>USBD_HP_CAN0_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>USBD_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>WWDGT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[138]"></a>__user_initial_stackheap</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, startup_gd32f10x_hd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[1d8]"></a>__aeabi_uldivmod</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, lludivv7m.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ntoa_long_long
</UL>

<P><STRONG><a name="[5d1]"></a>_ll_udiv</STRONG> (Thumb, 238 bytes, Stack size 48 bytes, lludivv7m.o(.text), UNUSED)

<P><STRONG><a name="[11d]"></a>__2snprintf</STRONG> (Thumb, 50 bytes, Stack size 40 bytes, __2snprintf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = __2snprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strified
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strifica
</UL>

<P><STRONG><a name="[121]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>

<P><STRONG><a name="[122]"></a>_printf_post_padding</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_post_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>

<P><STRONG><a name="[120]"></a>_printf_str</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, _printf_str.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[123]"></a>__printf</STRONG> (Thumb, 388 bytes, Stack size 40 bytes, __printf_flags_ss_wp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[400]"></a>strcpy</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, strcpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_open
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_set_options
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_text
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_set_options
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
</UL>

<P><STRONG><a name="[1ca]"></a>strlen</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, strlen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_get_ext
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_open
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_set_options
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_text
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_char
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_updatevalue
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_event
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_ins
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_cut
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_get_selected_str
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_set_options
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_ins_text
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_del_char
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_text
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwd_char_hider
</UL>

<P><STRONG><a name="[40f]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_read_cached
</UL>

<P><STRONG><a name="[126]"></a>__rt_memcpy</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[5d2]"></a>_memcpy_lastbytes</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_v6.o(.text), UNUSED)

<P><STRONG><a name="[127]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_start_page
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_nt_buffer_node_move_back
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL>

<P><STRONG><a name="[5d3]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[5d4]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[5d5]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[12b]"></a>__aeabi_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strifica
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
</UL>

<P><STRONG><a name="[128]"></a>__rt_memclr</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[5d6]"></a>_memset</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[1d3]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_nt_buffer_node_move_back
</UL>

<P><STRONG><a name="[5d7]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[5d8]"></a>__rt_memclr_w</STRONG> (Thumb, 78 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[129]"></a>_memset_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL>

<P><STRONG><a name="[12a]"></a>strncpy</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, strncpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_start_page
</UL>

<P><STRONG><a name="[1e4]"></a>strcmp</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, strcmpv7m.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_open
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_info
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;has_popovers_in_top_row
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;allocate_btn_areas_and_controls
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;insert_handler
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_pm_name_get_view_id
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_pm_name_get_page_id
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric
</UL>

<P><STRONG><a name="[5d9]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[5da]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[5db]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[5dc]"></a>__lib_sel_fp_printf</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, _printf_fp_dec.o(.text), UNUSED)

<P><STRONG><a name="[132]"></a>_printf_fp_dec_real</STRONG> (Thumb, 620 bytes, Stack size 104 bytes, _printf_fp_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[11e]"></a>_printf_char_common</STRONG> (Thumb, 32 bytes, Stack size 64 bytes, _printf_char_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>

<P><STRONG><a name="[11f]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _sputc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>

<P><STRONG><a name="[6a]"></a>_snputc</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _snputc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> __2snprintf.o(.text)
</UL>
<P><STRONG><a name="[135]"></a>_printf_cs_common</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[136]"></a>_printf_char</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_char.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[10d]"></a>_printf_string</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_string &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_s
</UL>

<P><STRONG><a name="[10f]"></a>__rt_locale</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_locale_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_common
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[131]"></a>_ll_udiv10</STRONG> (Thumb, 138 bytes, Stack size 12 bytes, lludiv10.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _ll_udiv10
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[134]"></a>_printf_fp_infnan</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, _printf_fp_infnan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_fp_infnan &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[12d]"></a>_btod_etento</STRONG> (Thumb, 224 bytes, Stack size 72 bytes, bigflt0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[5dd]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[137]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[5de]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[113]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[118]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[11c]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[5df]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[5e0]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[5e1]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[12e]"></a>_btod_d2e</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e))
<BR><BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_norm_op1
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[13b]"></a>_d2e_denorm_low</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e_denorm_low))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_norm_op1
</UL>

<P><STRONG><a name="[13a]"></a>_d2e_norm_op1</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e_norm_op1))
<BR><BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_denorm_low
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_d2e
</UL>

<P><STRONG><a name="[13c]"></a>__btod_div_common</STRONG> (Thumb, 696 bytes, Stack size 24 bytes, btod.o(CL$$btod_div_common))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __btod_div_common
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>

<P><STRONG><a name="[13d]"></a>_e2e</STRONG> (Thumb, 220 bytes, Stack size 24 bytes, btod.o(CL$$btod_e2e))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _e2e
</UL>
<BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>

<P><STRONG><a name="[12f]"></a>_btod_ediv</STRONG> (Thumb, 42 bytes, Stack size 28 bytes, btod.o(CL$$btod_ediv))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = _btod_ediv &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_div_common
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[130]"></a>_btod_emul</STRONG> (Thumb, 42 bytes, Stack size 28 bytes, btod.o(CL$$btod_emul))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_mult_common
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[13e]"></a>__btod_mult_common</STRONG> (Thumb, 580 bytes, Stack size 16 bytes, btod.o(CL$$btod_mult_common))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __btod_mult_common
</UL>
<BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
</UL>

<P><STRONG><a name="[26]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32f10x_it.o(i.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32f10x_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[13f]"></a>Get_Bus_Voltage</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, ina226.o(i.Get_Bus_Voltage))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = Get_Bus_Voltage &rArr; INA226_GetVoltage &rArr; INA226_ReadData &rArr; ina226_i2c_read_byte &rArr; ina226_i2c_nack &rArr; ina226_sda_out_mode &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INA226_GetVoltage
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INA226_Update
</UL>

<P><STRONG><a name="[143]"></a>Get_Power</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, ina226.o(i.Get_Power))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = Get_Power &rArr; INA226_GetPower &rArr; INA226_ReadData &rArr; ina226_i2c_read_byte &rArr; ina226_i2c_nack &rArr; ina226_sda_out_mode &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INA226_GetPower
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INA226_Update
</UL>

<P><STRONG><a name="[145]"></a>Get_Shunt_Current</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, ina226.o(i.Get_Shunt_Current))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = Get_Shunt_Current &rArr; INA226_GetShuntCurrent &rArr; INA226_ReadData &rArr; ina226_i2c_read_byte &rArr; ina226_i2c_nack &rArr; ina226_sda_out_mode &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INA226_GetShuntCurrent
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INA226_Update
</UL>

<P><STRONG><a name="[148]"></a>Get_Shunt_voltage</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, ina226.o(i.Get_Shunt_voltage))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = Get_Shunt_voltage &rArr; INA226_GetShuntVoltage &rArr; INA226_ReadData &rArr; ina226_i2c_read_byte &rArr; ina226_i2c_nack &rArr; ina226_sda_out_mode &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INA226_GetShuntVoltage
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INA226_Update
</UL>

<P><STRONG><a name="[24]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32f10x_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[14e]"></a>INA226_Init</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, ina226.o(i.INA226_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = INA226_Init &rArr; INA226_Get_MID &rArr; INA226_ReadData &rArr; ina226_i2c_read_byte &rArr; ina226_i2c_nack &rArr; ina226_sda_out_mode &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_gpio_init
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INA226_SendData
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INA226_Get_MID
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INA226_Get_ID
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[156]"></a>INA226_Update</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, ina226.o(i.INA226_Update))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = INA226_Update &rArr; Get_Shunt_voltage &rArr; INA226_GetShuntVoltage &rArr; INA226_ReadData &rArr; ina226_i2c_read_byte &rArr; ina226_i2c_nack &rArr; ina226_sda_out_mode &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Shunt_voltage
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Shunt_Current
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Power
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Bus_Voltage
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_filte_work
</UL>

<P><STRONG><a name="[25]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32f10x_it.o(i.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32f10x_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32f10x_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[278]"></a>ST7789_DATA_OUT</STRONG> (Thumb, 194 bytes, Stack size 0 bytes, st7789.o(i.ST7789_DATA_OUT))
<BR><BR>[Called By]<UL><LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7789_write_bus
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_flush
</UL>

<P><STRONG><a name="[28]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32f10x_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[56e]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 196 bytes, Stack size 44 bytes, system_gd32f10x.o(i.SystemCoreClockUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = SystemCoreClockUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_clock_config
</UL>

<P><STRONG><a name="[68]"></a>SystemInit</STRONG> (Thumb, 196 bytes, Stack size 8 bytes, system_gd32f10x.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SystemInit &rArr; system_clock_config
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_vector_table_set
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(.text)
</UL>
<P><STRONG><a name="[48]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, main.o(i.TIMER1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = TIMER1_IRQHandler &rArr; qflow_work &rArr; update &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qflow_work
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_task_tick_inc
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_inc
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_filte_get_pow
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_filte_get_cur
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_interrupt_flag_get
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_interrupt_flag_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>USART1_IRQHandler</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, usart.o(i.USART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USART1_IRQHandler &rArr; usart_interrupt_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_flag_get
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_data_receive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>USBD_LP_CAN0_RX0_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, gd32f10x_it.o(i.USBD_LP_CAN0_RX0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = USBD_LP_CAN0_RX0_IRQHandler &rArr; usbd_isr &rArr; usbd_intf_lpst &rArr; usbd_setup_transaction &rArr; usbd_device_class_request &rArr; usbd_enum_error &rArr; usbd_ep_stall
</UL>
<BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_isr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32f10x_it.o(i.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[133]"></a>__ARM_fpclassify</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[124]"></a>_is_digit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, __printf_wp.o(i._is_digit))
<BR><BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[165]"></a>_lv_anim_core_init</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, lv_anim.o(i._lv_anim_core_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = _lv_anim_core_init &rArr; lv_timer_create &rArr; _lv_ll_ins_head &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_init
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_create
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anim_mark_list_change
</UL>
<BR>[Called By]<UL><LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_init
</UL>

<P><STRONG><a name="[1ab]"></a>_lv_area_intersect</STRONG> (Thumb, 130 bytes, Stack size 12 bytes, lv_area.o(i._lv_area_intersect))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _lv_area_intersect
</UL>
<BR>[Called By]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_inv_area
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_area_is_visible
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_obj
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_blend
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_quarter_3
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_quarter_2
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_quarter_1
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_quarter_0
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_polygon
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_line
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_blend_basic
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_arc
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_and_draw
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border_generic
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_shadow
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_ver
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_skew
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_hor
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_list
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_box_label
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_label
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
</UL>

<P><STRONG><a name="[169]"></a>_lv_area_is_in</STRONG> (Thumb, 188 bytes, Stack size 24 bytes, lv_area.o(i._lv_area_is_in))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _lv_area_is_in &rArr; _lv_area_is_point_on &rArr;  _lv_area_is_point_on (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_point_on
</UL>
<BR>[Called By]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_inv_area
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_to
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_get_top_obj
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_shadow
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_is_any
</UL>

<P><STRONG><a name="[4bc]"></a>_lv_area_is_on</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, lv_area.o(i._lv_area_is_on))
<BR><BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_join_area
</UL>

<P><STRONG><a name="[16b]"></a>_lv_area_is_out</STRONG> (Thumb, 182 bytes, Stack size 24 bytes, lv_area.o(i._lv_area_is_out))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _lv_area_is_out &rArr; _lv_area_is_point_on &rArr;  _lv_area_is_point_on (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_point_on
</UL>
<BR>[Called By]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_shadow
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_is_any
</UL>

<P><STRONG><a name="[16a]"></a>_lv_area_is_point_on</STRONG> (Thumb, 402 bytes, Stack size 48 bytes, lv_area.o(i._lv_area_is_point_on))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + In Cycle
<LI>Call Chain = _lv_area_is_point_on &rArr;  _lv_area_is_point_on (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_point_on
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_point_within_circle
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_width
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_height
</UL>
<BR>[Called By]<UL><LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_hit_test
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_point_on
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_search_obj
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_in
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_out
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_button_from_point
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
</UL>

<P><STRONG><a name="[4bd]"></a>_lv_area_join</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, lv_area.o(i._lv_area_join))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _lv_area_join
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_join_area
</UL>

<P><STRONG><a name="[8e]"></a>_lv_disp_refr_timer</STRONG> (Thumb, 302 bytes, Stack size 40 bytes, lv_refr.o(i._lv_disp_refr_timer))
<BR><BR>[Stack]<UL><LI>Max Depth = 992<LI>Call Chain = _lv_disp_refr_timer &rArr; lv_refr_areas &rArr; lv_refr_area &rArr; lv_refr_area_part &rArr; lv_draw_img &rArr; decode_and_draw &rArr; show_error &rArr; lv_draw_label &rArr; lv_txt_get_size &rArr; _lv_txt_get_next_line &rArr; lv_txt_get_next_word &rArr; lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_default
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_get
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_elaps
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_ver_res
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_hor_res
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_set
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_00
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_update_layout
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_pause
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_free_all
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_font_clean_up_fmt_txt
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_draw_mask_cleanup
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_join_area
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_areas
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_buf_flush
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_hal_disp.o(i.lv_disp_drv_register)
</UL>
<P><STRONG><a name="[17d]"></a>_lv_draw_mask_cleanup</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, lv_draw_mask.o(i._lv_draw_mask_cleanup))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _lv_draw_mask_cleanup &rArr; lv_mem_free &rArr; lv_tlsf_free &rArr; block_merge_prev &rArr; block_absorb &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_00
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
</UL>

<P><STRONG><a name="[462]"></a>_lv_event_mark_deleted</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, lv_event.o(i._lv_event_mark_deleted))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_destructor
</UL>

<P><STRONG><a name="[17c]"></a>_lv_font_clean_up_fmt_txt</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lv_font_fmt_txt.o(i._lv_font_clean_up_fmt_txt))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
</UL>

<P><STRONG><a name="[17f]"></a>_lv_fs_init</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, lv_fs.o(i._lv_fs_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _lv_fs_init
</UL>
<BR>[Calls]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_init
</UL>
<BR>[Called By]<UL><LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_init
</UL>

<P><STRONG><a name="[180]"></a>_lv_group_init</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, lv_group.o(i._lv_group_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _lv_group_init
</UL>
<BR>[Calls]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_init
</UL>
<BR>[Called By]<UL><LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_init
</UL>

<P><STRONG><a name="[181]"></a>_lv_img_buf_get_transformed_area</STRONG> (Thumb, 878 bytes, Stack size 96 bytes, lv_img_buf.o(i._lv_img_buf_get_transformed_area))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _lv_img_buf_get_transformed_area
</UL>
<BR>[Calls]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_trigo_sin
</UL>
<BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_and_draw
</UL>

<P><STRONG><a name="[183]"></a>_lv_img_buf_transform</STRONG> (Thumb, 478 bytes, Stack size 72 bytes, lv_img_buf.o(i._lv_img_buf_transform))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = _lv_img_buf_transform &rArr; _lv_img_buf_transform_anti_alias &rArr; lv_img_buf_get_px_color &rArr; lv_memcpy_small
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memcpy_small
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_buf_get_px_color
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_buf_get_px_alpha
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_buf_transform_anti_alias
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_img_decoded
</UL>

<P><STRONG><a name="[187]"></a>_lv_img_buf_transform_anti_alias</STRONG> (Thumb, 824 bytes, Stack size 88 bytes, lv_img_buf.o(i._lv_img_buf_transform_anti_alias))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = _lv_img_buf_transform_anti_alias &rArr; lv_img_buf_get_px_color &rArr; lv_memcpy_small
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memcpy_small
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_mix
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_buf_get_px_color
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_buf_get_px_alpha
</UL>
<BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_buf_transform
</UL>

<P><STRONG><a name="[189]"></a>_lv_img_buf_transform_init</STRONG> (Thumb, 296 bytes, Stack size 40 bytes, lv_img_buf.o(i._lv_img_buf_transform_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _lv_img_buf_transform_init
</UL>
<BR>[Calls]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_trigo_sin
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_cf_is_chroma_keyed
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_cf_has_alpha
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_img_decoded
</UL>

<P><STRONG><a name="[18c]"></a>_lv_img_cache_open</STRONG> (Thumb, 86 bytes, Stack size 40 bytes, lv_img_cache.o(i._lv_img_cache_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = _lv_img_cache_open &rArr; lv_img_decoder_open &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_get
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_elaps
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_00
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_open
</UL>
<BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_and_draw
</UL>

<P><STRONG><a name="[18e]"></a>_lv_img_decoder_init</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, lv_img_decoder.o(i._lv_img_decoder_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = _lv_img_decoder_init &rArr; lv_img_decoder_create &rArr; _lv_ll_ins_head &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_init
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_set_read_line_cb
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_set_open_cb
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_set_info_cb
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_set_close_cb
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_create
</UL>
<BR>[Called By]<UL><LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_init
</UL>

<P><STRONG><a name="[194]"></a>_lv_indev_read</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, lv_hal_indev.o(i._lv_indev_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = _lv_indev_read &rArr; lv_memset_00
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_00
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_read_timer_cb
</UL>

<P><STRONG><a name="[195]"></a>_lv_indev_scroll_handler</STRONG> (Thumb, 310 bytes, Stack size 40 bytes, lv_indev_scroll.o(i._lv_indev_scroll_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = _lv_indev_scroll_handler &rArr; lv_obj_scroll_by &rArr; lv_anim_start &rArr; _lv_ll_ins_head &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_top
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_right
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_dir
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_bottom
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_limit_diff
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_scroll_limits
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_scroll_obj
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;elastic_diff
</UL>
<BR>[Called By]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_proc_press
</UL>

<P><STRONG><a name="[1a1]"></a>_lv_indev_scroll_throw_handler</STRONG> (Thumb, 580 bytes, Stack size 40 bytes, lv_indev_scroll.o(i._lv_indev_scroll_throw_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = _lv_indev_scroll_throw_handler &rArr; lv_obj_scroll_by &rArr; lv_anim_start &rArr; _lv_ll_ins_head &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_act
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_top
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_snap_y
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_snap_x
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_right
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_bottom
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_throw_predict_y
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_throw_predict_x
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_limit_diff
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_snap_point_y
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_snap_point_x
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;elastic_diff
</UL>
<BR>[Called By]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_proc_release
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_proc_press
</UL>

<P><STRONG><a name="[1aa]"></a>_lv_inv_area</STRONG> (Thumb, 248 bytes, Stack size 40 bytes, lv_refr.o(i._lv_inv_area))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = _lv_inv_area &rArr; _lv_area_is_in &rArr; _lv_area_is_point_on &rArr;  _lv_area_is_point_on (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_default
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_ver_res
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_hor_res
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_in
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_resume
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_set_bg_color
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
</UL>

<P><STRONG><a name="[1ae]"></a>_lv_ll_clear</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lv_ll.o(i._lv_ll_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = _lv_ll_clear &rArr; lv_mem_free &rArr; lv_tlsf_free &rArr; block_merge_prev &rArr; block_absorb &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_remove
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
</UL>
<BR>[Called By]<UL><LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_remove_all_objs
</UL>

<P><STRONG><a name="[9e]"></a>_lv_ll_get_head</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_ll.o(i._lv_ll_get_head))
<BR><BR>[Called By]<UL><LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_handler
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_disp
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_next
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_next
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_remove
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_len
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_clear
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_remove_obj
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_remove_all_objs
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_focus_obj
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_add_obj
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_get
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_ready_cb
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_get_info
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_open
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_get_drv
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anim_timer
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anim_mark_list_change
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_group.o(i.lv_group_focus_next)
</UL>
<P><STRONG><a name="[1b0]"></a>_lv_ll_get_len</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, lv_ll.o(i._lv_ll_get_len))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _lv_ll_get_len
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
</UL>
<BR>[Called By]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_get_obj_count
</UL>

<P><STRONG><a name="[9d]"></a>_lv_ll_get_next</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lv_ll.o(i._lv_ll_get_next))
<BR><BR>[Called By]<UL><LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_handler
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_disp
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_next
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_next
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_remove
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_len
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_clear
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_remove_obj
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_remove_all_objs
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_focus_obj
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_add_obj
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_get
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_ready_cb
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_get_info
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_open
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_get_drv
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anim_timer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_group.o(i.lv_group_focus_next)
</UL>
<P><STRONG><a name="[9f]"></a>_lv_ll_get_prev</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_ll.o(i._lv_ll_get_prev))
<BR><BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_remove
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_del
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_group.o(i.lv_group_focus_prev)
</UL>
<P><STRONG><a name="[a0]"></a>_lv_ll_get_tail</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_ll.o(i._lv_ll_get_tail))
<BR><BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_remove
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_remove_obj
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_del
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_group.o(i.lv_group_focus_prev)
</UL>
<P><STRONG><a name="[166]"></a>_lv_ll_init</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lv_ll.o(i._lv_ll_init))
<BR><BR>[Called By]<UL><LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_init
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_create
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_group_init
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_timer_core_init
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_style_init
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_decoder_init
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_fs_init
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_anim_core_init
</UL>

<P><STRONG><a name="[1b1]"></a>_lv_ll_ins_head</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, lv_ll.o(i._lv_ll_ins_head))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = _lv_ll_ins_head &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;node_set_prev
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;node_set_next
</UL>
<BR>[Called By]<UL><LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_create
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_drv_register
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_register
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_style_create_transition
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_create
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_create
</UL>

<P><STRONG><a name="[1b5]"></a>_lv_ll_ins_tail</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, lv_ll.o(i._lv_ll_ins_tail))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = _lv_ll_ins_tail &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;node_set_prev
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;node_set_next
</UL>
<BR>[Called By]<UL><LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_add_obj
</UL>

<P><STRONG><a name="[39b]"></a>_lv_ll_is_empty</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lv_ll.o(i._lv_ll_is_empty))
<BR><BR>[Called By]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
</UL>

<P><STRONG><a name="[1af]"></a>_lv_ll_remove</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, lv_ll.o(i._lv_ll_remove))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _lv_ll_remove &rArr; node_set_prev
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_tail
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_prev
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;node_set_prev
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;node_set_next
</UL>
<BR>[Called By]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_clear
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_remove_obj
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_del
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_ready_cb
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_del
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anim_ready_handler
</UL>

<P><STRONG><a name="[1b6]"></a>_lv_obj_destruct</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, lv_obj_class.o(i._lv_obj_destruct))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + In Cycle
<LI>Call Chain = _lv_obj_destruct &rArr;  _lv_obj_destruct (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_destruct
</UL>
<BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_destruct
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_del_core
</UL>

<P><STRONG><a name="[44e]"></a>_lv_obj_get_ext_draw_size</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lv_obj_draw.o(i._lv_obj_get_ext_draw_size))
<BR><BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_ext_draw_size
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_area_is_visible
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_obj
</UL>

<P><STRONG><a name="[1b7]"></a>_lv_obj_style_create_transition</STRONG> (Thumb, 400 bytes, Stack size 112 bytes, lv_obj_style.o(i._lv_obj_style_create_transition))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = _lv_obj_style_create_transition &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_init
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_head
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_set_var
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_set_values
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_set_time
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_set_ready_cb
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_set_exec_cb
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_set_delay
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_trans_style
</UL>
<BR>[Called By]<UL><LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
</UL>

<P><STRONG><a name="[1c3]"></a>_lv_obj_style_init</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, lv_obj_style.o(i._lv_obj_style_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _lv_obj_style_init
</UL>
<BR>[Calls]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_init
</UL>
<BR>[Called By]<UL><LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_init
</UL>

<P><STRONG><a name="[1c4]"></a>_lv_obj_style_state_compare</STRONG> (Thumb, 762 bytes, Stack size 48 bytes, lv_obj_style.o(i._lv_obj_style_state_compare))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = _lv_obj_style_state_compare &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_style_get_selector_state
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_get_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
</UL>

<P><STRONG><a name="[2c0]"></a>_lv_refr_get_disp_refreshing</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_refr.o(i._lv_refr_get_disp_refreshing))
<BR><BR>[Called By]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;map_set_px
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_set_px
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_normal
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_img_decoded
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_blend_basic
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_skew
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_letter_normal
</UL>

<P><STRONG><a name="[427]"></a>_lv_refr_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lv_refr.o(i._lv_refr_init))
<BR><BR>[Called By]<UL><LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_init
</UL>

<P><STRONG><a name="[33a]"></a>_lv_style_get_prop_group</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lv_style.o(i._lv_style_get_prop_group))
<BR><BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_prop_core
</UL>

<P><STRONG><a name="[1c7]"></a>_lv_timer_core_init</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lv_timer.o(i._lv_timer_core_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _lv_timer_core_init
</UL>
<BR>[Calls]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_init
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_init
</UL>

<P><STRONG><a name="[1c9]"></a>_lv_txt_cut</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, lv_txt.o(i._lv_txt_cut))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _lv_txt_cut &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_del_char
</UL>

<P><STRONG><a name="[3dc]"></a>_lv_txt_encoded_letter_next_2</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, lv_txt.o(i._lv_txt_encoded_letter_next_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _lv_txt_encoded_letter_next_2
</UL>
<BR>[Called By]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_width
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_is_char_under_pos
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_on
</UL>

<P><STRONG><a name="[1cb]"></a>_lv_txt_get_next_line</STRONG> (Thumb, 294 bytes, Stack size 64 bytes, lv_txt.o(i._lv_txt_get_next_line))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _lv_txt_get_next_line &rArr; lv_txt_get_next_word &rArr; lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_glyph_width
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_next_word
</UL>
<BR>[Called By]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_size
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_is_char_under_pos
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_pos
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_on
</UL>

<P><STRONG><a name="[1ce]"></a>_lv_txt_ins</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, lv_txt.o(i._lv_txt_ins))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = _lv_txt_ins &rArr; lv_memcpy_small
</UL>
<BR>[Calls]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memcpy_small
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_char
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_ins_text
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_text
</UL>

<P><STRONG><a name="[430]"></a>_lv_txt_is_cmd</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, lv_txt.o(i._lv_txt_is_cmd))
<BR><BR>[Called By]<UL><LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_width
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_next_word
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_is_char_under_pos
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_on
</UL>

<P><STRONG><a name="[1d0]"></a>_lv_txt_set_text_vfmt</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, lv_txt.o(i._lv_txt_set_text_vfmt))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = _lv_txt_set_text_vfmt &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr;  _vsnprintf (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_vsnprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text_fmt
</UL>

<P><STRONG><a name="[32e]"></a>_lv_utils_bsearch</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, lv_utils.o(i._lv_utils_bsearch))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _lv_utils_bsearch
</UL>
<BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_kern_value
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_glyph_dsc_id
</UL>

<P><STRONG><a name="[1d2]"></a>_nt_buffer_node_move_back</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, nt_pm.o(i._nt_buffer_node_move_back))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _nt_buffer_node_move_back &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_start_page
</UL>

<P><STRONG><a name="[52a]"></a>_nt_view_pointer_init</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, nt_pm.o(i._nt_view_pointer_init))
<BR><BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1d9]"></a>_timer_init</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, main.o(i._timer_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _timer_init &rArr; nvic_irq_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_interrupt_enable
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_init
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_enable
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_deinit
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[37b]"></a>adc_calibration_enable</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, gd32f10x_adc.o(i.adc_calibration_enable))
<BR><BR>[Called By]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inside_temp_adc_init
</UL>

<P><STRONG><a name="[375]"></a>adc_channel_length_config</STRONG> (Thumb, 70 bytes, Stack size 12 bytes, gd32f10x_adc.o(i.adc_channel_length_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = adc_channel_length_config
</UL>
<BR>[Called By]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inside_temp_adc_init
</UL>

<P><STRONG><a name="[373]"></a>adc_data_alignment_config</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gd32f10x_adc.o(i.adc_data_alignment_config))
<BR><BR>[Called By]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inside_temp_adc_init
</UL>

<P><STRONG><a name="[379]"></a>adc_enable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gd32f10x_adc.o(i.adc_enable))
<BR><BR>[Called By]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inside_temp_adc_init
</UL>

<P><STRONG><a name="[377]"></a>adc_external_trigger_config</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, gd32f10x_adc.o(i.adc_external_trigger_config))
<BR><BR>[Called By]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inside_temp_adc_init
</UL>

<P><STRONG><a name="[372]"></a>adc_external_trigger_source_config</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, gd32f10x_adc.o(i.adc_external_trigger_source_config))
<BR><BR>[Called By]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inside_temp_adc_init
</UL>

<P><STRONG><a name="[376]"></a>adc_inserted_channel_config</STRONG> (Thumb, 120 bytes, Stack size 20 bytes, gd32f10x_adc.o(i.adc_inserted_channel_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = adc_inserted_channel_config
</UL>
<BR>[Called By]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inside_temp_adc_init
</UL>

<P><STRONG><a name="[374]"></a>adc_mode_config</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gd32f10x_adc.o(i.adc_mode_config))
<BR><BR>[Called By]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inside_temp_adc_init
</UL>

<P><STRONG><a name="[371]"></a>adc_special_function_config</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, gd32f10x_adc.o(i.adc_special_function_config))
<BR><BR>[Called By]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inside_temp_adc_init
</UL>

<P><STRONG><a name="[378]"></a>adc_tempsensor_vrefint_enable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gd32f10x_adc.o(i.adc_tempsensor_vrefint_enable))
<BR><BR>[Called By]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inside_temp_adc_init
</UL>

<P><STRONG><a name="[574]"></a>avg_filte_get_volt</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kalman.o(i.avg_filte_get_volt))
<BR><BR>[Called By]<UL><LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update
</UL>

<P><STRONG><a name="[1f2]"></a>avg_filte_work</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, kalman.o(i.avg_filte_work))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = avg_filte_work &rArr; average_filte &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_filte_get_pow
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_filte_get_cur
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_filte_get_volt
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;average_filte
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_update
</UL>

<P><STRONG><a name="[24c]"></a>cdc_acm_EP0_RxReady</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, cdc_acm_core.o(i.cdc_acm_EP0_RxReady))
<BR><BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cdc_acm_data_handler
</UL>

<P><STRONG><a name="[a]"></a>cdc_acm_data_handler</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, cdc_acm_core.o(i.cdc_acm_data_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = cdc_acm_data_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cdc_acm_EP0_RxReady
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_rx_count_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_cdc.o(.data)
</UL>
<P><STRONG><a name="[8]"></a>cdc_acm_deinit</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, cdc_acm_core.o(i.cdc_acm_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = cdc_acm_deinit &rArr; usbd_ep_deinit
</UL>
<BR>[Calls]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_deinit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_cdc.o(.data)
</UL>
<P><STRONG><a name="[7]"></a>cdc_acm_init</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, cdc_acm_core.o(i.cdc_acm_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = cdc_acm_init &rArr; usbd_ep_init
</UL>
<BR>[Calls]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_cdc.o(.data)
</UL>
<P><STRONG><a name="[9]"></a>cdc_acm_req_handler</STRONG> (Thumb, 284 bytes, Stack size 24 bytes, cdc_acm_core.o(i.cdc_acm_req_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = cdc_acm_req_handler &rArr; usbd_ep_tx &rArr; usbd_ep_data_write
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_enum_error
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_tx
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_rx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_cdc.o(.data)
</UL>
<P><STRONG><a name="[264]"></a>clear</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, st7789.o(i.clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = clear &rArr; display_region &rArr; write_datas &rArr; st7789_write_bus
</UL>
<BR>[Calls]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_datas
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_region
</UL>
<BR>[Called By]<UL><LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7789_init
</UL>

<P><STRONG><a name="[265]"></a>display_region</STRONG> (Thumb, 246 bytes, Stack size 20 bytes, st7789.o(i.display_region))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = display_region &rArr; write_datas &rArr; st7789_write_bus
</UL>
<BR>[Calls]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_datas
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_command
</UL>
<BR>[Called By]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_flush
</UL>

<P><STRONG><a name="[292]"></a>draw_border_generic</STRONG> (Thumb, 1422 bytes, Stack size 192 bytes, lv_draw_sw_rect.o(i.draw_border_generic))
<BR><BR>[Stack]<UL><LI>Max Depth = 576<LI>Call Chain = draw_border_generic &rArr; lv_draw_mask_radius_init &rArr; circ_calc_aa4 &rArr; lv_mem_buf_get &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_00
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius_init
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_free_param
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_add
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_blend
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_remove_id
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_width
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border_simple
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_ff
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_is_any
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_apply
</UL>
<BR>[Called By]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_outline
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border
</UL>

<P><STRONG><a name="[326]"></a>gd25q64_spi_gpio_init</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, gd25q64_spi.o(i.gd25q64_spi_gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = gd25q64_spi_gpio_init &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[329]"></a>gpio_bit_reset</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32f10x_gpio.o(i.gpio_bit_reset))
<BR><BR>[Called By]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_light_state_reset
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_light_state_repeat
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd25q64_spi_gpio_init
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led2_set_state
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led1_set_state
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7789_reset
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7789_gpio_init
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_i2c_nack
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_i2c_ack
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_i2c_wait_ack
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_i2c_stop
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_i2c_start
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_i2c_send_byte
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_i2c_read_byte
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7789_init
</UL>

<P><STRONG><a name="[328]"></a>gpio_bit_set</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32f10x_gpio.o(i.gpio_bit_set))
<BR><BR>[Called By]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_light_state_work
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_light_state_repeat
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd25q64_spi_gpio_init
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led2_set_state
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led1_set_state
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7789_reset
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7789_gpio_init
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_i2c_nack
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_i2c_ack
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_i2c_wait_ack
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_i2c_stop
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_i2c_start
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_i2c_send_byte
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_i2c_read_byte
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_gpio_init
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_cdc_init
</UL>

<P><STRONG><a name="[327]"></a>gpio_init</STRONG> (Thumb, 172 bytes, Stack size 20 bytes, gd32f10x_gpio.o(i.gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd25q64_spi_gpio_init
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_gpio_init
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_gpio_init
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7789_gpio_init
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_sda_out_mode
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_sda_in_mode
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_gpio_init
<LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_gpio_init
</UL>

<P><STRONG><a name="[351]"></a>gpio_input_bit_get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gd32f10x_gpio.o(i.gpio_input_bit_get))
<BR><BR>[Called By]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_drive_code
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_i2c_wait_ack
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_i2c_read_byte
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keypad_get_key
</UL>

<P><STRONG><a name="[15d]"></a>ina226_filte_get_cur</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kalman.o(i.ina226_filte_get_cur))
<BR><BR>[Called By]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avg_filte_work
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1_IRQHandler
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update
</UL>

<P><STRONG><a name="[15e]"></a>ina226_filte_get_pow</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kalman.o(i.ina226_filte_get_pow))
<BR><BR>[Called By]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avg_filte_work
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1_IRQHandler
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update
</UL>

<P><STRONG><a name="[1f3]"></a>ina226_filte_get_volt</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kalman.o(i.ina226_filte_get_volt))
<BR><BR>[Called By]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avg_filte_work
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update
</UL>

<P><STRONG><a name="[34a]"></a>ina226_filte_work</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, kalman.o(i.ina226_filte_work))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = ina226_filte_work &rArr; INA226_Update &rArr; Get_Shunt_voltage &rArr; INA226_GetShuntVoltage &rArr; INA226_ReadData &rArr; ina226_i2c_read_byte &rArr; ina226_i2c_nack &rArr; ina226_sda_out_mode &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kalman_filte
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INA226_Update
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_update
</UL>

<P><STRONG><a name="[14f]"></a>ina226_gpio_init</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, ina226_i2c.o(i.ina226_gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = ina226_gpio_init &rArr; ina226_sda_out_mode &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_sda_out_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INA226_Init
</UL>

<P><STRONG><a name="[34d]"></a>ina226_i2c_ack</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, ina226_i2c.o(i.ina226_i2c_ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = ina226_i2c_ack &rArr; ina226_sda_out_mode &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_sda_out_mode
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_sleep_us
</UL>
<BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_i2c_read_byte
</UL>

<P><STRONG><a name="[34f]"></a>ina226_i2c_nack</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, ina226_i2c.o(i.ina226_i2c_nack))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = ina226_i2c_nack &rArr; ina226_sda_out_mode &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_sda_out_mode
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_sleep_us
</UL>
<BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_i2c_read_byte
</UL>

<P><STRONG><a name="[154]"></a>ina226_i2c_read_byte</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, ina226_i2c.o(i.ina226_i2c_read_byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ina226_i2c_read_byte &rArr; ina226_i2c_nack &rArr; ina226_sda_out_mode &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_bit_get
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_sda_in_mode
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_i2c_nack
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_i2c_ack
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_sleep_us
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INA226_ReadData
</UL>

<P><STRONG><a name="[152]"></a>ina226_i2c_send_byte</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, ina226_i2c.o(i.ina226_i2c_send_byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ina226_i2c_send_byte &rArr; ina226_sda_out_mode &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_sda_out_mode
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_sleep_us
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INA226_SetRegPointer
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INA226_SendData
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INA226_ReadData
</UL>

<P><STRONG><a name="[151]"></a>ina226_i2c_start</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, ina226_i2c.o(i.ina226_i2c_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = ina226_i2c_start &rArr; ina226_sda_out_mode &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_sda_out_mode
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_sleep_us
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INA226_SetRegPointer
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INA226_SendData
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INA226_ReadData
</UL>

<P><STRONG><a name="[155]"></a>ina226_i2c_stop</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, ina226_i2c.o(i.ina226_i2c_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = ina226_i2c_stop &rArr; ina226_sda_out_mode &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_sda_out_mode
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_sleep_us
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_i2c_wait_ack
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INA226_SetRegPointer
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INA226_SendData
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INA226_ReadData
</UL>

<P><STRONG><a name="[153]"></a>ina226_i2c_wait_ack</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, ina226_i2c.o(i.ina226_i2c_wait_ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ina226_i2c_wait_ack &rArr; ina226_i2c_stop &rArr; ina226_sda_out_mode &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_bit_get
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_sda_in_mode
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_sleep_us
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_i2c_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INA226_SetRegPointer
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INA226_SendData
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INA226_ReadData
</UL>

<P><STRONG><a name="[350]"></a>ina226_sda_in_mode</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, ina226_i2c.o(i.ina226_sda_in_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = ina226_sda_in_mode &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_i2c_wait_ack
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_i2c_read_byte
</UL>

<P><STRONG><a name="[34c]"></a>ina226_sda_out_mode</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, ina226_i2c.o(i.ina226_sda_out_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = ina226_sda_out_mode &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_i2c_nack
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_i2c_ack
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_i2c_stop
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_i2c_start
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_i2c_send_byte
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_gpio_init
</UL>

<P><STRONG><a name="[b6]"></a>ina226_update</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, main.o(i.ina226_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = ina226_update &rArr; ina226_filte_work &rArr; INA226_Update &rArr; Get_Shunt_voltage &rArr; INA226_GetShuntVoltage &rArr; INA226_ReadData &rArr; ina226_i2c_read_byte &rArr; ina226_i2c_nack &rArr; ina226_sda_out_mode &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qflow_dura_work
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_filte_work
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[36a]"></a>infos_create</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, infosview.o(i.infos_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = infos_create &rArr; lv_obj_set_size &rArr; lv_obj_set_width &rArr; lv_obj_set_style_width &rArr; lv_obj_set_local_style_prop &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_style
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_style
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_infos_style_create
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;view_load
</UL>

<P><STRONG><a name="[36f]"></a>inside_temp_adc_init</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, temp.o(i.inside_temp_adc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = inside_temp_adc_init &rArr; adc_inserted_channel_config
</UL>
<BR>[Calls]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_ms
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_tempsensor_vrefint_enable
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_special_function_config
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_mode_config
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_inserted_channel_config
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_external_trigger_source_config
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_external_trigger_config
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_enable
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_data_alignment_config
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_channel_length_config
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_calibration_enable
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inside_temp_adc_rcu_init
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[370]"></a>inside_temp_adc_rcu_init</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, temp.o(i.inside_temp_adc_rcu_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = inside_temp_adc_rcu_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_adc_clock_config
</UL>
<BR>[Called By]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inside_temp_adc_init
</UL>

<P><STRONG><a name="[383]"></a>key_gpio_init</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, key.o(i.key_gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = key_gpio_init &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[384]"></a>key_read_event</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, key.o(i.key_read_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = key_read_event &rArr; key_drive_code
</UL>
<BR>[Calls]<UL><LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_event_ticks
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_drive_code
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_update
</UL>

<P><STRONG><a name="[b7]"></a>key_update</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, main.o(i.key_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = key_update &rArr; avg_filte_work &rArr; average_filte &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_light_state_work
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_light_state_reset
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_light_state_repeat
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avg_filte_work
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_light_work
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_read_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[387]"></a>lcd_light_state_repeat</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, blight.o(i.lcd_light_state_repeat))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lcd_light_state_repeat
</UL>
<BR>[Calls]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_update
</UL>

<P><STRONG><a name="[386]"></a>lcd_light_state_reset</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, blight.o(i.lcd_light_state_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lcd_light_state_reset
</UL>
<BR>[Calls]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_update
</UL>

<P><STRONG><a name="[388]"></a>lcd_light_state_work</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, blight.o(i.lcd_light_state_work))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lcd_light_state_work
</UL>
<BR>[Calls]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_update
</UL>

<P><STRONG><a name="[391]"></a>led_gpio_init</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, led.o(i.led_gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = led_gpio_init &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[389]"></a>led_light_work</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, led.o(i.led_light_work))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = led_light_work
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_update
</UL>

<P><STRONG><a name="[397]"></a>lv_anim_del</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, lv_anim.o(i.lv_anim_del))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = lv_anim_del &rArr; lv_mem_free &rArr; lv_tlsf_free &rArr; block_merge_prev &rArr; block_absorb &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_remove
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anim_mark_list_change
</UL>
<BR>[Called By]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to_y
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to_x
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_destructor
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_area_into_view
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_del
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_long_mode
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_value_with_anim
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_destructor
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_trigger_anim
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_destructor
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_position
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_cursor_blink
</UL>

<P><STRONG><a name="[398]"></a>lv_anim_get</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, lv_anim.o(i.lv_anim_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lv_anim_get
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
</UL>
<BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
</UL>

<P><STRONG><a name="[1bb]"></a>lv_anim_init</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, lv_anim.o(i.lv_anim_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lv_anim_init &rArr; lv_memset_00
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_00
</UL>
<BR>[Called By]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_style_create_transition
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_text
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_char
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_value_with_anim
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_trigger_anim
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_position
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_text
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_cursor_blink
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_pm_anim_default_init
</UL>

<P><STRONG><a name="[a8]"></a>lv_anim_path_ease_out</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, lv_anim.o(i.lv_anim_path_ease_out))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = lv_anim_path_ease_out &rArr; lv_bezier3
</UL>
<BR>[Calls]<UL><LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_map
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bezier3
</UL>
<BR>[Address Reference Count : 3]<UL><LI> lv_obj_scroll.o(i.lv_obj_scroll_by)
<LI> nt_pm.o(i.nt_pm_anim_default_init)
<LI> lv_roller.o(i.refr_position)
</UL>
<P><STRONG><a name="[88]"></a>lv_anim_path_linear</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, lv_anim.o(i.lv_anim_path_linear))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = lv_anim_path_linear &rArr; lv_map
</UL>
<BR>[Calls]<UL><LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_map
</UL>
<BR>[Address Reference Count : 3]<UL><LI> lv_anim.o(i.lv_anim_init)
<LI> lv_style.o(i.lv_style_transition_dsc_init)
<LI> lv_theme_default.o(i.style_init)
</UL>
<P><STRONG><a name="[b1]"></a>lv_anim_path_step</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lv_anim.o(i.lv_anim_path_step))
<BR>[Address Reference Count : 4]<UL><LI> lv_textarea.o(i.lv_textarea_add_char)
<LI> lv_textarea.o(i.lv_textarea_add_text)
<LI> lv_textarea.o(i.lv_textarea_set_text)
<LI> lv_textarea.o(i.start_cursor_blink)
</UL>
<P><STRONG><a name="[439]"></a>lv_anim_speed_to_time</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, lv_anim.o(i.lv_anim_speed_to_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = lv_anim_speed_to_time
</UL>
<BR>[Called By]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
</UL>

<P><STRONG><a name="[1c2]"></a>lv_anim_start</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, lv_anim.o(i.lv_anim_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = lv_anim_start &rArr; _lv_ll_ins_head &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_get
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_head
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memcpy
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_is_empty
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anim_mark_list_change
</UL>
<BR>[Called By]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_style_create_transition
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_text
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_char
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_value_with_anim
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_trigger_anim
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_position
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_text
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_cursor_blink
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_pm_view_rotations_anim_create
</UL>

<P><STRONG><a name="[2c5]"></a>lv_area_get_size</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, lv_area.o(i.lv_area_get_size))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_area_get_size
</UL>
<BR>[Called By]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_scrollbar
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scrollbar_invalidate
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_join_area
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_areas
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_img_decoded
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_skew
</UL>

<P><STRONG><a name="[303]"></a>lv_area_increase</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, lv_area.o(i.lv_area_increase))
<BR><BR>[Called By]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_coords
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_obj
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_shadow
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
</UL>

<P><STRONG><a name="[2e0]"></a>lv_area_move</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, lv_area.o(i.lv_area_move))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_blend_basic
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_placeholder
</UL>

<P><STRONG><a name="[177]"></a>lv_area_set</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lv_area.o(i.lv_area_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_area_set
</UL>
<BR>[Called By]<UL><LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_set_bg_color
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scrollbar_area
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_scroll_limits
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area_part
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
</UL>

<P><STRONG><a name="[7b]"></a>lv_area_set_height</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_area.o(i.lv_area_set_height))
<BR><BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_and_draw
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_flex.o(i.children_repos)
</UL>
<P><STRONG><a name="[7a]"></a>lv_area_set_width</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_area.o(i.lv_area_set_width))
<BR>[Address Reference Count : 1]<UL><LI> lv_flex.o(i.children_repos)
</UL>
<P><STRONG><a name="[39c]"></a>lv_async_call</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, lv_async.o(i.lv_async_call))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = lv_async_call &rArr; lv_timer_create &rArr; _lv_ll_ins_head &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_create
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_set_repeat_count
</UL>
<BR>[Called By]<UL><LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del_async
</UL>

<P><STRONG><a name="[30e]"></a>lv_bar_create</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, lv_bar.o(i.lv_bar_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = lv_bar_create &rArr; lv_obj_class_init_obj &rArr; lv_theme_apply &rArr; lv_obj_remove_style &rArr; trans_del &rArr; lv_style_remove_prop &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
</UL>
<BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;estimate_create
</UL>

<P><STRONG><a name="[4c9]"></a>lv_bar_get_mode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lv_bar.o(i.lv_bar_get_mode))
<BR><BR>[Called By]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_get_mode
</UL>

<P><STRONG><a name="[4c8]"></a>lv_bar_get_start_value</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, lv_bar.o(i.lv_bar_get_start_value))
<BR><BR>[Called By]<UL><LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_get_left_value
</UL>

<P><STRONG><a name="[4ca]"></a>lv_bar_get_value</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lv_bar.o(i.lv_bar_get_value))
<BR><BR>[Called By]<UL><LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_get_value
</UL>

<P><STRONG><a name="[3a3]"></a>lv_bar_set_start_value</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, lv_bar.o(i.lv_bar_set_start_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = lv_bar_set_start_value &rArr; lv_bar_set_value_with_anim &rArr; lv_anim_start &rArr; _lv_ll_ins_head &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_value_with_anim
</UL>
<BR>[Called By]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_set_left_value
</UL>

<P><STRONG><a name="[30f]"></a>lv_bar_set_value</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, lv_bar.o(i.lv_bar_set_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = lv_bar_set_value &rArr; lv_bar_set_value_with_anim &rArr; lv_anim_start &rArr; _lv_ll_ins_head &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_value_with_anim
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_constructor
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_set_value
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;estimate_create
</UL>

<P><STRONG><a name="[39a]"></a>lv_bezier3</STRONG> (Thumb, 94 bytes, Stack size 36 bytes, lv_math.o(i.lv_bezier3))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = lv_bezier3
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_path_ease_out
</UL>

<P><STRONG><a name="[248]"></a>lv_btn_create</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, lv_btn.o(i.lv_btn_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = lv_btn_create &rArr; lv_obj_class_init_obj &rArr; lv_theme_apply &rArr; lv_obj_remove_style &rArr; trans_del &rArr; lv_style_remove_prop &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quantity_create
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;capacity_create
</UL>

<P><STRONG><a name="[3a6]"></a>lv_btnmatrix_clear_btn_ctrl</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, lv_btnmatrix.o(i.lv_btnmatrix_clear_btn_ctrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = lv_btnmatrix_clear_btn_ctrl &rArr; lv_obj_refresh_ext_draw_size &rArr; lv_obj_allocate_spec_attr &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_ext_draw_size
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidate_button_area
</UL>
<BR>[Called By]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_clear_btn_ctrl_all
</UL>

<P><STRONG><a name="[347]"></a>lv_btnmatrix_clear_btn_ctrl_all</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, lv_btnmatrix.o(i.lv_btnmatrix_clear_btn_ctrl_all))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = lv_btnmatrix_clear_btn_ctrl_all &rArr; lv_btnmatrix_clear_btn_ctrl &rArr; lv_obj_refresh_ext_draw_size &rArr; lv_obj_allocate_spec_attr &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_clear_btn_ctrl
</UL>
<BR>[Called By]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_btn_ctrl
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_set_showed_date
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;highlight_update
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;make_one_button_checked
</UL>

<P><STRONG><a name="[3a9]"></a>lv_btnmatrix_create</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, lv_btnmatrix.o(i.lv_btnmatrix_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = lv_btnmatrix_create &rArr; lv_obj_class_init_obj &rArr; lv_theme_apply &rArr; lv_obj_remove_style &rArr; trans_del &rArr; lv_style_remove_prop &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_constructor
</UL>

<P><STRONG><a name="[2f9]"></a>lv_btnmatrix_get_selected_btn</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_btnmatrix.o(i.lv_btnmatrix_get_selected_btn))
<BR><BR>[Called By]<UL><LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_set_showed_date
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_part_begin_event_cb
</UL>

<P><STRONG><a name="[2f7]"></a>lv_btnmatrix_has_btn_ctrl</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, lv_btnmatrix.o(i.lv_btnmatrix_has_btn_ctrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_btnmatrix_has_btn_ctrl
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_part_begin_event_cb
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;make_one_button_checked
</UL>

<P><STRONG><a name="[349]"></a>lv_btnmatrix_set_btn_ctrl</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, lv_btnmatrix.o(i.lv_btnmatrix_set_btn_ctrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = lv_btnmatrix_set_btn_ctrl &rArr; lv_btnmatrix_clear_btn_ctrl_all &rArr; lv_btnmatrix_clear_btn_ctrl &rArr; lv_obj_refresh_ext_draw_size &rArr; lv_obj_allocate_spec_attr &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_ext_draw_size
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_clear_btn_ctrl_all
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidate_button_area
</UL>
<BR>[Called By]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_btn_ctrl_all
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_set_showed_date
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;highlight_update
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;make_one_button_checked
</UL>

<P><STRONG><a name="[3b0]"></a>lv_btnmatrix_set_btn_ctrl_all</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, lv_btnmatrix.o(i.lv_btnmatrix_set_btn_ctrl_all))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = lv_btnmatrix_set_btn_ctrl_all &rArr; lv_btnmatrix_set_btn_ctrl &rArr; lv_btnmatrix_clear_btn_ctrl_all &rArr; lv_btnmatrix_clear_btn_ctrl &rArr; lv_obj_refresh_ext_draw_size &rArr; lv_obj_allocate_spec_attr &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_btn_ctrl
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_constructor
</UL>

<P><STRONG><a name="[3a8]"></a>lv_btnmatrix_set_map</STRONG> (Thumb, 490 bytes, Stack size 112 bytes, lv_btnmatrix.o(i.lv_btnmatrix_set_map))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = lv_btnmatrix_set_map &rArr; lv_obj_refresh_ext_draw_size &rArr; lv_obj_allocate_spec_attr &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_set
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_ext_draw_size
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_width
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_height
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_row
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_column
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_button_width
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;allocate_btn_areas_and_controls
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_constructor
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_constructor
</UL>

<P><STRONG><a name="[3b2]"></a>lv_btnmatrix_set_selected_btn</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, lv_btnmatrix.o(i.lv_btnmatrix_set_selected_btn))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = lv_btnmatrix_set_selected_btn &rArr; invalidate_button_area &rArr; lv_obj_invalidate_area &rArr; _lv_inv_area &rArr; _lv_area_is_in &rArr; _lv_area_is_point_on &rArr;  _lv_area_is_point_on (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidate_button_area
</UL>
<BR>[Called By]<UL><LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_set_showed_date
</UL>

<P><STRONG><a name="[530]"></a>lv_calendar_get_showed_date</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lv_calendar.o(i.lv_calendar_get_showed_date))
<BR><BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_changed_event_cb
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;month_event_cb
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_changed_event_cb
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;month_event_cb
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;year_event_cb
</UL>

<P><STRONG><a name="[3b5]"></a>lv_calendar_set_showed_date</STRONG> (Thumb, 382 bytes, Stack size 56 bytes, lv_calendar.o(i.lv_calendar_set_showed_date))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = lv_calendar_set_showed_date &rArr; lv_snprintf &rArr; _vsnprintf &rArr;  _vsnprintf (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_cnt
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_snprintf
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_selected_btn
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_btn_ctrl
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_get_selected_btn
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_clear_btn_ctrl_all
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;highlight_update
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_month_length
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_day_of_week
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;month_event_cb
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;month_event_cb
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_constructor
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;year_event_cb
</UL>

<P><STRONG><a name="[3b6]"></a>lv_calendar_set_today_date</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, lv_calendar.o(i.lv_calendar_set_today_date))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = lv_calendar_set_today_date &rArr; highlight_update &rArr; lv_btnmatrix_set_btn_ctrl &rArr; lv_btnmatrix_clear_btn_ctrl_all &rArr; lv_btnmatrix_clear_btn_ctrl &rArr; lv_obj_refresh_ext_draw_size &rArr; lv_obj_allocate_spec_attr &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;highlight_update
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_constructor
</UL>

<P><STRONG><a name="[494]"></a>lv_clamp_height</STRONG> (Thumb, 174 bytes, Stack size 12 bytes, lv_obj_pos.o(i.lv_clamp_height))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = lv_clamp_height
</UL>
<BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
</UL>

<P><STRONG><a name="[493]"></a>lv_clamp_width</STRONG> (Thumb, 174 bytes, Stack size 12 bytes, lv_obj_pos.o(i.lv_clamp_width))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = lv_clamp_width
</UL>
<BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
</UL>

<P><STRONG><a name="[26f]"></a>lv_color_darken</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, lv_color.o(i.lv_color_darken))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = lv_color_darken &rArr; lv_color_mix
</UL>
<BR>[Calls]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_mix
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_black
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dark_color_filter_cb
</UL>

<P><STRONG><a name="[318]"></a>lv_color_fill</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, lv_color.o(i.lv_color_fill))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lv_color_fill
</UL>
<BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_normal
</UL>

<P><STRONG><a name="[3ca]"></a>lv_disp_draw_buf_init</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, lv_hal_disp.o(i.lv_disp_draw_buf_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = lv_disp_draw_buf_init &rArr; lv_memset_00
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_00
</UL>
<BR>[Called By]<UL><LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_port_disp_init
</UL>

<P><STRONG><a name="[3cb]"></a>lv_disp_drv_init</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, lv_hal_disp.o(i.lv_disp_drv_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = lv_disp_drv_init &rArr; lv_memset_00
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_00
</UL>
<BR>[Called By]<UL><LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_port_disp_init
</UL>

<P><STRONG><a name="[3cc]"></a>lv_disp_drv_register</STRONG> (Thumb, 352 bytes, Stack size 32 bytes, lv_hal_disp.o(i.lv_disp_drv_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = lv_disp_drv_register &rArr; lv_obj_create &rArr; lv_obj_class_init_obj &rArr; lv_theme_apply &rArr; lv_obj_remove_style &rArr; trans_del &rArr; lv_style_remove_prop &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_head
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_00
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_create
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_scrollbar_mode
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_palette_main
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_default_is_inited
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_default_init
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_default_get
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_ready
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_create
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_style_all
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_make
</UL>
<BR>[Called By]<UL><LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_port_disp_init
</UL>

<P><STRONG><a name="[279]"></a>lv_disp_flush_ready</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_hal_disp.o(i.lv_disp_flush_ready))
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_flush
</UL>

<P><STRONG><a name="[171]"></a>lv_disp_get_default</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_hal_disp.o(i.lv_disp_get_default))
<BR><BR>[Called By]<UL><LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_set_bg_color
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_scr_act
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_ver_res
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_hor_res
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_inv_area
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_theme
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_scr_prev
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_layer_top
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_layer_sys
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_drv_register
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_dpi
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_get_from_obj
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_default_init
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_state_load_execute
</UL>

<P><STRONG><a name="[37f]"></a>lv_disp_get_dpi</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, lv_hal_disp.o(i.lv_disp_get_dpi))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = lv_disp_get_dpi
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_default
</UL>
<BR>[Called By]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scrollbar_area
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_dpx
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidate_button_area
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_constructor
</UL>

<P><STRONG><a name="[2a0]"></a>lv_disp_get_draw_buf</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_hal_disp.o(i.lv_disp_get_draw_buf))
<BR><BR>[Called By]<UL><LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area_part
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_buf_rotate
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_buf_flush
</UL>

<P><STRONG><a name="[176]"></a>lv_disp_get_hor_res</STRONG> (Thumb, 54 bytes, Stack size 4 bytes, lv_hal_disp.o(i.lv_disp_get_hor_res))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = lv_disp_get_hor_res
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_default
</UL>
<BR>[Called By]<UL><LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_set_bg_color
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_inv_area
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_pointer_proc
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_img_decoded
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_skew
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_letter_normal
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_default_init
</UL>

<P><STRONG><a name="[365]"></a>lv_disp_get_layer_sys</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, lv_disp.o(i.lv_disp_get_layer_sys))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_disp_get_layer_sys
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_default
</UL>
<BR>[Called By]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_proc_press
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_area_is_visible
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area_part
</UL>

<P><STRONG><a name="[367]"></a>lv_disp_get_layer_top</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, lv_disp.o(i.lv_disp_get_layer_top))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_disp_get_layer_top
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_default
</UL>
<BR>[Called By]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_proc_press
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_area_is_visible
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area_part
</UL>

<P><STRONG><a name="[3d4]"></a>lv_disp_get_next</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lv_hal_disp.o(i.lv_disp_get_next))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_disp_get_next
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
</UL>
<BR>[Called By]<UL><LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_report_style_change
</UL>

<P><STRONG><a name="[368]"></a>lv_disp_get_scr_act</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, lv_disp.o(i.lv_disp_get_scr_act))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_disp_get_scr_act
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_default
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_proc_press
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_area_is_visible
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_obj_and_children
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area_part
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_state_load_execute
</UL>

<P><STRONG><a name="[3d5]"></a>lv_disp_get_scr_prev</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, lv_disp.o(i.lv_disp_get_scr_prev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_disp_get_scr_prev
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_default
</UL>
<BR>[Called By]<UL><LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_area_is_visible
</UL>

<P><STRONG><a name="[3d6]"></a>lv_disp_get_theme</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lv_disp.o(i.lv_disp_get_theme))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_disp_get_theme
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_default
</UL>
<BR>[Called By]<UL><LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_get_from_obj
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_default_init
</UL>

<P><STRONG><a name="[175]"></a>lv_disp_get_ver_res</STRONG> (Thumb, 54 bytes, Stack size 4 bytes, lv_hal_disp.o(i.lv_disp_get_ver_res))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = lv_disp_get_ver_res
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_default
</UL>
<BR>[Called By]<UL><LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_set_bg_color
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_inv_area
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_pointer_proc
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
</UL>

<P><STRONG><a name="[3d7]"></a>lv_disp_set_bg_color</STRONG> (Thumb, 76 bytes, Stack size 40 bytes, lv_disp.o(i.lv_disp_set_bg_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = lv_disp_set_bg_color &rArr; _lv_inv_area &rArr; _lv_area_is_in &rArr; _lv_area_is_point_on &rArr;  _lv_area_is_point_on (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_default
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_ver_res
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_hor_res
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_set
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_inv_area
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[290]"></a>lv_draw_img</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, lv_draw_img.o(i.lv_draw_img))
<BR><BR>[Stack]<UL><LI>Max Depth = 792<LI>Call Chain = lv_draw_img &rArr; decode_and_draw &rArr; show_error &rArr; lv_draw_label &rArr; lv_txt_get_size &rArr; _lv_txt_get_next_line &rArr; lv_txt_get_next_word &rArr; lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_error
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_and_draw
</UL>
<BR>[Called By]<UL><LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area_part
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg_img
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
</UL>

<P><STRONG><a name="[275]"></a>lv_draw_img_decoded</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, lv_draw_img.o(i.lv_draw_img_decoded))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = lv_draw_img_decoded
</UL>
<BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_and_draw
</UL>

<P><STRONG><a name="[28f]"></a>lv_draw_img_dsc_init</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, lv_draw_img.o(i.lv_draw_img_dsc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = lv_draw_img_dsc_init &rArr; lv_memset_00
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_00
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_make
</UL>
<BR>[Called By]<UL><LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area_part
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg_img
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
</UL>

<P><STRONG><a name="[426]"></a>lv_draw_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lv_draw.o(i.lv_draw_init))
<BR><BR>[Called By]<UL><LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_init
</UL>

<P><STRONG><a name="[28d]"></a>lv_draw_label</STRONG> (Thumb, 1888 bytes, Stack size 280 bytes, lv_draw_label.o(i.lv_draw_label))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = lv_draw_label &rArr; lv_txt_get_size &rArr; _lv_txt_get_next_line &rArr; lv_txt_get_next_word &rArr; lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect_dsc_init
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_size
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_width
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_glyph_width
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line_dsc_init
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_get_next_line
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_encoded_letter_next_2
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_letter
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_make
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_black
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_width
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hex_char_to_num
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_error
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg_img
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_draw
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_box_label
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_label
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_placeholder
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_cursor
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
</UL>

<P><STRONG><a name="[28c]"></a>lv_draw_label_dsc_init</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, lv_draw_label.o(i.lv_draw_label_dsc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = lv_draw_label_dsc_init &rArr; lv_palette_main &rArr; lv_color_black &rArr; lv_color_make
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_00
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_palette_main
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_black
</UL>
<BR>[Called By]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_error
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg_img
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_draw
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_box_label
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_label
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_placeholder
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_cursor
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
</UL>

<P><STRONG><a name="[3de]"></a>lv_draw_letter</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, lv_draw_label.o(i.lv_draw_letter))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lv_draw_letter
</UL>
<BR>[Called By]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
</UL>

<P><STRONG><a name="[3df]"></a>lv_draw_line</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, lv_draw_line.o(i.lv_draw_line))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lv_draw_line
</UL>
<BR>[Called By]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
</UL>

<P><STRONG><a name="[3db]"></a>lv_draw_line_dsc_init</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, lv_draw_line.o(i.lv_draw_line_dsc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = lv_draw_line_dsc_init &rArr; lv_memset_00
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_00
</UL>
<BR>[Called By]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
</UL>

<P><STRONG><a name="[282]"></a>lv_draw_mask_add</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, lv_draw_mask.o(i.lv_draw_mask_add))
<BR><BR>[Called By]<UL><LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_polygon
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_arc
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border_generic
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_shadow
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_skew
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_indic
</UL>

<P><STRONG><a name="[3e0]"></a>lv_draw_mask_angle_init</STRONG> (Thumb, 246 bytes, Stack size 40 bytes, lv_draw_mask.o(i.lv_draw_mask_angle_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = lv_draw_mask_angle_init &rArr; lv_draw_mask_line_angle_init &rArr; lv_draw_mask_line_points_init &rArr; lv_memset_00
</UL>
<BR>[Calls]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_line_angle_init
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_arc
</UL>

<P><STRONG><a name="[285]"></a>lv_draw_mask_apply</STRONG> (Thumb, 84 bytes, Stack size 40 bytes, lv_draw_mask.o(i.lv_draw_mask_apply))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = lv_draw_mask_apply
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_img_decoded
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border_generic
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_shadow
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_ver
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_skew
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_hor
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_letter_normal
</UL>

<P><STRONG><a name="[287]"></a>lv_draw_mask_free_param</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, lv_draw_mask.o(i.lv_draw_mask_free_param))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = lv_draw_mask_free_param &rArr; lv_mem_free &rArr; lv_tlsf_free &rArr; block_merge_prev &rArr; block_absorb &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
</UL>
<BR>[Called By]<UL><LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_arc
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border_generic
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shadow_draw_corner_buf
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_shadow
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_skew
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_indic
</UL>

<P><STRONG><a name="[27d]"></a>lv_draw_mask_is_any</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, lv_draw_mask.o(i.lv_draw_mask_is_any))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = lv_draw_mask_is_any &rArr; _lv_area_is_in &rArr; _lv_area_is_point_on &rArr;  _lv_area_is_point_on (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_in
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_out
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_img_decoded
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border_generic
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_shadow
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_ver
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_hor
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_letter_normal
</UL>

<P><STRONG><a name="[3e1]"></a>lv_draw_mask_line_angle_init</STRONG> (Thumb, 74 bytes, Stack size 40 bytes, lv_draw_mask.o(i.lv_draw_mask_line_angle_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = lv_draw_mask_line_angle_init &rArr; lv_draw_mask_line_points_init &rArr; lv_memset_00
</UL>
<BR>[Calls]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_trigo_sin
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_line_points_init
</UL>
<BR>[Called By]<UL><LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_angle_init
</UL>

<P><STRONG><a name="[2c4]"></a>lv_draw_mask_line_points_init</STRONG> (Thumb, 422 bytes, Stack size 40 bytes, lv_draw_mask.o(i.lv_draw_mask_line_points_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = lv_draw_mask_line_points_init &rArr; lv_memset_00
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_00
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_polygon
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_skew
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_line_angle_init
</UL>

<P><STRONG><a name="[281]"></a>lv_draw_mask_radius_init</STRONG> (Thumb, 404 bytes, Stack size 40 bytes, lv_draw_mask.o(i.lv_draw_mask_radius_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = lv_draw_mask_radius_init &rArr; circ_calc_aa4 &rArr; lv_mem_buf_get &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_00
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_width
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_height
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_copy
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circ_calc_aa4
</UL>
<BR>[Called By]<UL><LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_arc
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border_generic
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shadow_draw_corner_buf
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_shadow
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_indic
</UL>

<P><STRONG><a name="[3e6]"></a>lv_draw_mask_remove_custom</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, lv_draw_mask.o(i.lv_draw_mask_remove_custom))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lv_draw_mask_remove_custom
</UL>
<BR>[Calls]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_remove_id
</UL>
<BR>[Called By]<UL><LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_polygon
</UL>

<P><STRONG><a name="[286]"></a>lv_draw_mask_remove_id</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, lv_draw_mask.o(i.lv_draw_mask_remove_id))
<BR><BR>[Called By]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_remove_custom
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_arc
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border_generic
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_shadow
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_skew
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_indic
</UL>

<P><STRONG><a name="[29c]"></a>lv_draw_rect</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, lv_draw_rect.o(i.lv_draw_rect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lv_draw_rect
</UL>
<BR>[Called By]<UL><LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_scrollbar
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area_part
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_quarter_3
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_quarter_2
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_quarter_1
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_quarter_0
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_polygon
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_line
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_arc
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_error
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_indic
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_draw
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_box
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_knob
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_cursor
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
</UL>

<P><STRONG><a name="[29a]"></a>lv_draw_rect_dsc_init</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, lv_draw_rect.o(i.lv_draw_rect_dsc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = lv_draw_rect_dsc_init &rArr; lv_color_white &rArr; lv_color_make
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_00
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_white
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_black
</UL>
<BR>[Called By]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scrollbar_init_draw_dsc
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area_part
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_line
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_arc
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_error
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_indic
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_draw
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_box
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_knob
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_cursor
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
</UL>

<P><STRONG><a name="[92]"></a>lv_draw_sw_arc</STRONG> (Thumb, 938 bytes, Stack size 328 bytes, lv_draw_sw_arc.o(i.lv_draw_sw_arc))
<BR><BR>[Stack]<UL><LI>Max Depth = 712<LI>Call Chain = lv_draw_sw_arc &rArr; lv_draw_mask_radius_init &rArr; circ_calc_aa4 &rArr; lv_mem_buf_get &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect_dsc_init
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius_init
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_free_param
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_add
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_remove_id
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_angle_init
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_rounded_area
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_quarter_3
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_quarter_2
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_quarter_1
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_quarter_0
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_draw_sw.o(i.lv_draw_sw_init_ctx)
</UL>
<P><STRONG><a name="[94]"></a>lv_draw_sw_bg</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lv_draw_sw_rect.o(i.lv_draw_sw_bg))
<BR><BR>[Stack]<UL><LI>Max Depth = 896<LI>Call Chain = lv_draw_sw_bg &rArr; draw_bg_img &rArr; lv_draw_img &rArr; decode_and_draw &rArr; show_error &rArr; lv_draw_label &rArr; lv_txt_get_size &rArr; _lv_txt_get_next_line &rArr; lv_txt_get_next_word &rArr; lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg_img
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_draw_sw.o(i.lv_draw_sw_init_ctx)
</UL>
<P><STRONG><a name="[27e]"></a>lv_draw_sw_blend</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, lv_draw_sw_blend.o(i.lv_draw_sw_blend))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = lv_draw_sw_blend &rArr; _lv_area_intersect
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_img_decoded
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border_generic
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_shadow
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border_simple
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_ver
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_skew
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_hor
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_letter_normal
</UL>

<P><STRONG><a name="[9a]"></a>lv_draw_sw_blend_basic</STRONG> (Thumb, 424 bytes, Stack size 72 bytes, lv_draw_sw_blend.o(i.lv_draw_sw_blend_basic))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = lv_draw_sw_blend_basic &rArr; fill_normal &rArr; lv_color_mix
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_refr_get_disp_refreshing
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_move
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;map_set_px
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;map_normal
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;map_blended
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_width
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_set_px
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_normal
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_blended
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_draw_sw.o(i.lv_draw_sw_init_ctx)
</UL>
<P><STRONG><a name="[96]"></a>lv_draw_sw_img_decoded</STRONG> (Thumb, 1306 bytes, Stack size 248 bytes, lv_draw_sw_img.o(i.lv_draw_sw_img_decoded))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = lv_draw_sw_img_decoded &rArr; lv_mem_buf_get &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_hor_res
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_00
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_size
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_refr_get_disp_refreshing
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_mix_premult
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_width
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_height
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_blend
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_ff
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_is_any
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_apply
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_buf_transform_init
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_buf_transform
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_draw_sw.o(i.lv_draw_sw_init_ctx)
</UL>
<P><STRONG><a name="[8d]"></a>lv_draw_sw_init_ctx</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, lv_draw_sw.o(i.lv_draw_sw_init_ctx))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = lv_draw_sw_init_ctx &rArr; lv_memset_00
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_00
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_hal_disp.o(i.lv_disp_drv_init)
</UL>
<P><STRONG><a name="[95]"></a>lv_draw_sw_letter</STRONG> (Thumb, 248 bytes, Stack size 56 bytes, lv_draw_sw_letter.o(i.lv_draw_sw_letter))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = lv_draw_sw_letter &rArr; draw_letter_normal &rArr; lv_mem_buf_get &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_glyph_dsc
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_glyph_bitmap
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_letter_normal
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_draw_sw.o(i.lv_draw_sw_init_ctx)
</UL>
<P><STRONG><a name="[97]"></a>lv_draw_sw_line</STRONG> (Thumb, 516 bytes, Stack size 112 bytes, lv_draw_sw_line.o(i.lv_draw_sw_line))
<BR><BR>[Stack]<UL><LI>Max Depth = 704<LI>Call Chain = lv_draw_sw_line &rArr; draw_line_skew &rArr; lv_mem_buf_get &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect_dsc_init
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_ver
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_skew
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_hor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_draw_sw.o(i.lv_draw_sw_init_ctx)
</UL>
<P><STRONG><a name="[98]"></a>lv_draw_sw_polygon</STRONG> (Thumb, 908 bytes, Stack size 128 bytes, lv_draw_sw_polygon.o(i.lv_draw_sw_polygon))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = lv_draw_sw_polygon &rArr; lv_mem_buf_get &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_remove_custom
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_add
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_line_points_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_draw_sw.o(i.lv_draw_sw_init_ctx)
</UL>
<P><STRONG><a name="[93]"></a>lv_draw_sw_rect</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lv_draw_sw_rect.o(i.lv_draw_sw_rect))
<BR><BR>[Stack]<UL><LI>Max Depth = 896<LI>Call Chain = lv_draw_sw_rect &rArr; draw_bg_img &rArr; lv_draw_img &rArr; decode_and_draw &rArr; show_error &rArr; lv_draw_label &rArr; lv_txt_get_size &rArr; _lv_txt_get_next_line &rArr; lv_txt_get_next_word &rArr; lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_shadow
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_outline
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg_img
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_draw_sw.o(i.lv_draw_sw_init_ctx)
</UL>
<P><STRONG><a name="[99]"></a>lv_draw_sw_wait_for_finish</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lv_draw_sw.o(i.lv_draw_sw_wait_for_finish))
<BR>[Address Reference Count : 1]<UL><LI> lv_draw_sw.o(i.lv_draw_sw_init_ctx)
</UL>
<P><STRONG><a name="[218]"></a>lv_dropdown_close</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, lv_dropdown.o(i.lv_dropdown_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = lv_dropdown_close &rArr; lv_obj_clear_state &rArr; lv_obj_set_state &rArr; _lv_obj_style_create_transition &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_state
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_release_handler
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn_release_handler
</UL>

<P><STRONG><a name="[3f2]"></a>lv_dropdown_create</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, lv_dropdown.o(i.lv_dropdown_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = lv_dropdown_create &rArr; lv_obj_class_init_obj &rArr; lv_theme_apply &rArr; lv_obj_remove_style &rArr; trans_del &rArr; lv_style_remove_prop &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
</UL>

<P><STRONG><a name="[532]"></a>lv_dropdown_get_selected</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_dropdown.o(i.lv_dropdown_get_selected))
<BR><BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;month_event_cb
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;year_event_cb
</UL>

<P><STRONG><a name="[2d7]"></a>lv_dropdown_get_selected_str</STRONG> (Thumb, 126 bytes, Stack size 40 bytes, lv_dropdown.o(i.lv_dropdown_get_selected_str))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = lv_dropdown_get_selected_str &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
</UL>

<P><STRONG><a name="[217]"></a>lv_dropdown_is_open</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, lv_dropdown.o(i.lv_dropdown_is_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lv_dropdown_is_open
</UL>
<BR>[Calls]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn_release_handler
</UL>

<P><STRONG><a name="[21d]"></a>lv_dropdown_open</STRONG> (Thumb, 676 bytes, Stack size 64 bytes, lv_dropdown.o(i.lv_dropdown_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 744<LI>Call Chain = lv_dropdown_open &rArr; lv_obj_align_to &rArr; lv_obj_update_layout &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_default
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_y
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_ver_res
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_parent
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_state
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_screen
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_update_layout
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_width
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_height
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_y2
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_y
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align_to
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_calculate_style_text_align
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_to_index
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text_static
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;position_to_selected
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_border_width
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_label
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn_release_handler
</UL>

<P><STRONG><a name="[3ff]"></a>lv_dropdown_set_options</STRONG> (Thumb, 174 bytes, Stack size 24 bytes, lv_dropdown.o(i.lv_dropdown_set_options))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = lv_dropdown_set_options &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
</UL>

<P><STRONG><a name="[3ef]"></a>lv_dropdown_set_options_static</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, lv_dropdown.o(i.lv_dropdown_set_options_static))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = lv_dropdown_set_options_static &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; _lv_inv_area &rArr; _lv_area_is_in &rArr; _lv_area_is_point_on &rArr;  _lv_area_is_point_on (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_constructor
</UL>

<P><STRONG><a name="[401]"></a>lv_dropdown_set_selected</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, lv_dropdown.o(i.lv_dropdown_set_selected))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = lv_dropdown_set_selected &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; _lv_inv_area &rArr; _lv_area_is_in &rArr; _lv_area_is_point_on &rArr;  _lv_area_is_point_on (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_changed_event_cb
</UL>

<P><STRONG><a name="[2e3]"></a>lv_event_get_code</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_event.o(i.lv_event_get_code))
<BR><BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_event
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_event
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_event
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_event
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_list_event
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_event
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_label_event
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_cursor_position_on_click
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;label_event_cb
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_event
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_event
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_event
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_event
</UL>

<P><STRONG><a name="[46c]"></a>lv_event_get_current_target</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_event.o(i.lv_event_get_current_target))
<BR><BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
</UL>

<P><STRONG><a name="[2ab]"></a>lv_event_get_draw_ctx</STRONG> (Thumb, 56 bytes, Stack size 4 bytes, lv_event.o(i.lv_event_get_draw_ctx))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = lv_event_get_draw_ctx
</UL>
<BR>[Calls]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_param
</UL>
<BR>[Called By]<UL><LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_indic
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_draw
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_list
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_knob
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_label
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_placeholder
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_cursor
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
</UL>

<P><STRONG><a name="[402]"></a>lv_event_get_indev</STRONG> (Thumb, 116 bytes, Stack size 4 bytes, lv_event.o(i.lv_event_get_indev))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = lv_event_get_indev
</UL>
<BR>[Calls]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_param
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
</UL>

<P><STRONG><a name="[2f6]"></a>lv_event_get_param</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_event.o(i.lv_event_get_param))
<BR><BR>[Called By]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_set_ext_draw_size
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_indev
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_draw_ctx
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_part_begin_event_cb
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_event
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_event
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_event
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_event
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_event
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_label_event
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_event
</UL>

<P><STRONG><a name="[2aa]"></a>lv_event_get_target</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_event.o(i.lv_event_get_target))
<BR><BR>[Called By]<UL><LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_changed_event_cb
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;month_event_cb
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_changed_event_cb
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;month_event_cb
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_part_begin_event_cb
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;year_event_cb
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_event
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_event
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_indic
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_event
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_draw
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_event
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_list_event
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_list
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_event
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_knob
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_label_event
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_label
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_cursor_position_on_click
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;label_event_cb
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_placeholder
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_cursor
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_event
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_event
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_event
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_event
</UL>

<P><STRONG><a name="[531]"></a>lv_event_get_user_data</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_event.o(i.lv_event_get_user_data))
<BR><BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;month_event_cb
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;year_event_cb
</UL>

<P><STRONG><a name="[198]"></a>lv_event_send</STRONG> (Thumb, 102 bytes, Stack size 48 bytes, lv_event.o(i.lv_event_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
</UL>
<BR>[Called By]<UL><LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_parent
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_hit_test
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_scroll_throw_handler
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_scroll_handler
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_proc_release
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_proc_press
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_keypad_proc
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_gesture
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_encoder_proc
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_click_focus
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_set_editing
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_send_data
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_remove_obj
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_remove_all_objs
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_focus_obj
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_next_core
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_ext_draw_size
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_scrollbar
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_by_raw
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_area_into_view
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_anim_ready_cb
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_to
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_self_width
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_self_height
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refresh_children_style
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_obj
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_obj_and_children
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_get_top_obj
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_to_index
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_del_core
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flex_update
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;children_repos
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_set_showed_date
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_text
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_char
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_indic
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_draw
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_close
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_release_handler
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn_release_handler
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_knob
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;release_handler
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_del_char
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_text
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;insert_handler
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_event
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
</UL>

<P><STRONG><a name="[403]"></a>lv_event_set_ext_draw_size</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, lv_event.o(i.lv_event_set_ext_draw_size))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_event_set_ext_draw_size
</UL>
<BR>[Calls]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_param
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_event
</UL>

<P><STRONG><a name="[404]"></a>lv_extra_init</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, lv_extra.o(i.lv_extra_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = lv_extra_init &rArr; lv_flex_init &rArr; lv_layout_register &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_flex_init
</UL>
<BR>[Called By]<UL><LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_init
</UL>

<P><STRONG><a name="[405]"></a>lv_flex_init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, lv_flex.o(i.lv_flex_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = lv_flex_init &rArr; lv_layout_register &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_layout_register
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_register_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_extra_init
</UL>

<P><STRONG><a name="[cf]"></a>lv_font_get_bitmap_fmt_txt</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, lv_font_fmt_txt.o(i.lv_font_get_bitmap_fmt_txt))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = lv_font_get_bitmap_fmt_txt &rArr; get_glyph_dsc_id &rArr; _lv_utils_bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_glyph_dsc_id
</UL>
<BR>[Address Reference Count : 4]<UL><LI> lv_font_montserrat_14.o(.constdata)
<LI> font_bahnschrift_17.o(.constdata)
<LI> font_bahnschrift_32.o(.constdata)
<LI> font_bahnschrift_56.o(.constdata)
</UL>
<P><STRONG><a name="[3ee]"></a>lv_font_get_glyph_bitmap</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lv_font.o(i.lv_font_get_glyph_bitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lv_font_get_glyph_bitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_letter
</UL>

<P><STRONG><a name="[3ed]"></a>lv_font_get_glyph_dsc</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, lv_font.o(i.lv_font_get_glyph_dsc))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = lv_font_get_glyph_dsc
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_letter
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_glyph_width
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwd_char_hider
</UL>

<P><STRONG><a name="[ce]"></a>lv_font_get_glyph_dsc_fmt_txt</STRONG> (Thumb, 198 bytes, Stack size 64 bytes, lv_font_fmt_txt.o(i.lv_font_get_glyph_dsc_fmt_txt))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = lv_font_get_glyph_dsc_fmt_txt &rArr; get_kern_value &rArr; _lv_utils_bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_kern_value
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_glyph_dsc_id
</UL>
<BR>[Address Reference Count : 4]<UL><LI> lv_font_montserrat_14.o(.constdata)
<LI> font_bahnschrift_17.o(.constdata)
<LI> font_bahnschrift_32.o(.constdata)
<LI> font_bahnschrift_56.o(.constdata)
</UL>
<P><STRONG><a name="[1cd]"></a>lv_font_get_glyph_width</STRONG> (Thumb, 54 bytes, Stack size 40 bytes, lv_font.o(i.lv_font_get_glyph_width))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_glyph_dsc
</UL>
<BR>[Called By]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_width
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_get_next_line
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_next_word
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_is_char_under_pos
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_on
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_cursor_area
</UL>

<P><STRONG><a name="[408]"></a>lv_fs_close</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, lv_fs.o(i.lv_fs_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = lv_fs_close &rArr; lv_mem_free &rArr; lv_tlsf_free &rArr; block_merge_prev &rArr; block_absorb &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_open
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_info
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_close
</UL>

<P><STRONG><a name="[409]"></a>lv_fs_get_drv</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, lv_fs.o(i.lv_fs_get_drv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lv_fs_get_drv
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
</UL>
<BR>[Called By]<UL><LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_open
</UL>

<P><STRONG><a name="[40a]"></a>lv_fs_get_ext</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, lv_fs.o(i.lv_fs_get_ext))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lv_fs_get_ext &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_open
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_info
</UL>

<P><STRONG><a name="[40b]"></a>lv_fs_open</STRONG> (Thumb, 150 bytes, Stack size 32 bytes, lv_fs.o(i.lv_fs_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = lv_fs_open &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_00
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_get_drv
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_get_real_path
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_open
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_info
</UL>

<P><STRONG><a name="[40d]"></a>lv_fs_read</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, lv_fs.o(i.lv_fs_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = lv_fs_read &rArr; lv_fs_read_cached &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_read_cached
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_open
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_info
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_line_true_color
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_line_indexed
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_line_alpha
</UL>

<P><STRONG><a name="[41b]"></a>lv_fs_seek</STRONG> (Thumb, 214 bytes, Stack size 24 bytes, lv_fs.o(i.lv_fs_seek))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lv_fs_seek
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_open
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_line_true_color
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_line_indexed
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_line_alpha
</UL>

<P><STRONG><a name="[410]"></a>lv_gradient_calculate</STRONG> (Thumb, 322 bytes, Stack size 64 bytes, lv_draw_sw_gradient.o(i.lv_gradient_calculate))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = lv_gradient_calculate &rArr; lv_color_to32
</UL>
<BR>[Calls]<UL><LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_to32
</UL>
<BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_gradient_get
</UL>

<P><STRONG><a name="[288]"></a>lv_gradient_cleanup</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lv_draw_sw_gradient.o(i.lv_gradient_cleanup))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = lv_gradient_cleanup &rArr; lv_mem_free &rArr; lv_tlsf_free &rArr; block_merge_prev &rArr; block_absorb &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
</UL>
<BR>[Called By]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
</UL>

<P><STRONG><a name="[283]"></a>lv_gradient_get</STRONG> (Thumb, 188 bytes, Stack size 40 bytes, lv_draw_sw_gradient.o(i.lv_gradient_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = lv_gradient_get &rArr; allocate_item &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_gradient_set_cache_size
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_gradient_calculate
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iterate_cache
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compute_key
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;allocate_item
</UL>
<BR>[Called By]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
</UL>

<P><STRONG><a name="[412]"></a>lv_gradient_set_cache_size</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, lv_draw_sw_gradient.o(i.lv_gradient_set_cache_size))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = lv_gradient_set_cache_size &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_00
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_gradient_get
</UL>

<P><STRONG><a name="[413]"></a>lv_group_add_obj</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, lv_group.o(i.lv_group_add_obj))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = lv_group_add_obj &rArr; lv_group_refocus &rArr; lv_group_focus_prev &rArr; focus_next_core &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; _lv_inv_area &rArr; _lv_area_is_in &rArr; _lv_area_is_point_on &rArr;  _lv_area_is_point_on (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_group
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_tail
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_refocus
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_spec_attr
</UL>
<BR>[Called By]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;view_will_appear
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;view_will_appear
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;view_will_appear
</UL>

<P><STRONG><a name="[416]"></a>lv_group_create</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, lv_group.o(i.lv_group_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = lv_group_create &rArr; _lv_ll_ins_head &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_head
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_init
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[361]"></a>lv_group_focus_next</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lv_group.o(i.lv_group_focus_next))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = lv_group_focus_next &rArr; focus_next_core &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; _lv_inv_area &rArr; _lv_area_is_in &rArr; _lv_area_is_point_on &rArr;  _lv_area_is_point_on (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_next_core
</UL>
<BR>[Called By]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_keypad_proc
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_encoder_proc
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_refocus
</UL>

<P><STRONG><a name="[358]"></a>lv_group_focus_obj</STRONG> (Thumb, 184 bytes, Stack size 24 bytes, lv_group.o(i.lv_group_focus_obj))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = lv_group_focus_obj &rArr; lv_group_set_editing &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; _lv_inv_area &rArr; _lv_area_is_in &rArr; _lv_area_is_point_on &rArr;  _lv_area_is_point_on (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_group
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_set_editing
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_indev
</UL>
<BR>[Called By]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_click_focus
</UL>

<P><STRONG><a name="[360]"></a>lv_group_focus_prev</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lv_group.o(i.lv_group_focus_prev))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = lv_group_focus_prev &rArr; focus_next_core &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; _lv_inv_area &rArr; _lv_area_is_in &rArr; _lv_area_is_point_on &rArr;  _lv_area_is_point_on (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_next_core
</UL>
<BR>[Called By]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_keypad_proc
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_encoder_proc
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_refocus
</UL>

<P><STRONG><a name="[45c]"></a>lv_group_get_default</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_group.o(i.lv_group_get_default))
<BR><BR>[Called By]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;view_will_disappear
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;view_will_appear
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;view_will_disappear
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;view_will_appear
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;view_will_disappear
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;view_will_appear
</UL>

<P><STRONG><a name="[35c]"></a>lv_group_get_editing</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lv_group.o(i.lv_group_get_editing))
<BR><BR>[Called By]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_encoder_proc
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_event
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_release_handler
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;release_handler
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
</UL>

<P><STRONG><a name="[35a]"></a>lv_group_get_focused</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lv_group.o(i.lv_group_get_focused))
<BR><BR>[Called By]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_keypad_proc
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_encoder_proc
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_set_editing
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_send_data
</UL>

<P><STRONG><a name="[35e]"></a>lv_group_get_obj_count</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, lv_group.o(i.lv_group_get_obj_count))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lv_group_get_obj_count &rArr; _lv_ll_get_len
</UL>
<BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_len
</UL>
<BR>[Called By]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_encoder_proc
</UL>

<P><STRONG><a name="[417]"></a>lv_group_remove_all_objs</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, lv_group.o(i.lv_group_remove_all_objs))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = lv_group_remove_all_objs &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; _lv_inv_area &rArr; _lv_area_is_in &rArr; _lv_area_is_point_on &rArr;  _lv_area_is_point_on (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_clear
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_indev
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;view_will_disappear
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;view_will_appear
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;view_will_disappear
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;view_will_appear
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;view_will_disappear
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;view_will_appear
</UL>

<P><STRONG><a name="[418]"></a>lv_group_remove_obj</STRONG> (Thumb, 186 bytes, Stack size 24 bytes, lv_group.o(i.lv_group_remove_obj))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = lv_group_remove_obj &rArr; lv_group_refocus &rArr; lv_group_focus_prev &rArr; focus_next_core &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; _lv_inv_area &rArr; _lv_area_is_in &rArr; _lv_area_is_point_on &rArr;  _lv_area_is_point_on (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_group
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_remove
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_tail
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_refocus
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_indev
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_destructor
</UL>

<P><STRONG><a name="[35d]"></a>lv_group_send_data</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, lv_group.o(i.lv_group_send_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = lv_group_send_data &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_get_focused
</UL>
<BR>[Called By]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_keypad_proc
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_encoder_proc
</UL>

<P><STRONG><a name="[529]"></a>lv_group_set_default</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_group.o(i.lv_group_set_default))
<BR><BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[21c]"></a>lv_group_set_editing</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, lv_group.o(i.lv_group_set_editing))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = lv_group_set_editing &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; _lv_inv_area &rArr; _lv_area_is_in &rArr; _lv_area_is_point_on &rArr;  _lv_area_is_point_on (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_get_focused
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_indev
</UL>
<BR>[Called By]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_keypad_proc
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_encoder_proc
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_focus_obj
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_release_handler
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn_release_handler
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;release_handler
</UL>

<P><STRONG><a name="[186]"></a>lv_img_buf_get_px_alpha</STRONG> (Thumb, 298 bytes, Stack size 44 bytes, lv_img_buf.o(i.lv_img_buf_get_px_alpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = lv_img_buf_get_px_alpha
</UL>
<BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_buf_transform
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_buf_transform_anti_alias
</UL>

<P><STRONG><a name="[185]"></a>lv_img_buf_get_px_color</STRONG> (Thumb, 408 bytes, Stack size 56 bytes, lv_img_buf.o(i.lv_img_buf_get_px_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = lv_img_buf_get_px_color &rArr; lv_memcpy_small
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memcpy_small
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_cf_get_px_size
</UL>
<BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_buf_transform
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_buf_transform_anti_alias
</UL>

<P><STRONG><a name="[419]"></a>lv_img_cf_get_px_size</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, lv_draw_img.o(i.lv_img_cf_get_px_size))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_open
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_line_true_color
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_line_indexed
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_line_alpha
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_buf_get_px_color
</UL>

<P><STRONG><a name="[18b]"></a>lv_img_cf_has_alpha</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, lv_draw_img.o(i.lv_img_cf_has_alpha))
<BR><BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_and_draw
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_buf_transform_init
</UL>

<P><STRONG><a name="[18a]"></a>lv_img_cf_is_chroma_keyed</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, lv_draw_img.o(i.lv_img_cf_is_chroma_keyed))
<BR><BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_and_draw
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_buf_transform_init
</UL>

<P><STRONG><a name="[70]"></a>lv_img_decoder_built_in_close</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, lv_img_decoder.o(i.lv_img_decoder_built_in_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = lv_img_decoder_built_in_close &rArr; lv_fs_close &rArr; lv_mem_free &rArr; lv_tlsf_free &rArr; block_merge_prev &rArr; block_absorb &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_close
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_open
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_img_decoder.o(i._lv_img_decoder_init)
</UL>
<P><STRONG><a name="[6d]"></a>lv_img_decoder_built_in_info</STRONG> (Thumb, 230 bytes, Stack size 48 bytes, lv_img_decoder.o(i.lv_img_decoder_built_in_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = lv_img_decoder_built_in_info &rArr; lv_fs_read &rArr; lv_fs_read_cached &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_src_get_type
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_read
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_open
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_get_ext
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_close
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_img_decoder.o(i._lv_img_decoder_init)
</UL>
<P><STRONG><a name="[6e]"></a>lv_img_decoder_built_in_open</STRONG> (Thumb, 536 bytes, Stack size 48 bytes, lv_img_decoder.o(i.lv_img_decoder_built_in_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = lv_img_decoder_built_in_open &rArr; lv_fs_read &rArr; lv_fs_read_cached &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_00
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_cf_get_px_size
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_seek
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_read
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_open
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_get_ext
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_close
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_close
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_make
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_img_decoder.o(i._lv_img_decoder_init)
</UL>
<P><STRONG><a name="[6f]"></a>lv_img_decoder_built_in_read_line</STRONG> (Thumb, 204 bytes, Stack size 40 bytes, lv_img_decoder.o(i.lv_img_decoder_built_in_read_line))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = lv_img_decoder_built_in_read_line &rArr; lv_img_decoder_built_in_line_alpha &rArr; lv_fs_read &rArr; lv_fs_read_cached &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_line_true_color
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_line_indexed
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_line_alpha
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_img_decoder.o(i._lv_img_decoder_init)
</UL>
<P><STRONG><a name="[277]"></a>lv_img_decoder_close</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, lv_img_decoder.o(i.lv_img_decoder_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = lv_img_decoder_close &rArr; lv_mem_free &rArr; lv_tlsf_free &rArr; block_merge_prev &rArr; block_absorb &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
</UL>
<BR>[Called By]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_cleanup
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_and_draw
</UL>

<P><STRONG><a name="[18f]"></a>lv_img_decoder_create</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, lv_img_decoder.o(i.lv_img_decoder_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = lv_img_decoder_create &rArr; _lv_ll_ins_head &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_head
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_00
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_decoder_init
</UL>

<P><STRONG><a name="[28e]"></a>lv_img_decoder_get_info</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, lv_img_decoder.o(i.lv_img_decoder_get_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = lv_img_decoder_get_info &rArr; lv_memset_00
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_00
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_src_get_type
</UL>
<BR>[Called By]<UL><LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area_part
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg_img
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
</UL>

<P><STRONG><a name="[18d]"></a>lv_img_decoder_open</STRONG> (Thumb, 246 bytes, Stack size 48 bytes, lv_img_decoder.o(i.lv_img_decoder_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = lv_img_decoder_open &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_00
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_src_get_type
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_cache_open
</UL>

<P><STRONG><a name="[276]"></a>lv_img_decoder_read_line</STRONG> (Thumb, 52 bytes, Stack size 40 bytes, lv_img_decoder.o(i.lv_img_decoder_read_line))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = lv_img_decoder_read_line
</UL>
<BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_and_draw
</UL>

<P><STRONG><a name="[193]"></a>lv_img_decoder_set_close_cb</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lv_img_decoder.o(i.lv_img_decoder_set_close_cb))
<BR><BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_decoder_init
</UL>

<P><STRONG><a name="[190]"></a>lv_img_decoder_set_info_cb</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lv_img_decoder.o(i.lv_img_decoder_set_info_cb))
<BR><BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_decoder_init
</UL>

<P><STRONG><a name="[191]"></a>lv_img_decoder_set_open_cb</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lv_img_decoder.o(i.lv_img_decoder_set_open_cb))
<BR><BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_decoder_init
</UL>

<P><STRONG><a name="[192]"></a>lv_img_decoder_set_read_line_cb</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lv_img_decoder.o(i.lv_img_decoder_set_read_line_cb))
<BR><BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_decoder_init
</UL>

<P><STRONG><a name="[28a]"></a>lv_img_src_get_type</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, lv_draw_img.o(i.lv_img_src_get_type))
<BR><BR>[Called By]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_get_info
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg_img
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_info
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_open
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
</UL>

<P><STRONG><a name="[41f]"></a>lv_indev_drv_init</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, lv_hal_indev.o(i.lv_indev_drv_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lv_indev_drv_init &rArr; lv_memset_00
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_00
</UL>
<BR>[Called By]<UL><LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_port_indev_init
</UL>

<P><STRONG><a name="[420]"></a>lv_indev_drv_register</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, lv_hal_indev.o(i.lv_indev_drv_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = lv_indev_drv_register &rArr; lv_timer_create &rArr; _lv_ll_ins_head &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_default
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_head
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_00
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_create
</UL>
<BR>[Called By]<UL><LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_port_indev_init
</UL>

<P><STRONG><a name="[1a2]"></a>lv_indev_get_act</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_indev.o(i.lv_indev_get_act))
<BR><BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_scroll_throw_handler
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_throw_predict_y
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_throw_predict_x
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_scroll_obj
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_event
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_list_event
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_release_handler
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_press_handler
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn_release_handler
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;release_handler
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_cursor_position_on_click
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_event
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_pressed_cell
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;view_will_appear
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;view_will_appear
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;view_will_appear
</UL>

<P><STRONG><a name="[330]"></a>lv_indev_get_next</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lv_hal_indev.o(i.lv_indev_get_next))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_indev_get_next
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
</UL>
<BR>[Called By]<UL><LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_reset
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_indev
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scrollbar_area
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_del_core
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
</UL>

<P><STRONG><a name="[306]"></a>lv_indev_get_obj_act</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_indev.o(i.lv_indev_get_obj_act))
<BR><BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;elastic_diff
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_del_core
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
</UL>

<P><STRONG><a name="[338]"></a>lv_indev_get_point</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, lv_indev.o(i.lv_indev_get_point))
<BR><BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_release_handler
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_press_handler
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;release_handler
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_cursor_position_on_click
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_pressed_cell
</UL>

<P><STRONG><a name="[47a]"></a>lv_indev_get_scroll_dir</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, lv_indev.o(i.lv_indev_get_scroll_dir))
<BR><BR>[Called By]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scrollbar_area
</UL>

<P><STRONG><a name="[216]"></a>lv_indev_get_scroll_obj</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, lv_indev.o(i.lv_indev_get_scroll_obj))
<BR><BR>[Called By]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scrollbar_area
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_list_event
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn_release_handler
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_event
</UL>

<P><STRONG><a name="[21a]"></a>lv_indev_get_type</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lv_indev.o(i.lv_indev_get_type))
<BR><BR>[Called By]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_indev
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_event
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_release_handler
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_press_handler
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn_release_handler
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;release_handler
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_cursor_position_on_click
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_event
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_pressed_cell
</UL>

<P><STRONG><a name="[4c1]"></a>lv_indev_get_vect</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, lv_indev.o(i.lv_indev_get_vect))
<BR><BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_cursor_position_on_click
</UL>

<P><STRONG><a name="[a1]"></a>lv_indev_read_timer_cb</STRONG> (Thumb, 266 bytes, Stack size 32 bytes, lv_indev.o(i.lv_indev_read_timer_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = lv_indev_read_timer_cb &rArr; indev_encoder_proc &rArr; lv_obj_clear_state &rArr; lv_obj_set_state &rArr; _lv_obj_style_create_transition &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_get
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_read
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_proc_reset_query_handler
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_pointer_proc
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_keypad_proc
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_encoder_proc
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_button_proc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_hal_indev.o(i.lv_indev_drv_register)
</UL>
<P><STRONG><a name="[422]"></a>lv_indev_reset</STRONG> (Thumb, 180 bytes, Stack size 16 bytes, lv_indev.o(i.lv_indev_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lv_indev_reset &rArr; lv_indev_get_next
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_next
</UL>
<BR>[Called By]<UL><LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_del_core
</UL>

<P><STRONG><a name="[3ab]"></a>lv_indev_reset_long_press</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, lv_indev.o(i.lv_indev_reset_long_press))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_indev_reset_long_press
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_get
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
</UL>

<P><STRONG><a name="[552]"></a>lv_indev_scroll_throw_predict</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, lv_indev_scroll.o(i.lv_indev_scroll_throw_predict))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lv_indev_scroll_throw_predict
</UL>
<BR>[Called By]<UL><LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;release_handler
</UL>

<P><STRONG><a name="[366]"></a>lv_indev_search_obj</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, lv_indev.o(i.lv_indev_search_obj))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + In Cycle
<LI>Call Chain = lv_indev_search_obj &rArr;  lv_indev_search_obj (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_cnt
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_hit_test
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_point_on
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_search_obj
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag
</UL>
<BR>[Called By]<UL><LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_search_obj
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_proc_press
</UL>

<P><STRONG><a name="[528]"></a>lv_indev_set_group</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lv_indev.o(i.lv_indev_set_group))
<BR><BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[598]"></a>lv_indev_wait_release</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lv_indev.o(i.lv_indev_wait_release))
<BR><BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;view_will_appear
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;view_will_appear
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;view_will_appear
</UL>

<P><STRONG><a name="[424]"></a>lv_init</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, lv_obj.o(i.lv_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = lv_init &rArr; lv_extra_init &rArr; lv_flex_init &rArr; lv_layout_register &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_init
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_group_init
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_init
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_extra_init
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_init
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_timer_core_init
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_refr_init
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_style_init
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_decoder_init
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_fs_init
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_anim_core_init
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[243]"></a>lv_label_create</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, lv_label.o(i.lv_label_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = lv_label_create &rArr; lv_obj_class_init_obj &rArr; lv_theme_apply &rArr; lv_obj_remove_style &rArr; trans_del &rArr; lv_style_remove_prop &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdownlist_constructor
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_constructor
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quantity_create
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;estimate_create
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;capacity_create
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_create
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;duration_create
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;count_create
</UL>

<P><STRONG><a name="[42f]"></a>lv_label_get_letter_on</STRONG> (Thumb, 608 bytes, Stack size 112 bytes, lv_label.o(i.lv_label_get_letter_on))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = lv_label_get_letter_on &rArr; _lv_txt_get_next_line &rArr; lv_txt_get_next_word &rArr; lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_coords
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_calculate_style_text_align
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_width
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_glyph_width
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_get_next_line
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_encoded_letter_next_2
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_is_cmd
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_width
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_line_space
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_letter_space
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_font
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_line_height
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_width
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_text
</UL>
<BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;release_handler
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_cursor_up
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_cursor_down
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_cursor_position_on_click
</UL>

<P><STRONG><a name="[431]"></a>lv_label_get_letter_pos</STRONG> (Thumb, 516 bytes, Stack size 104 bytes, lv_label.o(i.lv_label_get_letter_pos))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = lv_label_get_letter_pos &rArr; _lv_txt_get_next_line &rArr; lv_txt_get_next_word &rArr; lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_width
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_coords
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_calculate_style_text_align
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_width
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_get_next_line
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_width
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_line_space
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_letter_space
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_font
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_line_height
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_width
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_text
</UL>
<BR>[Called By]<UL><LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_cursor_up
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_cursor_down
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_cursor_area
</UL>

<P><STRONG><a name="[29f]"></a>lv_label_get_text</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_label.o(i.lv_label_get_text))
<BR><BR>[Called By]<UL><LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_text
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_get_text
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_char
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_box_label
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;release_handler
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_position
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_selected_label_width
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_label
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_is_char_under_pos
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_pos
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_on
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_del_char
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_text
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_cursor_area
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwd_char_hider
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_placeholder
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_cursor
</UL>

<P><STRONG><a name="[2dd]"></a>lv_label_get_text_selection_end</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_label.o(i.lv_label_get_text_selection_end))
<BR><BR>[Called By]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_clear_selection
</UL>

<P><STRONG><a name="[2dc]"></a>lv_label_get_text_selection_start</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_label.o(i.lv_label_get_text_selection_start))
<BR><BR>[Called By]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_clear_selection
</UL>

<P><STRONG><a name="[432]"></a>lv_label_ins_text</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, lv_label.o(i.lv_label_ins_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 512<LI>Call Chain = lv_label_ins_text &rArr; lv_label_set_text &rArr; lv_label_refr_text &rArr; lv_label_get_letter_on &rArr; _lv_txt_get_next_line &rArr; lv_txt_get_next_word &rArr; lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_ins
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_char
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_text
</UL>

<P><STRONG><a name="[433]"></a>lv_label_is_char_under_pos</STRONG> (Thumb, 522 bytes, Stack size 112 bytes, lv_label.o(i.lv_label_is_char_under_pos))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = lv_label_is_char_under_pos &rArr; _lv_txt_get_next_line &rArr; lv_txt_get_next_word &rArr; lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_coords
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_calculate_style_text_align
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_width
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_glyph_width
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_get_next_line
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_encoded_letter_next_2
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_is_cmd
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_width
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_line_space
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_letter_space
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_font
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_line_height
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_width
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_text
</UL>
<BR>[Called By]<UL><LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_cursor_position_on_click
</UL>

<P><STRONG><a name="[428]"></a>lv_label_set_long_mode</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, lv_label.o(i.lv_label_set_long_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = lv_label_set_long_mode &rArr; lv_label_refr_text &rArr; lv_label_get_letter_on &rArr; _lv_txt_get_next_line &rArr; lv_txt_get_next_word &rArr; lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_revert_dots
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_constructor
</UL>

<P><STRONG><a name="[247]"></a>lv_label_set_text</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, lv_label.o(i.lv_label_set_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = lv_label_set_text &rArr; lv_label_refr_text &rArr; lv_label_get_letter_on &rArr; _lv_txt_get_next_line &rArr; lv_txt_get_next_word &rArr; lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_text
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_constructor
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_set_options
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_ins_text
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_del_char
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwd_char_hider
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_constructor
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;label_event_cb
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quantity_create
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;estimate_create
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;capacity_create
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_create
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;duration_create
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;count_create
</UL>

<P><STRONG><a name="[43e]"></a>lv_label_set_text_fmt</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, lv_label.o(i.lv_label_set_text_fmt))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = lv_label_set_text_fmt &rArr; lv_label_refr_text &rArr; lv_label_get_letter_on &rArr; _lv_txt_get_next_line &rArr; lv_txt_get_next_word &rArr; lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_set_text_vfmt
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_changed_event_cb
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;month_event_cb
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update
</UL>

<P><STRONG><a name="[43f]"></a>lv_label_set_text_sel_end</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, lv_label.o(i.lv_label_set_text_sel_end))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = lv_label_set_text_sel_end &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; _lv_inv_area &rArr; _lv_area_is_in &rArr; _lv_area_is_point_on &rArr;  _lv_area_is_point_on (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
</UL>
<BR>[Called By]<UL><LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_clear_selection
</UL>

<P><STRONG><a name="[440]"></a>lv_label_set_text_sel_start</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, lv_label.o(i.lv_label_set_text_sel_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = lv_label_set_text_sel_start &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; _lv_inv_area &rArr; _lv_area_is_in &rArr; _lv_area_is_point_on &rArr;  _lv_area_is_point_on (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
</UL>
<BR>[Called By]<UL><LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_clear_selection
</UL>

<P><STRONG><a name="[3f9]"></a>lv_label_set_text_static</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, lv_label.o(i.lv_label_set_text_static))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = lv_label_set_text_static &rArr; lv_label_refr_text &rArr; lv_label_get_letter_on &rArr; _lv_txt_get_next_line &rArr; lv_txt_get_next_word &rArr; lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
</UL>
<BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
</UL>

<P><STRONG><a name="[406]"></a>lv_layout_register</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, lv_obj_pos.o(i.lv_layout_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = lv_layout_register &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
</UL>
<BR>[Called By]<UL><LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_flex_init
</UL>

<P><STRONG><a name="[399]"></a>lv_map</STRONG> (Thumb, 38 bytes, Stack size 20 bytes, lv_math.o(i.lv_map))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lv_map
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_path_ease_out
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_path_linear
</UL>

<P><STRONG><a name="[1b2]"></a>lv_mem_alloc</STRONG> (Thumb, 48 bytes, Stack size 40 bytes, lv_mem.o(i.lv_mem_alloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_malloc
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_monitor
</UL>
<BR>[Called By]<UL><LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_register
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_tail
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_head
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_spec_attr
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius_init
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_remove_prop
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_trans_style
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_local_style
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_async_call
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_gradient_set_cache_size
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;allocate_item
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circ_calc_aa4
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_open
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_open
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_open
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_default_init
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_set_options
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_read_cached
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_set_text_vfmt
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;allocate_btn_areas_and_controls
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_dot_tmp
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_constructor
</UL>

<P><STRONG><a name="[17b]"></a>lv_mem_buf_free_all</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, lv_mem.o(i.lv_mem_buf_free_all))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = lv_mem_buf_free_all &rArr; lv_mem_free &rArr; lv_tlsf_free &rArr; block_merge_prev &rArr; block_absorb &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
</UL>

<P><STRONG><a name="[25f]"></a>lv_mem_buf_get</STRONG> (Thumb, 242 bytes, Stack size 24 bytes, lv_mem.o(i.lv_mem_buf_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = lv_mem_buf_get &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
</UL>
<BR>[Called By]<UL><LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_buf_rotate
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_polygon
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_img_decoded
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_and_draw
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border_generic
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shadow_draw_corner_buf
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shadow_blur_corner
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_shadow
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_ver
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_skew
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_hor
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_letter_normal
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circ_calc_aa4
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_track_end
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_line_indexed
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_line_alpha
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_set_options
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwd_char_hider
</UL>

<P><STRONG><a name="[263]"></a>lv_mem_buf_release</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, lv_mem.o(i.lv_mem_buf_release))
<BR><BR>[Called By]<UL><LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_buf_rotate
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_polygon
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_img_decoded
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_and_draw
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border_generic
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shadow_draw_corner_buf
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shadow_blur_corner
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_shadow
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_ver
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_skew
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_hor
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_letter_normal
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circ_calc_aa4
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flex_update
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_track_end
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_line_indexed
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_line_alpha
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_set_options
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwd_char_hider
</UL>

<P><STRONG><a name="[17e]"></a>lv_mem_free</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, lv_mem.o(i.lv_mem_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = lv_mem_free &rArr; lv_tlsf_free &rArr; block_merge_prev &rArr; block_absorb &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_free
</UL>
<BR>[Called By]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_style
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_register
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_parent
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_clear
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_remove_obj
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_free_param
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_destructor
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_reset
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_remove_prop
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_del
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_ready_cb
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_free_all
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_draw_mask_cleanup
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_async_call
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_del_core
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_gradient_set_cache_size
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_gradient_cleanup
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circ_calc_aa4
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_close
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_close
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_close
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_open
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text_fmt
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_set_options
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_del
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_async_timer_cb
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anim_ready_handler
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_destructor
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_destructor
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;allocate_btn_areas_and_controls
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_dot_tmp_free
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_destructor
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text_static
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_set_options_static
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_destructor
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_destructor
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_destructor
</UL>

<P><STRONG><a name="[425]"></a>lv_mem_init</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lv_mem.o(i.lv_mem_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = lv_mem_init &rArr; lv_tlsf_create_with_pool &rArr; lv_tlsf_add_pool &rArr; block_insert &rArr; insert_free_block &rArr; align_ptr
</UL>
<BR>[Calls]<UL><LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_create_with_pool
</UL>
<BR>[Called By]<UL><LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_init
</UL>

<P><STRONG><a name="[442]"></a>lv_mem_monitor</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, lv_mem.o(i.lv_mem_monitor))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_mem_monitor &rArr; lv_tlsf_walk_pool &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_walk_pool
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_get_pool
</UL>
<BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
</UL>

<P><STRONG><a name="[333]"></a>lv_mem_realloc</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lv_mem.o(i.lv_mem_realloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_realloc
</UL>
<BR>[Called By]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_style
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_parent
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_event_cb
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_layout_register
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_style
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_trans_style
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_local_style
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_del_core
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_text
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_char
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_ins_text
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_del_char
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_text
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_constructor
</UL>

<P><STRONG><a name="[2af]"></a>lv_memcpy</STRONG> (Thumb, 632 bytes, Stack size 24 bytes, lv_mem.o(i.lv_memcpy))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lv_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_item
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;map_normal
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shadow_blur_corner
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_shadow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_track_end
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_read_cached
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_realloc
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_dot_tmp
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_knob
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwd_char_hider
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_cursor
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
</UL>

<P><STRONG><a name="[284]"></a>lv_memset</STRONG> (Thumb, 116 bytes, Stack size 20 bytes, lv_mem.o(i.lv_memset))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lv_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_shadow
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_monitor
</UL>

<P><STRONG><a name="[179]"></a>lv_memset_00</STRONG> (Thumb, 110 bytes, Stack size 12 bytes, lv_mem.o(i.lv_memset_00))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = lv_memset_00
</UL>
<BR>[Called By]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_init
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_drv_register
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_drv_init
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_register
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_init
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_draw_buf_init
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_read
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_spec_attr
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw_dsc_init
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect_dsc_init
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius_init
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_reset
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_init
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_style
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_trans_style
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_local_style
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_get_info
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img_dsc_init
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_draw_mask_cleanup
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_gradient_set_cache_size
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_item
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_img_decoded
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_init_ctx
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label_dsc_init
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border_generic
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shadow_draw_corner_buf
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_shadow
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border_simple
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_line_points_init
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_ver
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_skew
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_hor
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_letter_normal
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_line
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_angle
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;line_mask_steep
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;line_mask_flat
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line_dsc_init
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_cache_open
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_open
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_create
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_open
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_open
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_transition_dsc_init
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_constructor
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_updatevalue
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;allocate_btn_areas_and_controls
</UL>

<P><STRONG><a name="[294]"></a>lv_memset_ff</STRONG> (Thumb, 114 bytes, Stack size 12 bytes, lv_mem.o(i.lv_memset_ff))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = lv_memset_ff
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_img_decoded
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border_generic
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shadow_draw_corner_buf
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_shadow
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_ver
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_skew
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_hor
</UL>

<P><STRONG><a name="[1ec]"></a>lv_obj_add_event_cb</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, lv_event.o(i.lv_obj_add_event_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = lv_obj_add_event_cb &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_spec_attr
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_constructor
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_constructor
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attach_event
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attach_event
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attach_event
</UL>

<P><STRONG><a name="[3a5]"></a>lv_obj_add_flag</STRONG> (Thumb, 122 bytes, Stack size 40 bytes, lv_obj.o(i.lv_obj_add_flag))
<BR><BR>[Stack]<UL><LI>Max Depth = 356<LI>Call Chain = lv_obj_add_flag &rArr; lv_obj_get_scrollbar_area &rArr; lv_obj_get_scroll_left &rArr; lv_obj_get_style_pad_right &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_mark_layout_as_dirty
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_layout_positioned
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scrollbar_area
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_constructor
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_constructor
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btn_constructor
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_close
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdownlist_constructor
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_constructor
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_constructor
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_cursor_position_on_click
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_constructor
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_state_did_disappear_execute
</UL>

<P><STRONG><a name="[3f6]"></a>lv_obj_add_state</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, lv_obj.o(i.lv_obj_add_state))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = lv_obj_add_state &rArr; lv_obj_set_state &rArr; _lv_obj_style_create_transition &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
</UL>

<P><STRONG><a name="[235]"></a>lv_obj_add_style</STRONG> (Thumb, 194 bytes, Stack size 24 bytes, lv_obj_style.o(i.lv_obj_add_style))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = lv_obj_add_style &rArr; trans_del &rArr; lv_style_remove_prop &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_00
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_del
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;theme_apply
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quantity_create
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;estimate_create
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;capacity_create
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_recent_create
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;infos_create
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_create
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;duration_create
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;count_create
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_dialplate_create
</UL>

<P><STRONG><a name="[244]"></a>lv_obj_align</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, lv_obj_pos.o(i.lv_obj_align))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = lv_obj_align &rArr; lv_obj_set_pos &rArr; lv_obj_set_y &rArr; lv_obj_set_style_y &rArr; lv_obj_set_local_style_prop &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_pos
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_align
</UL>
<BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quantity_create
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;estimate_create
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;capacity_create
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_create
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;duration_create
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;count_create
</UL>

<P><STRONG><a name="[3fb]"></a>lv_obj_align_to</STRONG> (Thumb, 1140 bytes, Stack size 80 bytes, lv_obj_pos.o(i.lv_obj_align_to))
<BR><BR>[Stack]<UL><LI>Max Depth = 680<LI>Call Chain = lv_obj_align_to &rArr; lv_obj_update_layout &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_pos
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_top
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_right
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_align
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_update_layout
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_width
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_height
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_border_width
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_base_dir
</UL>
<BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
</UL>

<P><STRONG><a name="[415]"></a>lv_obj_allocate_spec_attr</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, lv_obj.o(i.lv_obj_allocate_spec_attr))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = lv_obj_allocate_spec_attr &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_00
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_parent
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_add_obj
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_event_cb
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_ext_draw_size
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_scrollbar_mode
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_by_raw
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_ext_click_area
</UL>

<P><STRONG><a name="[44d]"></a>lv_obj_area_is_visible</STRONG> (Thumb, 250 bytes, Stack size 40 bytes, lv_obj_pos.o(i.lv_obj_area_is_visible))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen
</UL>
<BR>[Calls]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_scr_act
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_disp
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_scr_prev
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_layer_top
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_layer_sys
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_screen
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_copy
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_ext_draw_size
</UL>
<BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
</UL>

<P><STRONG><a name="[3a2]"></a>lv_obj_calculate_ext_draw_size</STRONG> (Thumb, 310 bytes, Stack size 48 bytes, lv_obj_draw.o(i.lv_obj_calculate_ext_draw_size))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = lv_obj_calculate_ext_draw_size &rArr; lv_obj_get_style_shadow_width &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_shadow_width
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_shadow_spread
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_shadow_opa
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_shadow_ofs_y
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_shadow_ofs_x
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_outline_width
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_outline_pad
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_outline_opa
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_event
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_event
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_event
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
</UL>

<P><STRONG><a name="[3fe]"></a>lv_obj_calculate_style_text_align</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, lv_obj_style.o(i.lv_obj_calculate_style_text_align))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = lv_obj_calculate_style_text_align &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_position
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_is_char_under_pos
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_pos
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_on
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_cursor_area
</UL>

<P><STRONG><a name="[570]"></a>lv_obj_check_type</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lv_obj.o(i.lv_obj_check_type))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;theme_apply
</UL>

<P><STRONG><a name="[3a0]"></a>lv_obj_class_create_obj</STRONG> (Thumb, 234 bytes, Stack size 24 bytes, lv_obj_class.o(i.lv_obj_class_create_obj))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = lv_obj_class_create_obj &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_default
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_ver_res
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_hor_res
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_spec_attr
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_instance_size
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_00
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_create
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_create
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btn_create
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_create
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_create
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_create
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_create
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_list_create
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_constructor
</UL>

<P><STRONG><a name="[3a1]"></a>lv_obj_class_init_obj</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, lv_obj_class.o(i.lv_obj_class_init_obj))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = lv_obj_class_init_obj &rArr; lv_theme_apply &rArr; lv_obj_remove_style &rArr; trans_del &rArr; lv_style_remove_prop &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_apply
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_get_default
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_add_obj
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_self_size
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_group_def
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_construct
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_mark_layout_as_dirty
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_enable_style_refresh
</UL>
<BR>[Called By]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_create
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_create
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btn_create
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_create
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_create
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_create
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_create
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_list_create
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_constructor
</UL>

<P><STRONG><a name="[39f]"></a>lv_obj_clear_flag</STRONG> (Thumb, 130 bytes, Stack size 40 bytes, lv_obj.o(i.lv_obj_clear_flag))
<BR><BR>[Stack]<UL><LI>Max Depth = 356<LI>Call Chain = lv_obj_clear_flag &rArr; lv_obj_get_scrollbar_area &rArr; lv_obj_get_scroll_left &rArr; lv_obj_get_style_pad_right &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_mark_layout_as_dirty
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_layout_positioned
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scrollbar_area
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_register
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_constructor
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btn_constructor
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_constructor
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdownlist_constructor
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_constructor
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_constructor
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_constructor
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_cursor_position_on_click
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_state_will_appear_execute
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_state_load_execute
</UL>

<P><STRONG><a name="[35f]"></a>lv_obj_clear_state</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, lv_obj.o(i.lv_obj_clear_state))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = lv_obj_clear_state &rArr; lv_obj_set_state &rArr; _lv_obj_style_create_transition &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
</UL>
<BR>[Called By]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_encoder_proc
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_close
</UL>

<P><STRONG><a name="[233]"></a>lv_obj_create</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, lv_obj.o(i.lv_obj_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = lv_obj_create &rArr; lv_obj_class_init_obj &rArr; lv_theme_apply &rArr; lv_obj_remove_style &rArr; trans_del &rArr; lv_style_remove_prop &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
</UL>
<BR>[Called By]<UL><LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_register
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_state_load_execute
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quantity_create
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;estimate_create
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;capacity_create
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_create
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;duration_create
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;count_create
</UL>

<P><STRONG><a name="[3f3]"></a>lv_obj_del</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, lv_obj_tree.o(i.lv_obj_del))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = lv_obj_del &rArr; lv_obj_readjust_scroll &rArr; lv_obj_scroll_by &rArr; lv_anim_start &rArr; _lv_ll_ins_head &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_disp
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scrollbar_invalidate
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_readjust_scroll
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_del_core
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del_async_cb
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_destructor
</UL>

<P><STRONG><a name="[461]"></a>lv_obj_del_async</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lv_obj_tree.o(i.lv_obj_del_async))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = lv_obj_del_async &rArr; lv_async_call &rArr; lv_timer_create &rArr; _lv_ll_ins_head &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_async_call
</UL>
<BR>[Called By]<UL><LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_start_page
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_state_unload_execute
</UL>

<P><STRONG><a name="[2b7]"></a>lv_obj_draw_dsc_init</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, lv_obj_draw.o(i.lv_obj_draw_dsc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = lv_obj_draw_dsc_init &rArr; lv_memset_00
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_00
</UL>
<BR>[Called By]<UL><LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_scrollbar
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_indic
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_draw
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_knob
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
</UL>

<P><STRONG><a name="[459]"></a>lv_obj_enable_style_refresh</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_obj_style.o(i.lv_obj_enable_style_refresh))
<BR><BR>[Called By]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_destructor
</UL>

<P><STRONG><a name="[313]"></a>lv_obj_event_base</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, lv_event.o(i.lv_obj_event_base))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lv_obj_event_base
</UL>
<BR>[Called By]<UL><LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_event
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_event
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_event
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_event
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_list_event
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_event
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_label_event
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_event
</UL>

<P><STRONG><a name="[259]"></a>lv_obj_get_child</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, lv_obj_tree.o(i.lv_obj_get_child))
<BR><BR>[Called By]<UL><LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_index
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_del_core
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_track_end
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;children_repos
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_changed_event_cb
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_changed_event_cb
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;month_event_cb
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_set_showed_date
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_label
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_label
</UL>

<P><STRONG><a name="[224]"></a>lv_obj_get_child_cnt</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lv_obj_tree.o(i.lv_obj_get_child_cnt))
<BR><BR>[Called By]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_parent
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_search_obj
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_right
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_bottom
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_snap_point_y
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_snap_point_x
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_children_by
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;layout_update_core
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_content_width
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_content_height
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_style_change_core
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refresh_children_style
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_obj
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_obj_and_children
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_get_top_obj
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_to_index
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_index
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_set_showed_date
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_foreground
</UL>

<P><STRONG><a name="[471]"></a>lv_obj_get_click_area</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, lv_obj_pos.o(i.lv_obj_get_click_area))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lv_obj_get_click_area
</UL>
<BR>[Calls]<UL><LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_hit_test
</UL>

<P><STRONG><a name="[2da]"></a>lv_obj_get_content_coords</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, lv_obj_pos.o(i.lv_obj_get_content_coords))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = lv_obj_get_content_coords &rArr; lv_obj_get_style_pad_top &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_increase
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_coords
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_border_width
</UL>
<BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_to
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_is_char_under_pos
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_pos
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_on
</UL>

<P><STRONG><a name="[320]"></a>lv_obj_get_content_height</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, lv_obj_pos.o(i.lv_obj_get_content_height))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = lv_obj_get_content_height &rArr; lv_obj_get_style_pad_top &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_border_width
</UL>
<BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_pos
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align_to
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flex_update
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;position_to_selected
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_position
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inf_normalize
</UL>

<P><STRONG><a name="[258]"></a>lv_obj_get_content_width</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, lv_obj_pos.o(i.lv_obj_get_content_width))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = lv_obj_get_content_width &rArr; lv_obj_get_style_pad_right &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_border_width
</UL>
<BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_pos
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align_to
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flex_update
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;children_repos
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_event
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_position
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_pos
</UL>

<P><STRONG><a name="[2b1]"></a>lv_obj_get_coords</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, lv_obj_pos.o(i.lv_obj_get_coords))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lv_obj_get_coords
</UL>
<BR>[Calls]<UL><LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_to
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_coords
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_obj
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_indic
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidate_button_area
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_button_from_point
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sel_area
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_cursor_position_on_click
</UL>

<P><STRONG><a name="[37e]"></a>lv_obj_get_disp</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, lv_obj_tree.o(i.lv_obj_get_disp))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lv_obj_get_disp &rArr; lv_obj_get_screen
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_screen
</UL>
<BR>[Called By]<UL><LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_mark_layout_as_dirty
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_area_is_visible
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_del_core
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_get_from_obj
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidate_button_area
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
</UL>

<P><STRONG><a name="[21b]"></a>lv_obj_get_group</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lv_obj.o(i.lv_obj_get_group))
<BR><BR>[Called By]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_click_focus
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_remove_obj
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_focus_obj
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_add_obj
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_destructor
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_del_core
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_event
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_release_handler
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn_release_handler
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;release_handler
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
</UL>

<P><STRONG><a name="[84]"></a>lv_obj_get_height</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lv_obj_pos.o(i.lv_obj_get_height))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_obj_get_height
</UL>
<BR>[Calls]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_height
</UL>
<BR>[Called By]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scrollbar_area
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_bottom
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_area_into_view
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_pos
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_y2
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_height
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align_to
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;children_repos
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_button_from_point
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;position_to_selected
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_knob
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sel_area
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_cursor_down
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_flex.o(i.find_track_end)
</UL>
<P><STRONG><a name="[472]"></a>lv_obj_get_index</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, lv_obj_tree.o(i.lv_obj_get_index))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lv_obj_get_index
</UL>
<BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_cnt
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child
</UL>
<BR>[Called By]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_parent
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_to_index
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_del_core
</UL>

<P><STRONG><a name="[473]"></a>lv_obj_get_local_style_prop</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, lv_obj_style.o(i.lv_obj_get_local_style_prop))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = lv_obj_get_local_style_prop &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_get_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_y
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_x
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_width
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_height
</UL>

<P><STRONG><a name="[25c]"></a>lv_obj_get_parent</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lv_obj_tree.o(i.lv_obj_get_parent))
<BR><BR>[Called By]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_gesture
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_next_core
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to_view_recursive
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_layout_positioned
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_scroll_obj
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_area_into_view
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_screen
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_pos
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_y
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_area_is_visible
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align_to
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_obj_and_children
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_to_index
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_index
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_flex_grow
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;children_repos
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;theme_apply
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_changed_event_cb
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_changed_event_cb
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;month_event_cb
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_anim_ready_cb
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_label_event
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_label
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_foreground
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;label_event_cb
</UL>

<P><STRONG><a name="[3f0]"></a>lv_obj_get_screen</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, lv_obj_tree.o(i.lv_obj_get_screen))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_obj_get_screen
</UL>
<BR>[Calls]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
</UL>
<BR>[Called By]<UL><LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_disp
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_mark_layout_as_dirty
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_update_layout
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_area_is_visible
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_constructor
</UL>

<P><STRONG><a name="[19d]"></a>lv_obj_get_scroll_bottom</STRONG> (Thumb, 182 bytes, Stack size 40 bytes, lv_obj_scroll.o(i.lv_obj_get_scroll_bottom))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = lv_obj_get_scroll_bottom &rArr; lv_obj_get_style_pad_top &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_cnt
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_y
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag_any
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_border_width
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_self_height
</UL>
<BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_scroll_throw_handler
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_scroll_handler
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scrollbar_area
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_scroll_obj
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by_bounded
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_area_into_view
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_readjust_scroll
</UL>

<P><STRONG><a name="[19e]"></a>lv_obj_get_scroll_dir</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lv_obj_scroll.o(i.lv_obj_get_scroll_dir))
<BR><BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_scroll_handler
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scrollbar_area
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_scroll_obj
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_area_into_view
</UL>

<P><STRONG><a name="[19a]"></a>lv_obj_get_scroll_left</STRONG> (Thumb, 232 bytes, Stack size 48 bytes, lv_obj_scroll.o(i.lv_obj_get_scroll_left))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = lv_obj_get_scroll_left &rArr; lv_obj_get_style_pad_right &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_cnt
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_x
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag_any
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_border_width
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_base_dir
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_self_width
</UL>
<BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_scroll_throw_handler
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_scroll_handler
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scrollbar_area
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_constructor
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_scroll_obj
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by_bounded
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_area_into_view
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_readjust_scroll
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align_to
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
</UL>

<P><STRONG><a name="[199]"></a>lv_obj_get_scroll_right</STRONG> (Thumb, 210 bytes, Stack size 40 bytes, lv_obj_scroll.o(i.lv_obj_get_scroll_right))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = lv_obj_get_scroll_right &rArr; lv_obj_get_style_pad_right &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_cnt
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_x
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag_any
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_border_width
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_base_dir
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_self_width
</UL>
<BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_scroll_throw_handler
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_scroll_handler
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scrollbar_area
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_scroll_obj
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by_bounded
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_area_into_view
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_readjust_scroll
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align_to
</UL>

<P><STRONG><a name="[1a4]"></a>lv_obj_get_scroll_snap_x</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lv_obj_scroll.o(i.lv_obj_get_scroll_snap_x))
<BR><BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_scroll_throw_handler
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_scroll_limits
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_snap_point_x
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;elastic_diff
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_area_into_view
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_readjust_scroll
</UL>

<P><STRONG><a name="[1a5]"></a>lv_obj_get_scroll_snap_y</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lv_obj_scroll.o(i.lv_obj_get_scroll_snap_y))
<BR><BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_scroll_throw_handler
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_scroll_limits
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_snap_point_y
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;elastic_diff
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_area_into_view
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_readjust_scroll
</UL>

<P><STRONG><a name="[19c]"></a>lv_obj_get_scroll_top</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lv_obj_scroll.o(i.lv_obj_get_scroll_top))
<BR><BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_scroll_throw_handler
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_scroll_handler
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scrollbar_area
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_constructor
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_scroll_obj
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by_bounded
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_area_into_view
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_readjust_scroll
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align_to
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
</UL>

<P><STRONG><a name="[2f3]"></a>lv_obj_get_scroll_x</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lv_obj_scroll.o(i.lv_obj_get_scroll_x))
<BR><BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to_x
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_right
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by_bounded
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_x_anim
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_to
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flex_update
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_pressed_cell
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
</UL>

<P><STRONG><a name="[2f2]"></a>lv_obj_get_scroll_y</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lv_obj_scroll.o(i.lv_obj_get_scroll_y))
<BR><BR>[Called By]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to_y
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_bottom
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by_bounded
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_y_anim
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_to
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_y
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flex_update
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_pressed_cell
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
</UL>

<P><STRONG><a name="[300]"></a>lv_obj_get_scrollbar_area</STRONG> (Thumb, 2136 bytes, Stack size 120 bytes, lv_obj_scroll.o(i.lv_obj_get_scrollbar_area))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = lv_obj_get_scrollbar_area &rArr; lv_obj_get_scroll_left &rArr; lv_obj_get_style_pad_right &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_set
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_scroll_obj
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_scroll_dir
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_next
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scrollbar_mode
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_top
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_right
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_dir
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_bottom
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_dpi
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_base_dir
</UL>
<BR>[Called By]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_scrollbar
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scrollbar_invalidate
</UL>

<P><STRONG><a name="[46e]"></a>lv_obj_get_scrollbar_mode</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lv_obj_scroll.o(i.lv_obj_get_scrollbar_mode))
<BR><BR>[Called By]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scrollbar_area
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
</UL>

<P><STRONG><a name="[223]"></a>lv_obj_get_self_height</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_obj_pos.o(i.lv_obj_get_self_height))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = lv_obj_get_self_height &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
</UL>
<BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_bottom
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_content_height
</UL>

<P><STRONG><a name="[22e]"></a>lv_obj_get_self_width</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_obj_pos.o(i.lv_obj_get_self_width))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = lv_obj_get_self_width &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
</UL>
<BR>[Called By]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_right
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_content_width
</UL>

<P><STRONG><a name="[2ec]"></a>lv_obj_get_state</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_obj.o(i.lv_obj_get_state))
<BR><BR>[Called By]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_next_core
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_trigger_anim
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
</UL>

<P><STRONG><a name="[1b8]"></a>lv_obj_get_style_prop</STRONG> (Thumb, 184 bytes, Stack size 32 bytes, lv_obj_style.o(i.lv_obj_get_style_prop))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_prop_get_default
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_prop_core
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apply_color_filter
</UL>
<BR>[Called By]<UL><LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_font
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_color_filtered
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_shadow_width
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_shadow_spread
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_shadow_opa
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_shadow_ofs_y
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_shadow_ofs_x
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_outline_width
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_outline_pad
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_outline_opa
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_opa
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_blend_mode
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_bg_color_filtered
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scrollbar_area
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_calculate_ext_draw_size
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_style_create_transition
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scrollbar_init_draw_dsc
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_transform_width
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_transform_height
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_radius
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_opa
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_layout
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_clip_corner
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_border_post
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_bg_opa
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_align
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_constructor
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_border_width
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_base_dir
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_pos
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_y
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_x
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_width
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_layout
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_height
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_border_width
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_base_dir
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_align
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_label_dsc
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_img_dsc
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_calculate_style_text_align
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_start_cb
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apply_color_filter
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_width
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_row
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_column
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_height
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_flex_grow
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_base_dir
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flex_update
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_track_end
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;children_repos
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_value_with_anim
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_indic
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_line_space
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_letter_space
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_font
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_column
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_draw
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_row
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_column
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_width
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_line_space
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_letter_space
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_font
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_anim_speed
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_line_space
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_font
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_border_width
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_trigger_anim
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_transform_width
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_transform_height
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_base_dir
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_position
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_line_space
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_font
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_border_width
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_selected_label_width
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_on
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_cursor_blink
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_cursor_area
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_line_space
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_font
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_border_width
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_cursor
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_line_space
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_letter_space
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_font
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_min_height
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_max_height
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_base_dir
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
</UL>

<P><STRONG><a name="[83]"></a>lv_obj_get_width</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lv_obj_pos.o(i.lv_obj_get_width))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_obj_get_width
</UL>
<BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_width
</UL>
<BR>[Called By]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scrollbar_area
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_style_create_transition
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_right
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_area_into_view
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_pos
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_width
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align_to
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;children_repos
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_button_from_point
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_knob
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_position
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_label_event
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_cursor_position_on_click
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_flex.o(i.find_track_end)
</UL>
<P><STRONG><a name="[3fc]"></a>lv_obj_get_y</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, lv_obj_pos.o(i.lv_obj_get_y))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = lv_obj_get_y &rArr; lv_obj_get_style_pad_top &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_y
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_border_width
</UL>
<BR>[Called By]<UL><LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_y2
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_position
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
</UL>

<P><STRONG><a name="[3fd]"></a>lv_obj_get_y2</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, lv_obj_pos.o(i.lv_obj_get_y2))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = lv_obj_get_y2 &rArr; lv_obj_get_y &rArr; lv_obj_get_style_pad_top &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_y
</UL>
<BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
</UL>

<P><STRONG><a name="[1a3]"></a>lv_obj_has_flag</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lv_obj.o(i.lv_obj_has_flag))
<BR><BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_hit_test
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_scroll_throw_handler
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_search_obj
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_proc_press
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_gesture
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_encoder_proc
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_click_focus
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_next_core
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_is_bubbled
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scrollbar_area
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_scroll_limits
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_snap_point_y
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_snap_point_x
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_scroll_obj
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;elastic_diff
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_area_into_view
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_to
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_children_by
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_area_is_visible
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_obj
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_get_top_obj
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_track_end
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_is_open
</UL>

<P><STRONG><a name="[225]"></a>lv_obj_has_flag_any</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lv_obj.o(i.lv_obj_has_flag_any))
<BR><BR>[Called By]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_layout_positioned
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_right
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_bottom
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_snap_point_y
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_snap_point_x
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_content_width
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_content_height
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_track_end
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;children_repos
</UL>

<P><STRONG><a name="[490]"></a>lv_obj_has_state</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lv_obj.o(i.lv_obj_has_state))
<BR><BR>[Called By]<UL><LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_hit_test
</UL>

<P><STRONG><a name="[423]"></a>lv_obj_hit_test</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, lv_obj_pos.o(i.lv_obj_hit_test))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = lv_obj_hit_test &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_point_on
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_state
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_click_area
</UL>
<BR>[Called By]<UL><LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_search_obj
</UL>

<P><STRONG><a name="[2d8]"></a>lv_obj_init_draw_img_dsc</STRONG> (Thumb, 190 bytes, Stack size 32 bytes, lv_obj_draw.o(i.lv_obj_init_draw_img_dsc))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = lv_obj_init_draw_img_dsc &rArr; lv_obj_get_style_opa &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_opa
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_blend_mode
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
</UL>

<P><STRONG><a name="[29e]"></a>lv_obj_init_draw_label_dsc</STRONG> (Thumb, 206 bytes, Stack size 24 bytes, lv_obj_draw.o(i.lv_obj_init_draw_label_dsc))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = lv_obj_init_draw_label_dsc &rArr; lv_obj_get_style_text_font &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_font
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_color_filtered
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_opa
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_blend_mode
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_draw
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_box_label
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_label
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_placeholder
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_cursor
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
</UL>

<P><STRONG><a name="[29b]"></a>lv_obj_init_draw_rect_dsc</STRONG> (Thumb, 862 bytes, Stack size 40 bytes, lv_obj_draw.o(i.lv_obj_init_draw_rect_dsc))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = lv_obj_init_draw_rect_dsc &rArr; lv_obj_get_style_text_font &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_font
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_color_filtered
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_shadow_width
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_shadow_spread
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_shadow_opa
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_shadow_ofs_y
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_shadow_ofs_x
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_outline_width
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_outline_pad
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_outline_opa
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_opa
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_blend_mode
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_bg_color_filtered
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memcpy
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_src_get_type
</UL>
<BR>[Called By]<UL><LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_indic
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_draw
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_box
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_knob
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_cursor
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
</UL>

<P><STRONG><a name="[219]"></a>lv_obj_invalidate</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, lv_obj_pos.o(i.lv_obj_invalidate))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; _lv_inv_area &rArr; _lv_area_is_in &rArr; _lv_area_is_point_on &rArr;  _lv_area_is_point_on (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_copy
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_ext_draw_size
</UL>
<BR>[Called By]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_register
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_parent
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_set_editing
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_remove_all_objs
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_focus_obj
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_next_core
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_ext_draw_size
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_scrollbar_mode
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_by_raw
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_to
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refresh_children_style
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_to_index
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;children_repos
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text_fmt
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_set_showed_date
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_set_selected
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_set_options
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_text
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_char
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_value_with_anim
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_anim_ready
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_anim
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_ofs_y_anim
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_ofs_x_anim
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_set_options_static
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;position_to_selected
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_list_event
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_release_handler
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_press_handler
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn_release_handler
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_event
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_anim_ready
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_anim_exec_cb
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text_sel_start
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text_sel_end
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_ins_text
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_del_char
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_text
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_cursor_position_on_click
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_event
</UL>

<P><STRONG><a name="[26e]"></a>lv_obj_invalidate_area</STRONG> (Thumb, 50 bytes, Stack size 32 bytes, lv_obj_pos.o(i.lv_obj_invalidate_area))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = lv_obj_invalidate_area &rArr; _lv_inv_area &rArr; _lv_area_is_in &rArr; _lv_area_is_point_on &rArr;  _lv_area_is_point_on (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_disp
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_inv_area
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_area_is_visible
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scrollbar_invalidate
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_event
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidate_button_area
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_cursor_area
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cursor_blink_anim_cb
</UL>

<P><STRONG><a name="[35b]"></a>lv_obj_is_editable</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, lv_obj_class.o(i.lv_obj_is_editable))
<BR><BR>[Called By]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_encoder_proc
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
</UL>

<P><STRONG><a name="[45d]"></a>lv_obj_is_group_def</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, lv_obj_class.o(i.lv_obj_is_group_def))
<BR><BR>[Called By]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
</UL>

<P><STRONG><a name="[226]"></a>lv_obj_is_layout_positioned</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, lv_obj_pos.o(i.lv_obj_is_layout_positioned))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = lv_obj_is_layout_positioned &rArr; lv_obj_get_style_layout &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag_any
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_layout
</UL>
<BR>[Called By]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_pos
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_content_width
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_content_height
</UL>

<P><STRONG><a name="[448]"></a>lv_obj_mark_layout_as_dirty</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, lv_obj_pos.o(i.lv_obj_mark_layout_as_dirty))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = lv_obj_mark_layout_as_dirty &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen
</UL>
<BR>[Calls]<UL><LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_disp
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_resume
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_screen
</UL>
<BR>[Called By]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_parent
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_self_size
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_flex_grow
</UL>

<P><STRONG><a name="[25d]"></a>lv_obj_move_children_by</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, lv_obj_pos.o(i.lv_obj_move_children_by))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + In Cycle
<LI>Call Chain = lv_obj_move_children_by &rArr;  lv_obj_move_children_by (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_cnt
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_children_by
</UL>
<BR>[Called By]<UL><LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_by_raw
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_to
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_children_by
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;children_repos
</UL>

<P><STRONG><a name="[492]"></a>lv_obj_move_to</STRONG> (Thumb, 342 bytes, Stack size 56 bytes, lv_obj_pos.o(i.lv_obj_move_to))
<BR><BR>[Stack]<UL><LI>Max Depth = 396<LI>Call Chain = lv_obj_move_to &rArr; lv_obj_scrollbar_invalidate &rArr; lv_obj_get_scrollbar_area &rArr; lv_obj_get_scroll_left &rArr; lv_obj_get_style_pad_right &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_y
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_x
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_in
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scrollbar_invalidate
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_children_by
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_coords
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_coords
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_border_width
</UL>
<BR>[Called By]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_pos
</UL>

<P><STRONG><a name="[3f8]"></a>lv_obj_move_to_index</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, lv_obj_tree.o(i.lv_obj_move_to_index))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = lv_obj_move_to_index &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; _lv_inv_area &rArr; _lv_area_is_in &rArr; _lv_area_is_point_on &rArr;  _lv_area_is_point_on (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_cnt
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_index
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_foreground
</UL>

<P><STRONG><a name="[460]"></a>lv_obj_readjust_scroll</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, lv_obj_scroll.o(i.lv_obj_readjust_scroll))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = lv_obj_readjust_scroll &rArr; lv_obj_scroll_by &rArr; lv_anim_start &rArr; _lv_ll_ins_head &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_top
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_snap_y
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_snap_x
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_right
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_bottom
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_base_dir
</UL>
<BR>[Called By]<UL><LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_parent
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
</UL>

<P><STRONG><a name="[38f]"></a>lv_obj_refr_pos</STRONG> (Thumb, 738 bytes, Stack size 64 bytes, lv_obj_pos.o(i.lv_obj_refr_pos))
<BR><BR>[Stack]<UL><LI>Max Depth = 460<LI>Call Chain = lv_obj_refr_pos &rArr; lv_obj_move_to &rArr; lv_obj_scrollbar_invalidate &rArr; lv_obj_get_scrollbar_area &rArr; lv_obj_get_scroll_left &rArr; lv_obj_get_style_pad_right &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_layout_positioned
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_to
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_width
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_height
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_y
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_x
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_base_dir
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_align
</UL>
<BR>[Called By]<UL><LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;layout_update_core
</UL>

<P><STRONG><a name="[321]"></a>lv_obj_refr_size</STRONG> (Thumb, 838 bytes, Stack size 88 bytes, lv_obj_pos.o(i.lv_obj_refr_size))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = lv_obj_refr_size &rArr; calc_content_width &rArr; lv_obj_scroll_to_x &rArr; lv_obj_scroll_by_bounded &rArr;  lv_obj_update_layout (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_in
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_top
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scrollbar_invalidate
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_readjust_scroll
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_coords
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_width
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_height
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_coords
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_clamp_width
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_clamp_height
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_width
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_height
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_border_width
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_base_dir
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_content_width
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_content_height
</UL>
<BR>[Called By]<UL><LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;layout_update_core
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flex_update
</UL>

<P><STRONG><a name="[3a7]"></a>lv_obj_refresh_ext_draw_size</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, lv_obj_draw.o(i.lv_obj_refresh_ext_draw_size))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = lv_obj_refresh_ext_draw_size &rArr; lv_obj_allocate_spec_attr &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_spec_attr
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_ext_draw_size
</UL>
<BR>[Called By]<UL><LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_btn_ctrl
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_clear_btn_ctrl
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_set_options
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
</UL>

<P><STRONG><a name="[3f4]"></a>lv_obj_refresh_self_size</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, lv_obj_pos.o(i.lv_obj_refresh_self_size))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = lv_obj_refresh_self_size &rArr; lv_obj_get_style_width &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_mark_layout_as_dirty
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_width
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_height
</UL>
<BR>[Called By]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_size
</UL>

<P><STRONG><a name="[44b]"></a>lv_obj_refresh_style</STRONG> (Thumb, 238 bytes, Stack size 32 bytes, lv_obj_style.o(i.lv_obj_refresh_style))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = lv_obj_refresh_style &rArr; lv_obj_refresh_ext_draw_size &rArr; lv_obj_allocate_spec_attr &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_style_get_selector_part
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_ext_draw_size
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_mark_layout_as_dirty
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refresh_children_style
</UL>
<BR>[Called By]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_style
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_style
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_cb
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_style_change_core
</UL>

<P><STRONG><a name="[497]"></a>lv_obj_remove_local_style_prop</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, lv_obj_style.o(i.lv_obj_remove_local_style_prop))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = lv_obj_remove_local_style_prop &rArr; lv_style_remove_prop &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_remove_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_one_line
</UL>

<P><STRONG><a name="[36b]"></a>lv_obj_remove_style</STRONG> (Thumb, 316 bytes, Stack size 48 bytes, lv_obj_style.o(i.lv_obj_remove_style))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = lv_obj_remove_style &rArr; trans_del &rArr; lv_style_remove_prop &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_style_get_selector_state
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_style_get_selector_part
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_reset
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_del
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_apply
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_destructor
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_ready_cb
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_style_all
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_style_all
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;infos_create
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_style_all
</UL>

<P><STRONG><a name="[49a]"></a>lv_obj_report_style_change</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, lv_obj_style.o(i.lv_obj_report_style_change))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = lv_obj_report_style_change &rArr; report_style_change_core &rArr;  report_style_change_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_next
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_style_change_core
</UL>
<BR>[Called By]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_default_init
</UL>

<P><STRONG><a name="[1a0]"></a>lv_obj_scroll_by</STRONG> (Thumb, 362 bytes, Stack size 104 bytes, lv_obj_scroll.o(i.lv_obj_scroll_by))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = lv_obj_scroll_by &rArr; lv_anim_start &rArr; _lv_ll_ins_head &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_disp
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_ver_res
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_hor_res
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_init
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_y
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_x
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_speed_to_time
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_by_raw
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_set_values
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_set_time
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_set_path_cb
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_set_exec_cb
</UL>
<BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_scroll_throw_handler
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_scroll_handler
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by_bounded
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_area_into_view
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_readjust_scroll
</UL>

<P><STRONG><a name="[4a1]"></a>lv_obj_scroll_by_bounded</STRONG> (Thumb, 262 bytes, Stack size 56 bytes, lv_obj_scroll.o(i.lv_obj_scroll_by_bounded))
<BR><BR>[Stack]<UL><LI>Max Depth = 400 + In Cycle
<LI>Call Chain = lv_obj_scroll_by_bounded &rArr;  lv_obj_update_layout (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_y
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_x
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_top
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_right
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_bottom
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_base_dir
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_update_layout
</UL>
<BR>[Called By]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to_y
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to_x
</UL>

<P><STRONG><a name="[495]"></a>lv_obj_scroll_to</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, lv_obj_scroll.o(i.lv_obj_scroll_to))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = lv_obj_scroll_to &rArr; lv_obj_scroll_to_y &rArr; lv_obj_scroll_by_bounded &rArr;  lv_obj_update_layout (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to_y
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to_x
</UL>
<BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_one_line
</UL>

<P><STRONG><a name="[46d]"></a>lv_obj_scroll_to_view_recursive</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, lv_obj_scroll.o(i.lv_obj_scroll_to_view_recursive))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = lv_obj_scroll_to_view_recursive &rArr; lv_obj_update_layout &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_area_into_view
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_update_layout
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
</UL>

<P><STRONG><a name="[22b]"></a>lv_obj_scroll_to_x</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, lv_obj_scroll.o(i.lv_obj_scroll_to_x))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = lv_obj_scroll_to_x &rArr; lv_obj_scroll_by_bounded &rArr;  lv_obj_update_layout (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_x
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by_bounded
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_content_width
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
</UL>

<P><STRONG><a name="[21f]"></a>lv_obj_scroll_to_y</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, lv_obj_scroll.o(i.lv_obj_scroll_to_y))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = lv_obj_scroll_to_y &rArr; lv_obj_scroll_by_bounded &rArr;  lv_obj_update_layout (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_y
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by_bounded
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_content_height
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;position_to_selected
</UL>

<P><STRONG><a name="[45e]"></a>lv_obj_scrollbar_invalidate</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, lv_obj_scroll.o(i.lv_obj_scrollbar_invalidate))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = lv_obj_scrollbar_invalidate &rArr; lv_obj_get_scrollbar_area &rArr; lv_obj_get_scroll_left &rArr; lv_obj_get_style_pad_right &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scrollbar_area
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_size
</UL>
<BR>[Called By]<UL><LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_parent
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_to
</UL>

<P><STRONG><a name="[4a3]"></a>lv_obj_set_ext_click_area</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, lv_obj_pos.o(i.lv_obj_set_ext_click_area))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = lv_obj_set_ext_click_area &rArr; lv_obj_allocate_spec_attr &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_spec_attr
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_constructor
</UL>

<P><STRONG><a name="[26a]"></a>lv_obj_set_flex_align</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, lv_flex.o(i.lv_obj_set_flex_align))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = lv_obj_set_flex_align &rArr; lv_obj_set_style_layout &rArr; lv_obj_set_local_style_prop &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_layout
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_flex_track_place
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_flex_main_place
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_flex_cross_place
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;count_create
</UL>

<P><STRONG><a name="[23c]"></a>lv_obj_set_flex_flow</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, lv_flex.o(i.lv_obj_set_flex_flow))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = lv_obj_set_flex_flow &rArr; lv_obj_set_style_layout &rArr; lv_obj_set_local_style_prop &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_layout
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_flex_flow
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_constructor
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quantity_create
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;estimate_create
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;capacity_create
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_create
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;duration_create
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;count_create
</UL>

<P><STRONG><a name="[3b4]"></a>lv_obj_set_flex_grow</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lv_flex.o(i.lv_obj_set_flex_grow))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = lv_obj_set_flex_grow &rArr; lv_obj_set_style_flex_grow &rArr; lv_obj_set_local_style_prop &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_mark_layout_as_dirty
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_flex_grow
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_constructor
</UL>

<P><STRONG><a name="[3fa]"></a>lv_obj_set_height</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, lv_obj_pos.o(i.lv_obj_set_height))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = lv_obj_set_height &rArr; lv_obj_set_style_height &rArr; lv_obj_set_local_style_prop &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_height
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_one_line
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
</UL>

<P><STRONG><a name="[4ab]"></a>lv_obj_set_local_style_prop</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, lv_obj_style.o(i.lv_obj_set_local_style_prop))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = lv_obj_set_local_style_prop &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_local_style
</UL>
<BR>[Called By]<UL><LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_y
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_x
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_width
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_layout
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_height
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_align
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_text_font
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_text_color
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_text_align
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_radius
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_min_width
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_bg_opa
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_bg_img_src
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_bg_color
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_flex_track_place
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_flex_main_place
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_flex_grow
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_flex_flow
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_flex_cross_place
</UL>

<P><STRONG><a name="[3f7]"></a>lv_obj_set_parent</STRONG> (Thumb, 258 bytes, Stack size 24 bytes, lv_obj_tree.o(i.lv_obj_set_parent))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = lv_obj_set_parent &rArr; lv_obj_readjust_scroll &rArr; lv_obj_scroll_by &rArr; lv_anim_start &rArr; _lv_ll_ins_head &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_cnt
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_spec_attr
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_mark_layout_as_dirty
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scrollbar_invalidate
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_readjust_scroll
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_index
</UL>
<BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
</UL>

<P><STRONG><a name="[23b]"></a>lv_obj_set_pos</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lv_obj_pos.o(i.lv_obj_set_pos))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = lv_obj_set_pos &rArr; lv_obj_set_y &rArr; lv_obj_set_style_y &rArr; lv_obj_set_local_style_prop &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_y
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_x
</UL>
<BR>[Called By]<UL><LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_pointer_proc
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align_to
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quantity_create
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;estimate_create
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;capacity_create
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_create
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;duration_create
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;count_create
</UL>

<P><STRONG><a name="[3d2]"></a>lv_obj_set_scrollbar_mode</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, lv_obj_scroll.o(i.lv_obj_set_scrollbar_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = lv_obj_set_scrollbar_mode &rArr; lv_obj_allocate_spec_attr &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_spec_attr
</UL>
<BR>[Called By]<UL><LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_register
</UL>

<P><STRONG><a name="[23a]"></a>lv_obj_set_size</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lv_obj_pos.o(i.lv_obj_set_size))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = lv_obj_set_size &rArr; lv_obj_set_width &rArr; lv_obj_set_style_width &rArr; lv_obj_set_local_style_prop &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_width
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_height
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_state_load_execute
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quantity_create
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;estimate_create
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;capacity_create
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_recent_create
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;infos_create
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_create
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;duration_create
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;count_create
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_dialplate_create
</UL>

<P><STRONG><a name="[44c]"></a>lv_obj_set_style_align</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, lv_obj_style_gen.o(i.lv_obj_set_style_align))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = lv_obj_set_style_align &rArr; lv_obj_set_local_style_prop &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align_to
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align
</UL>

<P><STRONG><a name="[238]"></a>lv_obj_set_style_bg_color</STRONG> (Thumb, 32 bytes, Stack size 32 bytes, lv_obj_style_gen.o(i.lv_obj_set_style_bg_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = lv_obj_set_style_bg_color &rArr; lv_obj_set_local_style_prop &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quantity_create
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;estimate_create
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;capacity_create
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_create
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;duration_create
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;count_create
</UL>

<P><STRONG><a name="[4ae]"></a>lv_obj_set_style_bg_img_src</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, lv_obj_style_gen.o(i.lv_obj_set_style_bg_img_src))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = lv_obj_set_style_bg_img_src &rArr; lv_obj_set_local_style_prop &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
</UL>

<P><STRONG><a name="[239]"></a>lv_obj_set_style_bg_opa</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, lv_obj_style_gen.o(i.lv_obj_set_style_bg_opa))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = lv_obj_set_style_bg_opa &rArr; lv_obj_set_local_style_prop &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quantity_create
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;estimate_create
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;capacity_create
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_create
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;duration_create
</UL>

<P><STRONG><a name="[4a5]"></a>lv_obj_set_style_flex_cross_place</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, lv_flex.o(i.lv_obj_set_style_flex_cross_place))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = lv_obj_set_style_flex_cross_place &rArr; lv_obj_set_local_style_prop &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_flex_align
</UL>

<P><STRONG><a name="[4a8]"></a>lv_obj_set_style_flex_flow</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, lv_flex.o(i.lv_obj_set_style_flex_flow))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = lv_obj_set_style_flex_flow &rArr; lv_obj_set_local_style_prop &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_flex_flow
</UL>

<P><STRONG><a name="[4a9]"></a>lv_obj_set_style_flex_grow</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, lv_flex.o(i.lv_obj_set_style_flex_grow))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = lv_obj_set_style_flex_grow &rArr; lv_obj_set_local_style_prop &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_flex_grow
</UL>

<P><STRONG><a name="[4a4]"></a>lv_obj_set_style_flex_main_place</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, lv_flex.o(i.lv_obj_set_style_flex_main_place))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = lv_obj_set_style_flex_main_place &rArr; lv_obj_set_local_style_prop &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_flex_align
</UL>

<P><STRONG><a name="[4a6]"></a>lv_obj_set_style_flex_track_place</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, lv_flex.o(i.lv_obj_set_style_flex_track_place))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = lv_obj_set_style_flex_track_place &rArr; lv_obj_set_local_style_prop &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_flex_align
</UL>

<P><STRONG><a name="[4aa]"></a>lv_obj_set_style_height</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, lv_obj_style_gen.o(i.lv_obj_set_style_height))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = lv_obj_set_style_height &rArr; lv_obj_set_local_style_prop &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_height
</UL>

<P><STRONG><a name="[4a7]"></a>lv_obj_set_style_layout</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, lv_obj_style_gen.o(i.lv_obj_set_style_layout))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = lv_obj_set_style_layout &rArr; lv_obj_set_local_style_prop &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_flex_flow
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_flex_align
</UL>

<P><STRONG><a name="[4af]"></a>lv_obj_set_style_min_width</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, lv_obj_style_gen.o(i.lv_obj_set_style_min_width))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = lv_obj_set_style_min_width &rArr; lv_obj_set_local_style_prop &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_one_line
</UL>

<P><STRONG><a name="[236]"></a>lv_obj_set_style_radius</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, lv_obj_style_gen.o(i.lv_obj_set_style_radius))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = lv_obj_set_style_radius &rArr; lv_obj_set_local_style_prop &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quantity_create
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;estimate_create
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;capacity_create
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_create
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;duration_create
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;count_create
</UL>

<P><STRONG><a name="[4b0]"></a>lv_obj_set_style_text_align</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, lv_obj_style_gen.o(i.lv_obj_set_style_text_align))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = lv_obj_set_style_text_align &rArr; lv_obj_set_local_style_prop &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
</UL>

<P><STRONG><a name="[245]"></a>lv_obj_set_style_text_color</STRONG> (Thumb, 34 bytes, Stack size 32 bytes, lv_obj_style_gen.o(i.lv_obj_set_style_text_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = lv_obj_set_style_text_color &rArr; lv_obj_set_local_style_prop &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quantity_create
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;estimate_create
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;capacity_create
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_create
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;duration_create
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;count_create
</UL>

<P><STRONG><a name="[246]"></a>lv_obj_set_style_text_font</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, lv_obj_style_gen.o(i.lv_obj_set_style_text_font))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = lv_obj_set_style_text_font &rArr; lv_obj_set_local_style_prop &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quantity_create
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;estimate_create
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;capacity_create
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_create
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;duration_create
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;count_create
</UL>

<P><STRONG><a name="[4b1]"></a>lv_obj_set_style_width</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, lv_obj_style_gen.o(i.lv_obj_set_style_width))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = lv_obj_set_style_width &rArr; lv_obj_set_local_style_prop &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_width
</UL>

<P><STRONG><a name="[4b2]"></a>lv_obj_set_style_x</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, lv_obj_style_gen.o(i.lv_obj_set_style_x))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = lv_obj_set_style_x &rArr; lv_obj_set_local_style_prop &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_x
</UL>

<P><STRONG><a name="[4b3]"></a>lv_obj_set_style_y</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, lv_obj_style_gen.o(i.lv_obj_set_style_y))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = lv_obj_set_style_y &rArr; lv_obj_set_local_style_prop &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_y
</UL>

<P><STRONG><a name="[3b3]"></a>lv_obj_set_width</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, lv_obj_pos.o(i.lv_obj_set_width))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = lv_obj_set_width &rArr; lv_obj_set_style_width &rArr; lv_obj_set_local_style_prop &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_width
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_constructor
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_one_line
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_constructor
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_constructor
</UL>

<P><STRONG><a name="[4ac]"></a>lv_obj_set_x</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, lv_obj_pos.o(i.lv_obj_set_x))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = lv_obj_set_x &rArr; lv_obj_set_style_x &rArr; lv_obj_set_local_style_prop &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_x
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_pos
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_position
</UL>

<P><STRONG><a name="[be]"></a>lv_obj_set_y</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, lv_obj_pos.o(i.lv_obj_set_y))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = lv_obj_set_y &rArr; lv_obj_set_style_y &rArr; lv_obj_set_local_style_prop &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_y
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_pos
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_y_anim
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_position
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inf_normalize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nt_pm.o(i.nt_pm_view_rotations_anim_create)
</UL>
<P><STRONG><a name="[33b]"></a>lv_obj_style_get_selector_part</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_obj_style.o(i.lv_obj_style_get_selector_part))
<BR><BR>[Called By]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_style
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_start_cb
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_prop_core
</UL>

<P><STRONG><a name="[1c5]"></a>lv_obj_style_get_selector_state</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_obj_style.o(i.lv_obj_style_get_selector_state))
<BR><BR>[Called By]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_style
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_style_state_compare
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_prop_core
</UL>

<P><STRONG><a name="[172]"></a>lv_obj_update_layout</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, lv_obj_pos.o(i.lv_obj_update_layout))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = lv_obj_update_layout &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_screen
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;layout_update_core
</UL>
<BR>[Called By]<UL><LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to_view_recursive
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by_bounded
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align_to
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
</UL>

<P><STRONG><a name="[341]"></a>lv_palette_darken</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, lv_color.o(i.lv_palette_darken))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = lv_palette_darken &rArr; lv_color_black &rArr; lv_color_make
</UL>
<BR>[Calls]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_black
</UL>
<BR>[Called By]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grey_filter_cb
</UL>

<P><STRONG><a name="[343]"></a>lv_palette_lighten</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, lv_color.o(i.lv_palette_lighten))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = lv_palette_lighten &rArr; lv_color_black &rArr; lv_color_make
</UL>
<BR>[Calls]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_black
</UL>
<BR>[Called By]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grey_filter_cb
</UL>

<P><STRONG><a name="[26b]"></a>lv_palette_main</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, lv_color.o(i.lv_palette_main))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = lv_palette_main &rArr; lv_color_black &rArr; lv_color_make
</UL>
<BR>[Calls]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_black
</UL>
<BR>[Called By]<UL><LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_register
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_get_color_primary
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label_dsc_init
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_part_begin_event_cb
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_create
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;duration_create
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;count_create
</UL>

<P><STRONG><a name="[4b4]"></a>lv_port_disp_init</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, lv_port_disp.o(i.lv_port_disp_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = lv_port_disp_init &rArr; lv_disp_drv_register &rArr; lv_obj_create &rArr; lv_obj_class_init_obj &rArr; lv_theme_apply &rArr; lv_obj_remove_style &rArr; trans_del &rArr; lv_style_remove_prop &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_init
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_register
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_init
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_draw_buf_init
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4b6]"></a>lv_port_indev_init</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, lv_port_indev.o(i.lv_port_indev_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = lv_port_indev_init &rArr; lv_indev_drv_register &rArr; lv_timer_create &rArr; _lv_ll_ins_head &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_drv_register
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_drv_init
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keypad_init
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4d0]"></a>lv_pow</STRONG> (Thumb, 58 bytes, Stack size 20 bytes, lv_math.o(i.lv_pow))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lv_pow
</UL>
<BR>[Called By]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_set_digit_format
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_event
</UL>

<P><STRONG><a name="[4be]"></a>lv_refr_obj</STRONG> (Thumb, 232 bytes, Stack size 64 bytes, lv_refr.o(i.lv_refr_obj))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + In Cycle
<LI>Call Chain = lv_refr_obj &rArr;  lv_refr_obj (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_cnt
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_increase
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_coords
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_ext_draw_size
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_obj
</UL>
<BR>[Called By]<UL><LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_obj
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_obj_and_children
</UL>

<P><STRONG><a name="[4bf]"></a>lv_roller_set_options</STRONG> (Thumb, 250 bytes, Stack size 40 bytes, lv_roller.o(i.lv_roller_set_options))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = lv_roller_set_options &rArr; lv_label_set_text &rArr; lv_label_refr_text &rArr; lv_label_get_letter_on &rArr; _lv_txt_get_next_line &rArr; lv_txt_get_next_word &rArr; lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_ext_draw_size
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inf_normalize
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_label
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_constructor
</UL>

<P><STRONG><a name="[4c3]"></a>lv_roller_set_selected</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, lv_roller.o(i.lv_roller_set_selected))
<BR><BR>[Stack]<UL><LI>Max Depth = 584<LI>Call Chain = lv_roller_set_selected &rArr; refr_position &rArr; inf_normalize &rArr; lv_obj_set_y &rArr; lv_obj_set_style_y &rArr; lv_obj_set_local_style_prop &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_position
</UL>
<BR>[Called By]<UL><LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;release_handler
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
</UL>

<P><STRONG><a name="[3b7]"></a>lv_snprintf</STRONG> (Thumb, 42 bytes, Stack size 40 bytes, lv_printf.o(i.lv_snprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = lv_snprintf &rArr; _vsnprintf &rArr;  _vsnprintf (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_vsnprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_set_showed_date
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_updatevalue
</UL>

<P><STRONG><a name="[249]"></a>lv_spinbox_create</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, lv_spinbox.o(i.lv_spinbox_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = lv_spinbox_create &rArr; lv_obj_class_init_obj &rArr; lv_theme_apply &rArr; lv_obj_remove_style &rArr; trans_del &rArr; lv_style_remove_prop &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
</UL>
<BR>[Called By]<UL><LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quantity_create
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;capacity_create
</UL>

<P><STRONG><a name="[4ce]"></a>lv_spinbox_decrement</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, lv_spinbox.o(i.lv_spinbox_decrement))
<BR><BR>[Stack]<UL><LI>Max Depth = 1056<LI>Call Chain = lv_spinbox_decrement &rArr; lv_spinbox_updatevalue &rArr; lv_textarea_set_text &rArr; lv_textarea_add_char &rArr; insert_handler &rArr; lv_textarea_add_text &rArr;  lv_textarea_add_char (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_updatevalue
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_event
</UL>

<P><STRONG><a name="[4d4]"></a>lv_spinbox_increment</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, lv_spinbox.o(i.lv_spinbox_increment))
<BR><BR>[Stack]<UL><LI>Max Depth = 1056<LI>Call Chain = lv_spinbox_increment &rArr; lv_spinbox_updatevalue &rArr; lv_textarea_set_text &rArr; lv_textarea_add_char &rArr; insert_handler &rArr; lv_textarea_add_text &rArr;  lv_textarea_add_char (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_updatevalue
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_event
</UL>

<P><STRONG><a name="[24b]"></a>lv_spinbox_set_digit_format</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, lv_spinbox.o(i.lv_spinbox_set_digit_format))
<BR><BR>[Stack]<UL><LI>Max Depth = 1080<LI>Call Chain = lv_spinbox_set_digit_format &rArr; lv_spinbox_updatevalue &rArr; lv_textarea_set_text &rArr; lv_textarea_add_char &rArr; insert_handler &rArr; lv_textarea_add_text &rArr;  lv_textarea_add_char (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_pow
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_updatevalue
</UL>
<BR>[Called By]<UL><LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quantity_create
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;capacity_create
</UL>

<P><STRONG><a name="[24a]"></a>lv_spinbox_set_range</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, lv_spinbox.o(i.lv_spinbox_set_range))
<BR><BR>[Stack]<UL><LI>Max Depth = 1064<LI>Call Chain = lv_spinbox_set_range &rArr; lv_spinbox_updatevalue &rArr; lv_textarea_set_text &rArr; lv_textarea_add_char &rArr; insert_handler &rArr; lv_textarea_add_text &rArr;  lv_textarea_add_char (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_updatevalue
</UL>
<BR>[Called By]<UL><LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quantity_create
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;capacity_create
</UL>

<P><STRONG><a name="[4cf]"></a>lv_spinbox_step_next</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, lv_spinbox.o(i.lv_spinbox_step_next))
<BR><BR>[Stack]<UL><LI>Max Depth = 1056<LI>Call Chain = lv_spinbox_step_next &rArr; lv_spinbox_updatevalue &rArr; lv_textarea_set_text &rArr; lv_textarea_add_char &rArr; insert_handler &rArr; lv_textarea_add_text &rArr;  lv_textarea_add_char (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_updatevalue
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_event
</UL>

<P><STRONG><a name="[4d1]"></a>lv_spinbox_step_prev</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, lv_spinbox.o(i.lv_spinbox_step_prev))
<BR><BR>[Stack]<UL><LI>Max Depth = 1064<LI>Call Chain = lv_spinbox_step_prev &rArr; lv_spinbox_updatevalue &rArr; lv_textarea_set_text &rArr; lv_textarea_add_char &rArr; insert_handler &rArr; lv_textarea_add_text &rArr;  lv_textarea_add_char (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_updatevalue
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_event
</UL>

<P><STRONG><a name="[1c6]"></a>lv_style_get_prop</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, lv_style.o(i.lv_style_get_prop))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_get_prop_inlined
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_style_state_compare
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_local_style_prop
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_cb
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_prop_core
</UL>

<P><STRONG><a name="[23d]"></a>lv_style_init</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lv_style.o(i.lv_style_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lv_style_init &rArr; lv_memset_00
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_00
</UL>
<BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_trans_style
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_local_style
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init_reset
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quantity_create
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_recent_style_create
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;estimate_create
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;capacity_create
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_infos_style_create
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_dialplate_style_create
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_dialplate_main_style_create
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_dialplate_iden_style_create
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_dialplate_count_style_create
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_create
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;duration_create
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;count_create
</UL>

<P><STRONG><a name="[573]"></a>lv_style_is_empty</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lv_style.o(i.lv_style_is_empty))
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_ready_cb
</UL>

<P><STRONG><a name="[485]"></a>lv_style_prop_get_default</STRONG> (Thumb, 318 bytes, Stack size 24 bytes, lv_style.o(i.lv_style_prop_get_default))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = lv_style_prop_get_default &rArr; lv_color_make
</UL>
<BR>[Calls]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_make
</UL>
<BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>

<P><STRONG><a name="[407]"></a>lv_style_register_prop</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lv_style.o(i.lv_style_register_prop))
<BR><BR>[Called By]<UL><LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_flex_init
</UL>

<P><STRONG><a name="[498]"></a>lv_style_remove_prop</STRONG> (Thumb, 266 bytes, Stack size 48 bytes, lv_style.o(i.lv_style_remove_prop))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = lv_style_remove_prop &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_local_style_prop
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_del
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_ready_cb
</UL>

<P><STRONG><a name="[499]"></a>lv_style_reset</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lv_style.o(i.lv_style_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = lv_style_reset &rArr; lv_mem_free &rArr; lv_tlsf_free &rArr; block_merge_prev &rArr; block_absorb &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_00
</UL>
<BR>[Called By]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_style
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init_reset
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_recent_style_create
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_infos_style_create
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_dialplate_style_create
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_dialplate_main_style_create
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_dialplate_iden_style_create
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_dialplate_count_style_create
</UL>

<P><STRONG><a name="[4d9]"></a>lv_style_set_anim_time</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, lv_style_gen.o(i.lv_style_set_anim_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = lv_style_set_anim_time &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[4da]"></a>lv_style_set_bg_color</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, lv_style_gen.o(i.lv_style_set_bg_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = lv_style_set_bg_color &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_recent_style_create
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_infos_style_create
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_dialplate_style_create
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_dialplate_main_style_create
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_dialplate_iden_style_create
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_dialplate_count_style_create
</UL>

<P><STRONG><a name="[4db]"></a>lv_style_set_bg_img_src</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, lv_style_gen.o(i.lv_style_set_bg_img_src))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = lv_style_set_bg_img_src &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[4dc]"></a>lv_style_set_bg_opa</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, lv_style_gen.o(i.lv_style_set_bg_opa))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = lv_style_set_bg_opa &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_recent_style_create
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_infos_style_create
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_dialplate_style_create
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_dialplate_main_style_create
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_dialplate_iden_style_create
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_dialplate_count_style_create
</UL>

<P><STRONG><a name="[4dd]"></a>lv_style_set_border_color</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, lv_style_gen.o(i.lv_style_set_border_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = lv_style_set_border_color &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_recent_style_create
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_infos_style_create
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_dialplate_style_create
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_dialplate_main_style_create
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_dialplate_iden_style_create
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_dialplate_count_style_create
</UL>

<P><STRONG><a name="[4de]"></a>lv_style_set_border_opa</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, lv_style_gen.o(i.lv_style_set_border_opa))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = lv_style_set_border_opa &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_recent_style_create
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_infos_style_create
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_dialplate_style_create
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_dialplate_main_style_create
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_dialplate_iden_style_create
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_dialplate_count_style_create
</UL>

<P><STRONG><a name="[4df]"></a>lv_style_set_border_post</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, lv_style_gen.o(i.lv_style_set_border_post))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = lv_style_set_border_post &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[4e0]"></a>lv_style_set_border_side</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, lv_style_gen.o(i.lv_style_set_border_side))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = lv_style_set_border_side &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[4e1]"></a>lv_style_set_border_width</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, lv_style_gen.o(i.lv_style_set_border_width))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = lv_style_set_border_width &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_recent_style_create
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_infos_style_create
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_dialplate_style_create
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_dialplate_main_style_create
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_dialplate_iden_style_create
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_dialplate_count_style_create
</UL>

<P><STRONG><a name="[4e2]"></a>lv_style_set_clip_corner</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, lv_style_gen.o(i.lv_style_set_clip_corner))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = lv_style_set_clip_corner &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[4e3]"></a>lv_style_set_color_filter_dsc</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, lv_style_gen.o(i.lv_style_set_color_filter_dsc))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = lv_style_set_color_filter_dsc &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[4e4]"></a>lv_style_set_color_filter_opa</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, lv_style_gen.o(i.lv_style_set_color_filter_opa))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = lv_style_set_color_filter_opa &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[23e]"></a>lv_style_set_flex_flow</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, lv_flex.o(i.lv_style_set_flex_flow))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = lv_style_set_flex_flow &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quantity_create
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;estimate_create
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;capacity_create
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_create
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;duration_create
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;count_create
</UL>

<P><STRONG><a name="[23f]"></a>lv_style_set_flex_main_place</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, lv_flex.o(i.lv_style_set_flex_main_place))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = lv_style_set_flex_main_place &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quantity_create
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;estimate_create
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;capacity_create
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_create
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;duration_create
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;count_create
</UL>

<P><STRONG><a name="[240]"></a>lv_style_set_layout</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, lv_style_gen.o(i.lv_style_set_layout))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = lv_style_set_layout &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quantity_create
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;estimate_create
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;capacity_create
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_create
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;duration_create
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;count_create
</UL>

<P><STRONG><a name="[4e5]"></a>lv_style_set_line_color</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, lv_style_gen.o(i.lv_style_set_line_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = lv_style_set_line_color &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[4e6]"></a>lv_style_set_line_width</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, lv_style_gen.o(i.lv_style_set_line_width))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = lv_style_set_line_width &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[4e7]"></a>lv_style_set_max_height</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, lv_style_gen.o(i.lv_style_set_max_height))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = lv_style_set_max_height &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[4e8]"></a>lv_style_set_outline_color</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, lv_style_gen.o(i.lv_style_set_outline_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = lv_style_set_outline_color &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[4e9]"></a>lv_style_set_outline_opa</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, lv_style_gen.o(i.lv_style_set_outline_opa))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = lv_style_set_outline_opa &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[4ea]"></a>lv_style_set_outline_pad</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, lv_style_gen.o(i.lv_style_set_outline_pad))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = lv_style_set_outline_pad &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[4eb]"></a>lv_style_set_outline_width</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, lv_style_gen.o(i.lv_style_set_outline_width))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = lv_style_set_outline_width &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[4f0]"></a>lv_style_set_pad_bottom</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, lv_style_gen.o(i.lv_style_set_pad_bottom))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = lv_style_set_pad_bottom &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_all
</UL>

<P><STRONG><a name="[241]"></a>lv_style_set_pad_column</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, lv_style_gen.o(i.lv_style_set_pad_column))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = lv_style_set_pad_column &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_gap
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quantity_create
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;estimate_create
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;capacity_create
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_create
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;duration_create
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;count_create
</UL>

<P><STRONG><a name="[4ed]"></a>lv_style_set_pad_left</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, lv_style_gen.o(i.lv_style_set_pad_left))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = lv_style_set_pad_left &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_hor
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_all
</UL>

<P><STRONG><a name="[4ee]"></a>lv_style_set_pad_right</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, lv_style_gen.o(i.lv_style_set_pad_right))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = lv_style_set_pad_right &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_hor
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_all
</UL>

<P><STRONG><a name="[242]"></a>lv_style_set_pad_row</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, lv_style_gen.o(i.lv_style_set_pad_row))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = lv_style_set_pad_row &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_gap
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quantity_create
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;estimate_create
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;capacity_create
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_create
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;duration_create
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;count_create
</UL>

<P><STRONG><a name="[4ef]"></a>lv_style_set_pad_top</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, lv_style_gen.o(i.lv_style_set_pad_top))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = lv_style_set_pad_top &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_all
</UL>

<P><STRONG><a name="[1ba]"></a>lv_style_set_prop</STRONG> (Thumb, 308 bytes, Stack size 56 bytes, lv_style.o(i.lv_style_set_prop))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_get_prop_group
</UL>
<BR>[Called By]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_style_create_transition
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_start_cb
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_cb
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_flex_main_place
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_flex_flow
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_width
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_transition
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_transform_width
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_transform_height
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_text_line_space
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_text_font
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_text_color
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_text_align
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_shadow_width
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_shadow_opa
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_shadow_ofs_y
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_shadow_color
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_radius
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_top
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_row
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_right
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_left
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_column
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_bottom
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_outline_width
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_outline_pad
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_outline_opa
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_outline_color
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_max_height
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_line_width
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_line_color
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_color_filter_opa
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_color_filter_dsc
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_clip_corner
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_border_width
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_border_side
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_border_post
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_border_color
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_opa
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_img_src
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_color
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_anim_time
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_layout
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_border_opa
</UL>

<P><STRONG><a name="[4f3]"></a>lv_style_set_radius</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, lv_style_gen.o(i.lv_style_set_radius))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = lv_style_set_radius &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_recent_style_create
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_infos_style_create
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_dialplate_style_create
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_dialplate_main_style_create
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_dialplate_iden_style_create
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_dialplate_count_style_create
</UL>

<P><STRONG><a name="[4f4]"></a>lv_style_set_shadow_color</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, lv_style_gen.o(i.lv_style_set_shadow_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = lv_style_set_shadow_color &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[4f5]"></a>lv_style_set_shadow_ofs_y</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, lv_style_gen.o(i.lv_style_set_shadow_ofs_y))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = lv_style_set_shadow_ofs_y &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[4f6]"></a>lv_style_set_shadow_opa</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, lv_style_gen.o(i.lv_style_set_shadow_opa))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = lv_style_set_shadow_opa &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[4f7]"></a>lv_style_set_shadow_width</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, lv_style_gen.o(i.lv_style_set_shadow_width))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = lv_style_set_shadow_width &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[4f8]"></a>lv_style_set_text_align</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, lv_style_gen.o(i.lv_style_set_text_align))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = lv_style_set_text_align &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[4f9]"></a>lv_style_set_text_color</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, lv_style_gen.o(i.lv_style_set_text_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = lv_style_set_text_color &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_recent_style_create
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_infos_style_create
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_dialplate_style_create
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_dialplate_main_style_create
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_dialplate_iden_style_create
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_dialplate_count_style_create
</UL>

<P><STRONG><a name="[4fa]"></a>lv_style_set_text_font</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, lv_style_gen.o(i.lv_style_set_text_font))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = lv_style_set_text_font &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[4fb]"></a>lv_style_set_text_line_space</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, lv_style_gen.o(i.lv_style_set_text_line_space))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = lv_style_set_text_line_space &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[4fc]"></a>lv_style_set_transform_height</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, lv_style_gen.o(i.lv_style_set_transform_height))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = lv_style_set_transform_height &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[4fd]"></a>lv_style_set_transform_width</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, lv_style_gen.o(i.lv_style_set_transform_width))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = lv_style_set_transform_width &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[4fe]"></a>lv_style_set_transition</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, lv_style_gen.o(i.lv_style_set_transition))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = lv_style_set_transition &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[4ff]"></a>lv_style_set_width</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, lv_style_gen.o(i.lv_style_set_width))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = lv_style_set_width &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[500]"></a>lv_style_transition_dsc_init</STRONG> (Thumb, 50 bytes, Stack size 32 bytes, lv_style.o(i.lv_style_transition_dsc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = lv_style_transition_dsc_init &rArr; lv_memset_00
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_00
</UL>
<BR>[Called By]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[4d5]"></a>lv_textarea_add_char</STRONG> (Thumb, 340 bytes, Stack size 112 bytes, lv_textarea.o(i.lv_textarea_add_char))
<BR><BR>[Stack]<UL><LI>Max Depth = 872<LI>Call Chain = lv_textarea_add_char &rArr; insert_handler &rArr; lv_textarea_add_text &rArr;  lv_textarea_add_char (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_init
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_ins
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_text
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_ins_text
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_get_cursor_pos
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_clear_selection
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwd_char_hider
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_set_var
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_set_values
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_set_time
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_set_ready_cb
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_set_path_cb
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_set_exec_cb
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;insert_handler
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;char_is_accepted
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_text
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_event
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_text
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
</UL>

<P><STRONG><a name="[36e]"></a>lv_textarea_add_text</STRONG> (Thumb, 364 bytes, Stack size 96 bytes, lv_textarea.o(i.lv_textarea_add_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 744 + In Cycle
<LI>Call Chain = lv_textarea_add_text &rArr;  lv_textarea_add_char (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_init
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_char
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_ins
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_text
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_ins_text
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_get_max_length
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_get_cursor_pos
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_get_accepted_chars
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_clear_selection
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwd_char_hider
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_set_var
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_set_values
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_set_time
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_set_ready_cb
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_set_path_cb
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_set_exec_cb
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;insert_handler
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;insert_handler
</UL>

<P><STRONG><a name="[504]"></a>lv_textarea_clear_selection</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lv_textarea.o(i.lv_textarea_clear_selection))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = lv_textarea_clear_selection &rArr; lv_label_set_text_sel_start &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; _lv_inv_area &rArr; _lv_area_is_in &rArr; _lv_area_is_point_on &rArr;  _lv_area_is_point_on (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text_sel_start
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text_sel_end
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_text_selection_start
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_text_selection_end
</UL>
<BR>[Called By]<UL><LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_text
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_char
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_del_char
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_text
</UL>

<P><STRONG><a name="[50f]"></a>lv_textarea_cursor_down</STRONG> (Thumb, 126 bytes, Stack size 40 bytes, lv_textarea.o(i.lv_textarea_cursor_down))
<BR><BR>[Stack]<UL><LI>Max Depth = 688<LI>Call Chain = lv_textarea_cursor_down &rArr; lv_textarea_set_cursor_pos &rArr; lv_obj_update_layout &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_pos
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_on
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_get_cursor_pos
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_line_space
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_font
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_line_height
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
</UL>

<P><STRONG><a name="[4d2]"></a>lv_textarea_cursor_left</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lv_textarea.o(i.lv_textarea_cursor_left))
<BR><BR>[Stack]<UL><LI>Max Depth = 664<LI>Call Chain = lv_textarea_cursor_left &rArr; lv_textarea_set_cursor_pos &rArr; lv_obj_update_layout &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_get_cursor_pos
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_event
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
</UL>

<P><STRONG><a name="[511]"></a>lv_textarea_cursor_right</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, lv_textarea.o(i.lv_textarea_cursor_right))
<BR><BR>[Stack]<UL><LI>Max Depth = 664<LI>Call Chain = lv_textarea_cursor_right &rArr; lv_textarea_set_cursor_pos &rArr; lv_obj_update_layout &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_get_cursor_pos
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
</UL>

<P><STRONG><a name="[512]"></a>lv_textarea_cursor_up</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, lv_textarea.o(i.lv_textarea_cursor_up))
<BR><BR>[Stack]<UL><LI>Max Depth = 688<LI>Call Chain = lv_textarea_cursor_up &rArr; lv_textarea_set_cursor_pos &rArr; lv_obj_update_layout &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_pos
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_on
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_get_cursor_pos
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_line_space
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_font
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_line_height
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
</UL>

<P><STRONG><a name="[513]"></a>lv_textarea_del_char</STRONG> (Thumb, 190 bytes, Stack size 32 bytes, lv_textarea.o(i.lv_textarea_del_char))
<BR><BR>[Stack]<UL><LI>Max Depth = 792<LI>Call Chain = lv_textarea_del_char &rArr; insert_handler &rArr; lv_textarea_add_text &rArr;  lv_textarea_add_char (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_cut
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_text
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_clear_selection
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;insert_handler
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_del_char_forward
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
</UL>

<P><STRONG><a name="[514]"></a>lv_textarea_del_char_forward</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, lv_textarea.o(i.lv_textarea_del_char_forward))
<BR><BR>[Stack]<UL><LI>Max Depth = 808<LI>Call Chain = lv_textarea_del_char_forward &rArr; lv_textarea_del_char &rArr; insert_handler &rArr; lv_textarea_add_text &rArr;  lv_textarea_add_char (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_get_cursor_pos
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_del_char
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
</UL>

<P><STRONG><a name="[50c]"></a>lv_textarea_get_accepted_chars</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_textarea.o(i.lv_textarea_get_accepted_chars))
<BR><BR>[Called By]<UL><LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_text
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_text
</UL>

<P><STRONG><a name="[50b]"></a>lv_textarea_get_cursor_pos</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_textarea.o(i.lv_textarea_get_cursor_pos))
<BR><BR>[Called By]<UL><LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_cursor_left
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_char
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_del_char_forward
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_cursor_up
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_cursor_right
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_cursor_down
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_text
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_cursor_area
</UL>

<P><STRONG><a name="[50d]"></a>lv_textarea_get_max_length</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_textarea.o(i.lv_textarea_get_max_length))
<BR><BR>[Called By]<UL><LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_text
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_text
</UL>

<P><STRONG><a name="[515]"></a>lv_textarea_get_one_line</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lv_textarea.o(i.lv_textarea_get_one_line))
<BR><BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
</UL>

<P><STRONG><a name="[254]"></a>lv_textarea_get_text</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, lv_textarea.o(i.lv_textarea_get_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lv_textarea_get_text
</UL>
<BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_text
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_event
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;char_is_accepted
</UL>

<P><STRONG><a name="[4cc]"></a>lv_textarea_set_cursor_click_pos</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, lv_textarea.o(i.lv_textarea_set_cursor_click_pos))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_textarea_set_cursor_click_pos
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_constructor
</UL>

<P><STRONG><a name="[4d3]"></a>lv_textarea_set_cursor_pos</STRONG> (Thumb, 262 bytes, Stack size 48 bytes, lv_textarea.o(i.lv_textarea_set_cursor_pos))
<BR><BR>[Stack]<UL><LI>Max Depth = 648<LI>Call Chain = lv_textarea_set_cursor_pos &rArr; lv_obj_update_layout &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to_y
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to_x
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_top
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_update_layout
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_width
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_height
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_text
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_pos
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_cursor_blink
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_cursor_area
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_font
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_line_height
</UL>
<BR>[Called By]<UL><LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_text
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_cursor_left
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_char
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_updatevalue
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_event
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_del_char_forward
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_del_char
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_cursor_up
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_cursor_right
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_cursor_down
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_text
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_cursor_position_on_click
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_constructor
</UL>

<P><STRONG><a name="[4cb]"></a>lv_textarea_set_one_line</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, lv_textarea.o(i.lv_textarea_set_one_line))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = lv_textarea_set_one_line &rArr; lv_obj_scroll_to &rArr; lv_obj_scroll_to_y &rArr; lv_obj_scroll_by_bounded &rArr;  lv_obj_update_layout (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_local_style_prop
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_width
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_height
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_min_width
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_pct
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_constructor
</UL>

<P><STRONG><a name="[4d6]"></a>lv_textarea_set_text</STRONG> (Thumb, 330 bytes, Stack size 88 bytes, lv_textarea.o(i.lv_textarea_set_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 960<LI>Call Chain = lv_textarea_set_text &rArr; lv_textarea_add_char &rArr; insert_handler &rArr; lv_textarea_add_text &rArr;  lv_textarea_add_char (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_init
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_char
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_text
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_get_max_length
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_get_accepted_chars
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_clear_selection
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwd_char_hider
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_set_var
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_set_values
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_set_time
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_set_ready_cb
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_set_path_cb
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_set_exec_cb
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_updatevalue
</UL>

<P><STRONG><a name="[45a]"></a>lv_theme_apply</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, lv_theme.o(i.lv_theme_apply))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = lv_theme_apply &rArr; lv_obj_remove_style &rArr; trans_del &rArr; lv_style_remove_prop &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_style
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apply_theme
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_get_from_obj
</UL>
<BR>[Called By]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
</UL>

<P><STRONG><a name="[3d0]"></a>lv_theme_default_get</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, lv_theme_default.o(i.lv_theme_default_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = lv_theme_default_get
</UL>
<BR>[Calls]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_default_is_inited
</UL>
<BR>[Called By]<UL><LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_register
</UL>

<P><STRONG><a name="[3cf]"></a>lv_theme_default_init</STRONG> (Thumb, 166 bytes, Stack size 40 bytes, lv_theme_default.o(i.lv_theme_default_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = lv_theme_default_init &rArr; style_init &rArr; lv_style_set_pad_hor &rArr; lv_style_set_pad_right &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_default
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_hor_res
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_theme
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_report_style_change
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_default_is_inited
</UL>
<BR>[Called By]<UL><LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_register
</UL>

<P><STRONG><a name="[3ce]"></a>lv_theme_default_is_inited</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lv_theme_default.o(i.lv_theme_default_is_inited))
<BR><BR>[Called By]<UL><LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_register
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_default_init
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_default_get
</UL>

<P><STRONG><a name="[2f8]"></a>lv_theme_get_color_primary</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, lv_theme.o(i.lv_theme_get_color_primary))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = lv_theme_get_color_primary &rArr; lv_theme_get_from_obj &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen
</UL>
<BR>[Calls]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_palette_main
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_get_from_obj
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_part_begin_event_cb
</UL>

<P><STRONG><a name="[517]"></a>lv_theme_get_from_obj</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, lv_theme.o(i.lv_theme_get_from_obj))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = lv_theme_get_from_obj &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_default
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_disp
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_theme
</UL>
<BR>[Called By]<UL><LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_apply
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_get_color_primary
</UL>

<P><STRONG><a name="[17a]"></a>lv_tick_elaps</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, lv_hal_tick.o(i.lv_tick_elaps))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_tick_elaps
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_get
</UL>
<BR>[Called By]<UL><LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_handler
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_proc_press
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_keypad_proc
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_encoder_proc
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_cache_open
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anim_timer
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_time_remaining
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update
<LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update
</UL>

<P><STRONG><a name="[16f]"></a>lv_tick_get</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lv_hal_tick.o(i.lv_tick_get))
<BR><BR>[Called By]<UL><LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_handler
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_elaps
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_reset_long_press
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_read_timer_cb
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_proc_press
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_keypad_proc
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_encoder_proc
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_cache_open
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_ready
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_create
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anim_timer
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_exec
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update
<LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update
</UL>

<P><STRONG><a name="[15b]"></a>lv_tick_inc</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lv_hal_tick.o(i.lv_tick_inc))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1_IRQHandler
</UL>

<P><STRONG><a name="[167]"></a>lv_timer_create</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, lv_timer.o(i.lv_timer_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = lv_timer_create &rArr; _lv_ll_ins_head &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_get
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_head
</UL>
<BR>[Called By]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_drv_register
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_register
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_anim_core_init
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_async_call
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;view_did_appear
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;view_did_appear
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;view_did_appear
</UL>

<P><STRONG><a name="[519]"></a>lv_timer_del</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, lv_timer.o(i.lv_timer_del))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = lv_timer_del &rArr; lv_mem_free &rArr; lv_tlsf_free &rArr; block_merge_prev &rArr; block_absorb &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_remove
</UL>
<BR>[Called By]<UL><LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_exec
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;view_will_disappear
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;view_will_disappear
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;view_will_disappear
</UL>

<P><STRONG><a name="[1c8]"></a>lv_timer_enable</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_timer.o(i.lv_timer_enable))
<BR><BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_timer_core_init
</UL>

<P><STRONG><a name="[51c]"></a>lv_timer_handler</STRONG> (Thumb, 298 bytes, Stack size 24 bytes, lv_timer.o(i.lv_timer_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = lv_timer_handler &rArr; lv_timer_exec &rArr; lv_timer_del &rArr; lv_mem_free &rArr; lv_tlsf_free &rArr; block_merge_prev &rArr; block_absorb &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_get
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_elaps
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_time_remaining
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_exec
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[170]"></a>lv_timer_pause</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_timer.o(i.lv_timer_pause))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anim_mark_list_change
</UL>

<P><STRONG><a name="[3d3]"></a>lv_timer_ready</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lv_timer.o(i.lv_timer_ready))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_timer_ready
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_get
</UL>
<BR>[Called By]<UL><LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_register
</UL>

<P><STRONG><a name="[1ac]"></a>lv_timer_resume</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_timer.o(i.lv_timer_resume))
<BR><BR>[Called By]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_inv_area
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_mark_layout_as_dirty
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anim_mark_list_change
</UL>

<P><STRONG><a name="[39d]"></a>lv_timer_set_repeat_count</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lv_timer.o(i.lv_timer_set_repeat_count))
<BR><BR>[Called By]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_async_call
</UL>

<P><STRONG><a name="[51d]"></a>lv_tlsf_add_pool</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, lv_tlsf.o(i.lv_tlsf_add_pool))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = lv_tlsf_add_pool &rArr; block_insert &rArr; insert_free_block &rArr; align_ptr
</UL>
<BR>[Calls]<UL><LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_pool_overhead
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;offset_to_block
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_set_used
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_set_size
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_set_prev_used
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_set_prev_free
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_set_free
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_link_next
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_insert
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;align_down
</UL>
<BR>[Called By]<UL><LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_create_with_pool
</UL>

<P><STRONG><a name="[520]"></a>lv_tlsf_create</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, lv_tlsf.o(i.lv_tlsf_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lv_tlsf_create &rArr; control_constructor
</UL>
<BR>[Calls]<UL><LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;control_constructor
</UL>
<BR>[Called By]<UL><LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_create_with_pool
</UL>

<P><STRONG><a name="[444]"></a>lv_tlsf_create_with_pool</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, lv_tlsf.o(i.lv_tlsf_create_with_pool))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = lv_tlsf_create_with_pool &rArr; lv_tlsf_add_pool &rArr; block_insert &rArr; insert_free_block &rArr; align_ptr
</UL>
<BR>[Calls]<UL><LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_size
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_create
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_add_pool
</UL>
<BR>[Called By]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_init
</UL>

<P><STRONG><a name="[443]"></a>lv_tlsf_free</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, lv_tlsf.o(i.lv_tlsf_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = lv_tlsf_free &rArr; block_merge_prev &rArr; block_absorb &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_merge_prev
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_merge_next
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_mark_as_free
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_is_free
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_insert
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_from_ptr
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_realloc
</UL>

<P><STRONG><a name="[445]"></a>lv_tlsf_get_pool</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, lv_tlsf.o(i.lv_tlsf_get_pool))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = lv_tlsf_get_pool
</UL>
<BR>[Calls]<UL><LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_size
</UL>
<BR>[Called By]<UL><LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_monitor
</UL>

<P><STRONG><a name="[441]"></a>lv_tlsf_malloc</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, lv_tlsf.o(i.lv_tlsf_malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_prepare_used
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_locate_free
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adjust_request_size
</UL>
<BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_realloc
</UL>

<P><STRONG><a name="[51e]"></a>lv_tlsf_pool_overhead</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lv_tlsf.o(i.lv_tlsf_pool_overhead))
<BR><BR>[Called By]<UL><LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_add_pool
</UL>

<P><STRONG><a name="[447]"></a>lv_tlsf_realloc</STRONG> (Thumb, 214 bytes, Stack size 48 bytes, lv_tlsf.o(i.lv_tlsf_realloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memcpy
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_malloc
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_free
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_trim_used
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_size
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_next
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_merge_next
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_mark_as_used
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_is_free
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_from_ptr
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adjust_request_size
</UL>
<BR>[Called By]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
</UL>

<P><STRONG><a name="[522]"></a>lv_tlsf_size</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_tlsf.o(i.lv_tlsf_size))
<BR><BR>[Called By]<UL><LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_get_pool
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_create_with_pool
</UL>

<P><STRONG><a name="[446]"></a>lv_tlsf_walk_pool</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, lv_tlsf.o(i.lv_tlsf_walk_pool))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = lv_tlsf_walk_pool &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;offset_to_block
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_to_ptr
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_size
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_next
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_is_last
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_is_free
</UL>
<BR>[Called By]<UL><LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_monitor
</UL>

<P><STRONG><a name="[182]"></a>lv_trigo_sin</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, lv_math.o(i.lv_trigo_sin))
<BR><BR>[Called By]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_rounded_area
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_quarter_3
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_quarter_2
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_quarter_1
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_quarter_0
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_buf_transform_init
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_line_angle_init
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_buf_get_transformed_area
</UL>

<P><STRONG><a name="[28b]"></a>lv_txt_get_size</STRONG> (Thumb, 228 bytes, Stack size 64 bytes, lv_txt.o(i.lv_txt_get_size))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = lv_txt_get_size &rArr; _lv_txt_get_next_line &rArr; lv_txt_get_next_word &rArr; lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_width
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_get_next_line
</UL>
<BR>[Called By]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg_img
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_event
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_draw
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_event
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_selected_label_width
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_row_height
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
</UL>

<P><STRONG><a name="[3da]"></a>lv_txt_get_width</STRONG> (Thumb, 136 bytes, Stack size 48 bytes, lv_txt.o(i.lv_txt_get_width))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = lv_txt_get_width &rArr; lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_glyph_width
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_encoded_letter_next_2
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_is_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_size
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_is_char_under_pos
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_pos
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_on
</UL>

<P><STRONG><a name="[1d1]"></a>lv_vsnprintf</STRONG> (Thumb, 30 bytes, Stack size 40 bytes, lv_printf.o(i.lv_vsnprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = lv_vsnprintf &rArr; _vsnprintf &rArr;  _vsnprintf (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_vsnprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_set_text_vfmt
</UL>

<P><STRONG><a name="[117]"></a>main</STRONG> (Thumb, 248 bytes, Stack size 16 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = main &rArr; nt_start_page &rArr; nt_page_state_update &rArr;  nt_page_state_update (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_task_handler
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_task_add
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_start_page
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_handler
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_port_indev_init
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_port_disp_init
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_style
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_init
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_set_group
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_set_default
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_create
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_set_bg_color
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_scr_act
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_default
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inside_temp_adc_init
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd25q64_spi_gpio_init
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_nt_view_pointer_init
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INA226_Init
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_clock_config
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_timer_init
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_gpio_init
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_gpio_init
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_cdc_init
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_init
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7789_init
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[534]"></a>nt_dialplate_create</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, dialplateview.o(i.nt_dialplate_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = nt_dialplate_create &rArr; main_create &rArr; lv_label_set_text &rArr; lv_label_refr_text &rArr; lv_label_get_letter_on &rArr; _lv_txt_get_next_line &rArr; lv_txt_get_next_word &rArr; lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_style
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_dialplate_style_create
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_dialplate_main_style_create
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_dialplate_iden_style_create
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_dialplate_count_style_create
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_create
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_style_all
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;duration_create
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;count_create
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;view_load
</UL>

<P><STRONG><a name="[539]"></a>nt_page_state_update</STRONG> (Thumb, 138 bytes, Stack size 8 bytes, nt_pm.o(i.nt_page_state_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 424 + In Cycle
<LI>Call Chain = nt_page_state_update &rArr;  nt_page_state_update (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_state_will_disappear_execute
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_state_will_appear_execute
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_state_unload_execute
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_state_load_execute
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_state_did_disappear_execute
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_state_did_appear_execute
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_page_state_update
</UL>
<BR>[Called By]<UL><LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_start_page
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_page_state_update
</UL>

<P><STRONG><a name="[540]"></a>nt_pm_anim_default_init</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, nt_pm.o(i.nt_pm_anim_default_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = nt_pm_anim_default_init &rArr; lv_anim_init &rArr; lv_memset_00
</UL>
<BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_init
</UL>
<BR>[Called By]<UL><LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_pm_view_rotations_anim_create
</UL>

<P><STRONG><a name="[541]"></a>nt_pm_name_get_page_id</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, nt_pm.o(i.nt_pm_name_get_page_id))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = nt_pm_name_get_page_id
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_start_page
</UL>

<P><STRONG><a name="[542]"></a>nt_pm_name_get_view_id</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, nt_pm.o(i.nt_pm_name_get_view_id))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = nt_pm_name_get_view_id
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_start_page
</UL>

<P><STRONG><a name="[543]"></a>nt_pm_view_rotations_anim_create</STRONG> (Thumb, 114 bytes, Stack size 80 bytes, nt_pm.o(i.nt_pm_view_rotations_anim_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = nt_pm_view_rotations_anim_create &rArr; lv_anim_start &rArr; _lv_ll_ins_head &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_set_values
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_pm_anim_default_init
</UL>
<BR>[Called By]<UL><LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_state_will_disappear_execute
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_state_will_appear_execute
</UL>

<P><STRONG><a name="[bd]"></a>nt_pm_view_rotations_anim_finish</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, nt_pm.o(i.nt_pm_view_rotations_anim_finish))
<BR>[Address Reference Count : 1]<UL><LI> nt_pm.o(i.nt_pm_view_rotations_anim_create)
</UL>
<P><STRONG><a name="[545]"></a>nt_recent_create</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, recentview.o(i.nt_recent_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 1120<LI>Call Chain = nt_recent_create &rArr; quantity_create &rArr; lv_spinbox_set_digit_format &rArr; lv_spinbox_updatevalue &rArr; lv_textarea_set_text &rArr; lv_textarea_add_char &rArr; insert_handler &rArr; lv_textarea_add_text &rArr;  lv_textarea_add_char (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_style
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quantity_create
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_recent_style_create
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_style_all
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;estimate_create
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;capacity_create
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;view_load
</UL>

<P><STRONG><a name="[52b]"></a>nt_start_page</STRONG> (Thumb, 348 bytes, Stack size 64 bytes, nt_pm.o(i.nt_start_page))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = nt_start_page &rArr; nt_page_state_update &rArr;  nt_page_state_update (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del_async
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_foreground
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_pm_name_get_view_id
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_pm_name_get_page_id
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_page_state_update
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_nt_buffer_node_move_back
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_event
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_event
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_event
</UL>

<P><STRONG><a name="[53c]"></a>nt_state_did_appear_execute</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, nt_pm.o(i.nt_state_did_appear_execute))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nt_state_did_appear_execute
</UL>
<BR>[Called By]<UL><LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_page_state_update
</UL>

<P><STRONG><a name="[53e]"></a>nt_state_did_disappear_execute</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, nt_pm.o(i.nt_state_did_disappear_execute))
<BR><BR>[Stack]<UL><LI>Max Depth = 372<LI>Call Chain = nt_state_did_disappear_execute &rArr; lv_obj_add_flag &rArr; lv_obj_get_scrollbar_area &rArr; lv_obj_get_scroll_left &rArr; lv_obj_get_style_pad_right &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
</UL>
<BR>[Called By]<UL><LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_page_state_update
</UL>

<P><STRONG><a name="[53a]"></a>nt_state_load_execute</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, nt_pm.o(i.nt_state_load_execute))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = nt_state_load_execute &rArr; lv_obj_create &rArr; lv_obj_class_init_obj &rArr; lv_theme_apply &rArr; lv_obj_remove_style &rArr; trans_del &rArr; lv_style_remove_prop &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_scr_act
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_default
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_create
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
</UL>
<BR>[Called By]<UL><LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_page_state_update
</UL>

<P><STRONG><a name="[53f]"></a>nt_state_unload_execute</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, nt_pm.o(i.nt_state_unload_execute))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = nt_state_unload_execute &rArr; lv_obj_del_async &rArr; lv_async_call &rArr; lv_timer_create &rArr; _lv_ll_ins_head &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del_async
</UL>
<BR>[Called By]<UL><LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_page_state_update
</UL>

<P><STRONG><a name="[53b]"></a>nt_state_will_appear_execute</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, nt_pm.o(i.nt_state_will_appear_execute))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = nt_state_will_appear_execute &rArr; lv_obj_clear_flag &rArr; lv_obj_get_scrollbar_area &rArr; lv_obj_get_scroll_left &rArr; lv_obj_get_style_pad_right &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_pm_view_rotations_anim_create
</UL>
<BR>[Called By]<UL><LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_page_state_update
</UL>

<P><STRONG><a name="[53d]"></a>nt_state_will_disappear_execute</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, nt_pm.o(i.nt_state_will_disappear_execute))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = nt_state_will_disappear_execute &rArr; nt_pm_view_rotations_anim_create &rArr; lv_anim_start &rArr; _lv_ll_ins_head &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_pm_view_rotations_anim_create
</UL>
<BR>[Called By]<UL><LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_page_state_update
</UL>

<P><STRONG><a name="[52c]"></a>nt_task_add</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, nt_minitask.o(i.nt_task_add))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = nt_task_add
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[52d]"></a>nt_task_handler</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, nt_minitask.o(i.nt_task_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = nt_task_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[15c]"></a>nt_task_tick_inc</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, nt_minitask.o(i.nt_task_tick_inc))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nt_task_tick_inc
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1_IRQHandler
</UL>

<P><STRONG><a name="[548]"></a>nvic_config</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, usbd_cdc.o(i.nvic_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = nvic_config &rArr; nvic_irq_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_priority_group_set
</UL>
<BR>[Called By]<UL><LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_cdc_init
</UL>

<P><STRONG><a name="[1dd]"></a>nvic_irq_enable</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, gd32f10x_misc.o(i.nvic_irq_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = nvic_irq_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_priority_group_set
</UL>
<BR>[Called By]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_timer_init
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_config
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_init
</UL>

<P><STRONG><a name="[549]"></a>nvic_priority_group_set</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32f10x_misc.o(i.nvic_priority_group_set))
<BR><BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_config
</UL>

<P><STRONG><a name="[158]"></a>nvic_vector_table_set</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gd32f10x_misc.o(i.nvic_vector_table_set))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[577]"></a>qflow_dura_get_hour</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, qflow.o(i.qflow_dura_get_hour))
<BR><BR>[Called By]<UL><LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update
</UL>

<P><STRONG><a name="[576]"></a>qflow_dura_get_min</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, qflow.o(i.qflow_dura_get_min))
<BR><BR>[Called By]<UL><LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update
</UL>

<P><STRONG><a name="[575]"></a>qflow_dura_get_sec</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, qflow.o(i.qflow_dura_get_sec))
<BR><BR>[Called By]<UL><LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update
</UL>

<P><STRONG><a name="[352]"></a>qflow_dura_work</STRONG> (Thumb, 74 bytes, Stack size 12 bytes, qflow.o(i.qflow_dura_work))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = qflow_dura_work
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_update
</UL>

<P><STRONG><a name="[15f]"></a>qflow_work</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, qflow.o(i.qflow_work))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = qflow_work &rArr; update &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1_IRQHandler
</UL>

<P><STRONG><a name="[37c]"></a>rcu_adc_clock_config</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, gd32f10x_rcu.o(i.rcu_adc_clock_config))
<BR><BR>[Called By]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inside_temp_adc_rcu_init
</UL>

<P><STRONG><a name="[569]"></a>rcu_ahb_clock_config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gd32f10x_rcu.o(i.rcu_ahb_clock_config))
<BR><BR>[Called By]<UL><LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_clock_config
</UL>

<P><STRONG><a name="[56a]"></a>rcu_apb1_clock_config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gd32f10x_rcu.o(i.rcu_apb1_clock_config))
<BR><BR>[Called By]<UL><LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_clock_config
</UL>

<P><STRONG><a name="[56b]"></a>rcu_apb2_clock_config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gd32f10x_rcu.o(i.rcu_apb2_clock_config))
<BR><BR>[Called By]<UL><LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_clock_config
</UL>

<P><STRONG><a name="[579]"></a>rcu_clock_freq_get</STRONG> (Thumb, 264 bytes, Stack size 80 bytes, gd32f10x_rcu.o(i.rcu_clock_freq_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = rcu_clock_freq_get
</UL>
<BR>[Called By]<UL><LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_baudrate_set
</UL>

<P><STRONG><a name="[54e]"></a>rcu_config</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, usbd_cdc.o(i.rcu_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rcu_config
</UL>
<BR>[Calls]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_usb_clock_config
</UL>
<BR>[Called By]<UL><LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_cdc_init
</UL>

<P><STRONG><a name="[551]"></a>rcu_flag_get</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, gd32f10x_rcu.o(i.rcu_flag_get))
<BR><BR>[Called By]<UL><LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_osci_stab_wait
</UL>

<P><STRONG><a name="[566]"></a>rcu_osci_on</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gd32f10x_rcu.o(i.rcu_osci_on))
<BR><BR>[Called By]<UL><LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_clock_config
</UL>

<P><STRONG><a name="[550]"></a>rcu_osci_stab_wait</STRONG> (Thumb, 218 bytes, Stack size 20 bytes, gd32f10x_rcu.o(i.rcu_osci_stab_wait))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = rcu_osci_stab_wait
</UL>
<BR>[Calls]<UL><LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_clock_config
</UL>

<P><STRONG><a name="[1da]"></a>rcu_periph_clock_enable</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gd32f10x_rcu.o(i.rcu_periph_clock_enable))
<BR><BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd25q64_spi_gpio_init
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_timer_init
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_gpio_init
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_gpio_init
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7789_gpio_init
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_gpio_init
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_config
<LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_gpio_init
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inside_temp_adc_rcu_init
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_init
</UL>

<P><STRONG><a name="[572]"></a>rcu_periph_reset_disable</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gd32f10x_rcu.o(i.rcu_periph_reset_disable))
<BR><BR>[Called By]<UL><LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_deinit
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_deinit
</UL>

<P><STRONG><a name="[571]"></a>rcu_periph_reset_enable</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gd32f10x_rcu.o(i.rcu_periph_reset_enable))
<BR><BR>[Called By]<UL><LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_deinit
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_deinit
</UL>

<P><STRONG><a name="[568]"></a>rcu_pll_config</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gd32f10x_rcu.o(i.rcu_pll_config))
<BR><BR>[Called By]<UL><LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_clock_config
</UL>

<P><STRONG><a name="[567]"></a>rcu_predv0_config</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, gd32f10x_rcu.o(i.rcu_predv0_config))
<BR><BR>[Called By]<UL><LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_clock_config
</UL>

<P><STRONG><a name="[56c]"></a>rcu_system_clock_source_config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gd32f10x_rcu.o(i.rcu_system_clock_source_config))
<BR><BR>[Called By]<UL><LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_clock_config
</UL>

<P><STRONG><a name="[56d]"></a>rcu_system_clock_source_get</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32f10x_rcu.o(i.rcu_system_clock_source_get))
<BR><BR>[Called By]<UL><LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_clock_config
</UL>

<P><STRONG><a name="[54f]"></a>rcu_usb_clock_config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gd32f10x_rcu.o(i.rcu_usb_clock_config))
<BR><BR>[Called By]<UL><LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_config
</UL>

<P><STRONG><a name="[591]"></a>resume_mcu</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, usbd_pwr.o(i.resume_mcu))
<BR><BR>[Called By]<UL><LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_intf_wakeup
</UL>

<P><STRONG><a name="[37a]"></a>sleep_ms</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, time.o(i.sleep_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sleep_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inside_temp_adc_init
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7789_reset
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7789_gpio_init
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7789_init
</UL>

<P><STRONG><a name="[55a]"></a>st7789_dir</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, st7789.o(i.st7789_dir))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = st7789_dir &rArr; write_data &rArr; st7789_write_bus
</UL>
<BR>[Calls]<UL><LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_data
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_command
</UL>
<BR>[Called By]<UL><LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7789_init
</UL>

<P><STRONG><a name="[55c]"></a>st7789_gpio_init</STRONG> (Thumb, 442 bytes, Stack size 8 bytes, st7789.o(i.st7789_gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = st7789_gpio_init &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7789_init
</UL>

<P><STRONG><a name="[527]"></a>st7789_init</STRONG> (Thumb, 406 bytes, Stack size 8 bytes, st7789.o(i.st7789_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = st7789_init &rArr; clear &rArr; display_region &rArr; write_datas &rArr; st7789_write_bus
</UL>
<BR>[Calls]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_data
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_command
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7789_reset
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7789_gpio_init
<LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7789_dir
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[55d]"></a>st7789_reset</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, st7789.o(i.st7789_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = st7789_reset &rArr; sleep_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7789_init
</UL>

<P><STRONG><a name="[55e]"></a>st7789_write_bus</STRONG> (Thumb, 40 bytes, Stack size 4 bytes, st7789.o(i.st7789_write_bus))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = st7789_write_bus
</UL>
<BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789_DATA_OUT
</UL>
<BR>[Called By]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_datas
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_data
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_command
</UL>

<P><STRONG><a name="[55f]"></a>strifica</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, strifica.o(i.strifica))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = strifica &rArr; strified &rArr; __2snprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strified
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;series
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update
</UL>

<P><STRONG><a name="[524]"></a>sys_clock_config</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, main.o(i.sys_clock_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = sys_clock_config &rArr; SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_ahb_clock_config
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_system_clock_source_get
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_system_clock_source_config
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_predv0_config
<LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_pll_config
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_osci_stab_wait
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_osci_on
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_apb2_clock_config
<LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_apb1_clock_config
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1db]"></a>timer_deinit</STRONG> (Thumb, 210 bytes, Stack size 8 bytes, gd32f10x_timer.o(i.timer_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = timer_deinit
</UL>
<BR>[Calls]<UL><LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_enable
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_timer_init
</UL>

<P><STRONG><a name="[1df]"></a>timer_enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32f10x_timer.o(i.timer_enable))
<BR><BR>[Called By]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_timer_init
</UL>

<P><STRONG><a name="[1dc]"></a>timer_init</STRONG> (Thumb, 170 bytes, Stack size 0 bytes, gd32f10x_timer.o(i.timer_init))
<BR><BR>[Called By]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_timer_init
</UL>

<P><STRONG><a name="[1de]"></a>timer_interrupt_enable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gd32f10x_timer.o(i.timer_interrupt_enable))
<BR><BR>[Called By]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_timer_init
</UL>

<P><STRONG><a name="[15a]"></a>timer_interrupt_flag_clear</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gd32f10x_timer.o(i.timer_interrupt_flag_clear))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1_IRQHandler
</UL>

<P><STRONG><a name="[159]"></a>timer_interrupt_flag_get</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gd32f10x_timer.o(i.timer_interrupt_flag_get))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1_IRQHandler
</UL>

<P><STRONG><a name="[578]"></a>usart_baudrate_set</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, gd32f10x_usart.o(i.usart_baudrate_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = usart_baudrate_set &rArr; rcu_clock_freq_get
</UL>
<BR>[Calls]<UL><LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_clock_freq_get
</UL>
<BR>[Called By]<UL><LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_init
</UL>

<P><STRONG><a name="[161]"></a>usart_data_receive</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32f10x_usart.o(i.usart_data_receive))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[57a]"></a>usart_deinit</STRONG> (Thumb, 136 bytes, Stack size 8 bytes, gd32f10x_usart.o(i.usart_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usart_deinit
</UL>
<BR>[Calls]<UL><LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_enable
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_init
</UL>

<P><STRONG><a name="[583]"></a>usart_enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32f10x_usart.o(i.usart_enable))
<BR><BR>[Called By]<UL><LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_init
</UL>

<P><STRONG><a name="[580]"></a>usart_hardware_flow_cts_config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gd32f10x_usart.o(i.usart_hardware_flow_cts_config))
<BR><BR>[Called By]<UL><LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_init
</UL>

<P><STRONG><a name="[57f]"></a>usart_hardware_flow_rts_config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gd32f10x_usart.o(i.usart_hardware_flow_rts_config))
<BR><BR>[Called By]<UL><LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_init
</UL>

<P><STRONG><a name="[525]"></a>usart_init</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, usart.o(i.usart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = usart_init &rArr; usart_baudrate_set &rArr; rcu_clock_freq_get
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_word_length_set
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_transmit_config
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_stop_bit_set
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_receive_config
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_parity_config
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_hardware_flow_rts_config
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_hardware_flow_cts_config
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_enable
<LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_deinit
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_baudrate_set
<LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[160]"></a>usart_interrupt_flag_get</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, gd32f10x_usart.o(i.usart_interrupt_flag_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = usart_interrupt_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[57e]"></a>usart_parity_config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gd32f10x_usart.o(i.usart_parity_config))
<BR><BR>[Called By]<UL><LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_init
</UL>

<P><STRONG><a name="[581]"></a>usart_receive_config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gd32f10x_usart.o(i.usart_receive_config))
<BR><BR>[Called By]<UL><LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_init
</UL>

<P><STRONG><a name="[57d]"></a>usart_stop_bit_set</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gd32f10x_usart.o(i.usart_stop_bit_set))
<BR><BR>[Called By]<UL><LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_init
</UL>

<P><STRONG><a name="[582]"></a>usart_transmit_config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gd32f10x_usart.o(i.usart_transmit_config))
<BR><BR>[Called By]<UL><LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_init
</UL>

<P><STRONG><a name="[57c]"></a>usart_word_length_set</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gd32f10x_usart.o(i.usart_word_length_set))
<BR><BR>[Called By]<UL><LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_init
</UL>

<P><STRONG><a name="[526]"></a>usb_cdc_init</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, usbd_cdc.o(i.usb_cdc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = usb_cdc_init &rArr; nvic_config &rArr; nvic_irq_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_core_init
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_config
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_config
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[584]"></a>usbd_core_init</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, usbd_core.o(i.usbd_core_init))
<BR><BR>[Called By]<UL><LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_cdc_init
</UL>

<P><STRONG><a name="[586]"></a>usbd_device_class_request</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, usbd_std.o(i.usbd_device_class_request))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = usbd_device_class_request &rArr; usbd_enum_error &rArr; usbd_ep_stall
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_enum_error
</UL>
<BR>[Called By]<UL><LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_setup_transaction
</UL>

<P><STRONG><a name="[252]"></a>usbd_enum_error</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, usbd_std.o(i.usbd_enum_error))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = usbd_enum_error &rArr; usbd_ep_stall
</UL>
<BR>[Calls]<UL><LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_stall
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cdc_acm_req_handler
<LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_device_class_request
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_setinterface
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_setfeature
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_setconfiguration
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_setaddress
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_getstatus
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_getinterface
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_getdescriptor
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_getconfiguration
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_clearfeature
</UL>

<P><STRONG><a name="[585]"></a>usbd_ep_clear_stall</STRONG> (Thumb, 212 bytes, Stack size 20 bytes, usbd_core.o(i.usbd_ep_clear_stall))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = usbd_ep_clear_stall
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_clearfeature
</UL>

<P><STRONG><a name="[58b]"></a>usbd_ep_data_read</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, usbd_core.o(i.usbd_ep_data_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = usbd_ep_data_read
</UL>
<BR>[Called By]<UL><LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_intf_lpst
</UL>

<P><STRONG><a name="[588]"></a>usbd_ep_data_write</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, usbd_core.o(i.usbd_ep_data_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = usbd_ep_data_write
</UL>
<BR>[Called By]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_tx
</UL>

<P><STRONG><a name="[24e]"></a>usbd_ep_deinit</STRONG> (Thumb, 174 bytes, Stack size 12 bytes, usbd_core.o(i.usbd_ep_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = usbd_ep_deinit
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cdc_acm_deinit
</UL>

<P><STRONG><a name="[24f]"></a>usbd_ep_init</STRONG> (Thumb, 742 bytes, Stack size 28 bytes, usbd_core.o(i.usbd_ep_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = usbd_ep_init
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cdc_acm_init
</UL>

<P><STRONG><a name="[250]"></a>usbd_ep_rx</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, usbd_core.o(i.usbd_ep_rx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = usbd_ep_rx
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cdc_acm_req_handler
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_out_transaction
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_in_transaction
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_intf_lpst
</UL>

<P><STRONG><a name="[587]"></a>usbd_ep_stall</STRONG> (Thumb, 156 bytes, Stack size 20 bytes, usbd_core.o(i.usbd_ep_stall))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = usbd_ep_stall
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_enum_error
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_setfeature
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_setup_transaction
</UL>

<P><STRONG><a name="[251]"></a>usbd_ep_tx</STRONG> (Thumb, 134 bytes, Stack size 32 bytes, usbd_core.o(i.usbd_ep_tx))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = usbd_ep_tx &rArr; usbd_ep_data_write
</UL>
<BR>[Calls]<UL><LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_data_write
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cdc_acm_req_handler
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_getstatus
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_getdescriptor
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_getconfiguration
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_in_transaction
</UL>

<P><STRONG><a name="[589]"></a>usbd_in_transaction</STRONG> (Thumb, 274 bytes, Stack size 16 bytes, usbd_std.o(i.usbd_in_transaction))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = usbd_in_transaction &rArr; usbd_ep_tx &rArr; usbd_ep_data_write
</UL>
<BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_tx
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_rx
</UL>
<BR>[Called By]<UL><LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_intf_lpst
</UL>

<P><STRONG><a name="[162]"></a>usbd_isr</STRONG> (Thumb, 202 bytes, Stack size 16 bytes, usbd_int.o(i.usbd_isr))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = usbd_isr &rArr; usbd_intf_lpst &rArr; usbd_setup_transaction &rArr; usbd_device_class_request &rArr; usbd_enum_error &rArr; usbd_ep_stall
</UL>
<BR>[Calls]<UL><LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_intf_wakeup
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_intf_suspend
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_intf_sof
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_intf_reset
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_intf_lpst
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_intf_esof
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_LP_CAN0_RX0_IRQHandler
</UL>

<P><STRONG><a name="[58d]"></a>usbd_out_transaction</STRONG> (Thumb, 158 bytes, Stack size 16 bytes, usbd_std.o(i.usbd_out_transaction))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = usbd_out_transaction &rArr; usbd_ep_rx
</UL>
<BR>[Calls]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_rx
</UL>
<BR>[Called By]<UL><LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_intf_lpst
</UL>

<P><STRONG><a name="[24d]"></a>usbd_rx_count_get</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, usbd_core.o(i.usbd_rx_count_get))
<BR><BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cdc_acm_data_handler
</UL>

<P><STRONG><a name="[595]"></a>usbd_setup_request_parse</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, usbd_std.o(i.usbd_setup_request_parse))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usbd_setup_request_parse
</UL>
<BR>[Called By]<UL><LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_setup_transaction
</UL>

<P><STRONG><a name="[58c]"></a>usbd_setup_transaction</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, usbd_std.o(i.usbd_setup_transaction))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = usbd_setup_transaction &rArr; usbd_device_class_request &rArr; usbd_enum_error &rArr; usbd_ep_stall
</UL>
<BR>[Calls]<UL><LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_vendor_request
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_standard_request
<LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_setup_request_parse
<LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_device_class_request
<LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_stall
</UL>
<BR>[Called By]<UL><LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_intf_lpst
</UL>

<P><STRONG><a name="[596]"></a>usbd_standard_request</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, usbd_std.o(i.usbd_standard_request))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = usbd_standard_request
</UL>
<BR>[Called By]<UL><LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_setup_transaction
</UL>

<P><STRONG><a name="[58f]"></a>usbd_suspend</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, usbd_pwr.o(i.usbd_suspend))
<BR><BR>[Called By]<UL><LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_intf_suspend
</UL>

<P><STRONG><a name="[597]"></a>usbd_vendor_request</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usbd_std.o(i.usbd_vendor_request))
<BR><BR>[Called By]<UL><LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_setup_transaction
</UL>

<P><STRONG><a name="[27a]"></a>write_command</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, st7789.o(i.write_command))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = write_command &rArr; st7789_write_bus
</UL>
<BR>[Calls]<UL><LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7789_write_bus
</UL>
<BR>[Called By]<UL><LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7789_dir
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_region
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7789_init
</UL>

<P><STRONG><a name="[55b]"></a>write_data</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, st7789.o(i.write_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = write_data &rArr; st7789_write_bus
</UL>
<BR>[Calls]<UL><LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7789_write_bus
</UL>
<BR>[Called By]<UL><LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7789_dir
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7789_init
</UL>

<P><STRONG><a name="[266]"></a>write_datas</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, st7789.o(i.write_datas))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = write_datas &rArr; st7789_write_bus
</UL>
<BR>[Calls]<UL><LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7789_write_bus
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_region
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear
</UL>

<P><STRONG><a name="[111]"></a>_get_lc_numeric</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lc_numeric_c.o(locale$$code))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _get_lc_numeric
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_numeric_2
</UL>

<P><STRONG><a name="[557]"></a>__aeabi_d2f</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, d2f.o(x$fpl$d2f))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;series
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strifica
</UL>

<P><STRONG><a name="[599]"></a>_d2f</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, d2f.o(x$fpl$d2f), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[59f]"></a>__fpl_dcmp_Inf</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, dcmpi.o(x$fpl$dcmpinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
</UL>

<P><STRONG><a name="[556]"></a>__aeabi_ddiv</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, ddiv.o(x$fpl$ddiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;series
</UL>

<P><STRONG><a name="[59c]"></a>_ddiv</STRONG> (Thumb, 552 bytes, Stack size 32 bytes, ddiv.o(x$fpl$ddiv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[59d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[561]"></a>__aeabi_cdcmple</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dleqf.o(x$fpl$dleqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_cdcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strified
</UL>

<P><STRONG><a name="[59e]"></a>_dcmple</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, dleqf.o(x$fpl$dleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_Inf
</UL>

<P><STRONG><a name="[5a1]"></a>__fpl_dcmple_InfNaN</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, dleqf.o(x$fpl$dleqf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drcmple
</UL>

<P><STRONG><a name="[59b]"></a>__fpl_dnaninf</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, dnaninf.o(x$fpl$dnaninf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
<LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
</UL>

<P><STRONG><a name="[59d]"></a>__fpl_dretinf</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dretinf.o(x$fpl$dretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d
<LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
</UL>

<P><STRONG><a name="[558]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, drleqf.o(x$fpl$drleqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strified
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;series
</UL>

<P><STRONG><a name="[5a0]"></a>_drcmple</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, drleqf.o(x$fpl$drleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmple_InfNaN
</UL>

<P><STRONG><a name="[555]"></a>__aeabi_f2d</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, f2d.o(x$fpl$f2d))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_f2d
</UL>
<BR>[Called By]<UL><LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strified
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;series
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strifica
</UL>

<P><STRONG><a name="[5a2]"></a>_f2d</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, f2d.o(x$fpl$f2d), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
<LI><a href="#[59d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
</UL>

<P><STRONG><a name="[1f0]"></a>__aeabi_fadd</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, faddsub_clz.o(x$fpl$fadd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kalman_filte
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;average_filte
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update
</UL>

<P><STRONG><a name="[5a4]"></a>_fadd</STRONG> (Thumb, 196 bytes, Stack size 16 bytes, faddsub_clz.o(x$fpl$fadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
<LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub1
</UL>

<P><STRONG><a name="[1f1]"></a>__aeabi_fdiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, fdiv.o(x$fpl$fdiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;average_filte
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update
</UL>

<P><STRONG><a name="[5a6]"></a>_fdiv</STRONG> (Thumb, 384 bytes, Stack size 16 bytes, fdiv.o(x$fpl$fdiv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>

<P><STRONG><a name="[147]"></a>__aeabi_i2f</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$fflt))
<BR><BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Shunt_voltage
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Shunt_Current
</UL>

<P><STRONG><a name="[5e2]"></a>_fflt</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$fflt), UNUSED)

<P><STRONG><a name="[141]"></a>__aeabi_ui2f</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$ffltu))
<BR><BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Power
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Bus_Voltage
</UL>

<P><STRONG><a name="[5e3]"></a>_ffltu</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$ffltu), UNUSED)

<P><STRONG><a name="[142]"></a>__aeabi_fmul</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, fmul.o(x$fpl$fmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kalman_filte
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INA226_Update
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Shunt_voltage
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Shunt_Current
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Power
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Bus_Voltage
</UL>

<P><STRONG><a name="[5a7]"></a>_fmul</STRONG> (Thumb, 258 bytes, Stack size 16 bytes, fmul.o(x$fpl$fmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>

<P><STRONG><a name="[5a3]"></a>__fpl_fnaninf</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, fnaninf.o(x$fpl$fnaninf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fmul
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fdiv
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
<LI><a href="#[5a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d
</UL>

<P><STRONG><a name="[59a]"></a>__fpl_fretinf</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fretinf.o(x$fpl$fretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fmul
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fdiv
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
</UL>

<P><STRONG><a name="[381]"></a>__aeabi_fsub</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, faddsub_clz.o(x$fpl$fsub))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fsub
</UL>
<BR>[Called By]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kalman_filte
</UL>

<P><STRONG><a name="[5a8]"></a>_fsub</STRONG> (Thumb, 234 bytes, Stack size 16 bytes, faddsub_clz.o(x$fpl$fsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
<LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd1
</UL>

<P><STRONG><a name="[10b]"></a>_printf_fp_dec</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, printf1.o(x$fpl$printf1))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_f
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[382]"></a>key_drive_code</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, key.o(i.key_drive_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = key_drive_code
</UL>
<BR>[Calls]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_bit_get
</UL>
<BR>[Called By]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_read_event
</UL>

<P><STRONG><a name="[385]"></a>key_event_ticks</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, key.o(i.key_event_ticks))
<BR><BR>[Called By]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_read_event
</UL>

<P><STRONG><a name="[5]"></a>led1_set_state</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, led.o(i.led1_set_state))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = led1_set_state
</UL>
<BR>[Calls]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> led.o(.data)
</UL>
<P><STRONG><a name="[6]"></a>led2_set_state</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, led.o(i.led2_set_state))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = led2_set_state
</UL>
<BR>[Calls]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> led.o(.data)
</UL>
<P><STRONG><a name="[57b]"></a>usart_gpio_init</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, usart.o(i.usart_gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = usart_gpio_init &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_init
</UL>

<P><STRONG><a name="[144]"></a>INA226_GetPower</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, ina226.o(i.INA226_GetPower))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = INA226_GetPower &rArr; INA226_ReadData &rArr; ina226_i2c_read_byte &rArr; ina226_i2c_nack &rArr; ina226_sda_out_mode &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INA226_SetRegPointer
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INA226_ReadData
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Power
</UL>

<P><STRONG><a name="[146]"></a>INA226_GetShuntCurrent</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, ina226.o(i.INA226_GetShuntCurrent))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = INA226_GetShuntCurrent &rArr; INA226_ReadData &rArr; ina226_i2c_read_byte &rArr; ina226_i2c_nack &rArr; ina226_sda_out_mode &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INA226_SetRegPointer
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INA226_ReadData
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Shunt_Current
</UL>

<P><STRONG><a name="[149]"></a>INA226_GetShuntVoltage</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, ina226.o(i.INA226_GetShuntVoltage))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = INA226_GetShuntVoltage &rArr; INA226_ReadData &rArr; ina226_i2c_read_byte &rArr; ina226_i2c_nack &rArr; ina226_sda_out_mode &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INA226_SetRegPointer
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INA226_ReadData
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Shunt_voltage
</UL>

<P><STRONG><a name="[140]"></a>INA226_GetVoltage</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, ina226.o(i.INA226_GetVoltage))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = INA226_GetVoltage &rArr; INA226_ReadData &rArr; ina226_i2c_read_byte &rArr; ina226_i2c_nack &rArr; ina226_sda_out_mode &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INA226_SetRegPointer
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INA226_ReadData
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Bus_Voltage
</UL>

<P><STRONG><a name="[14c]"></a>INA226_Get_ID</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, ina226.o(i.INA226_Get_ID))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = INA226_Get_ID &rArr; INA226_ReadData &rArr; ina226_i2c_read_byte &rArr; ina226_i2c_nack &rArr; ina226_sda_out_mode &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INA226_SetRegPointer
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INA226_ReadData
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INA226_Init
</UL>

<P><STRONG><a name="[14d]"></a>INA226_Get_MID</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, ina226.o(i.INA226_Get_MID))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = INA226_Get_MID &rArr; INA226_ReadData &rArr; ina226_i2c_read_byte &rArr; ina226_i2c_nack &rArr; ina226_sda_out_mode &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INA226_SetRegPointer
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INA226_ReadData
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INA226_Init
</UL>

<P><STRONG><a name="[14b]"></a>INA226_ReadData</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, ina226.o(i.INA226_ReadData))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = INA226_ReadData &rArr; ina226_i2c_read_byte &rArr; ina226_i2c_nack &rArr; ina226_sda_out_mode &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_i2c_wait_ack
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_i2c_stop
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_i2c_start
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_i2c_send_byte
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_i2c_read_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INA226_Get_MID
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INA226_Get_ID
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INA226_GetVoltage
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INA226_GetShuntVoltage
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INA226_GetShuntCurrent
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INA226_GetPower
</UL>

<P><STRONG><a name="[150]"></a>INA226_SendData</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, ina226.o(i.INA226_SendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = INA226_SendData &rArr; ina226_i2c_wait_ack &rArr; ina226_i2c_stop &rArr; ina226_sda_out_mode &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_i2c_wait_ack
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_i2c_stop
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_i2c_start
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_i2c_send_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INA226_Init
</UL>

<P><STRONG><a name="[14a]"></a>INA226_SetRegPointer</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, ina226.o(i.INA226_SetRegPointer))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = INA226_SetRegPointer &rArr; ina226_i2c_wait_ack &rArr; ina226_i2c_stop &rArr; ina226_sda_out_mode &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_i2c_wait_ack
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_i2c_stop
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_i2c_start
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_i2c_send_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INA226_Get_MID
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INA226_Get_ID
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INA226_GetVoltage
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INA226_GetShuntVoltage
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INA226_GetShuntCurrent
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INA226_GetPower
</UL>

<P><STRONG><a name="[34e]"></a>ina226_sleep_us</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, ina226_i2c.o(i.ina226_sleep_us))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ina226_sleep_us
</UL>
<BR>[Called By]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_i2c_nack
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_i2c_ack
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_i2c_wait_ack
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_i2c_stop
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_i2c_start
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_i2c_send_byte
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_i2c_read_byte
</UL>

<P><STRONG><a name="[54d]"></a>update</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, qflow.o(i.update))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = update &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qflow_work
</UL>

<P><STRONG><a name="[1ef]"></a>average_filte</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, kalman.o(i.average_filte))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = average_filte &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avg_filte_work
</UL>

<P><STRONG><a name="[34b]"></a>kalman_filte</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, kalman.o(i.kalman_filte))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = kalman_filte &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_filte_work
</UL>

<P><STRONG><a name="[56f]"></a>system_clock_96m_hxtal</STRONG> (Thumb, 182 bytes, Stack size 0 bytes, system_gd32f10x.o(i.system_clock_96m_hxtal))
<BR><BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[157]"></a>system_clock_config</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_gd32f10x.o(i.system_clock_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = system_clock_config
</UL>
<BR>[Calls]<UL><LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_96m_hxtal
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[593]"></a>usbd_intf_esof</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, usbd_int.o(i.usbd_intf_esof))
<BR><BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_isr
</UL>

<P><STRONG><a name="[58a]"></a>usbd_intf_lpst</STRONG> (Thumb, 340 bytes, Stack size 32 bytes, usbd_int.o(i.usbd_intf_lpst))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = usbd_intf_lpst &rArr; usbd_setup_transaction &rArr; usbd_device_class_request &rArr; usbd_enum_error &rArr; usbd_ep_stall
</UL>
<BR>[Calls]<UL><LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_setup_transaction
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_out_transaction
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_in_transaction
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_rx
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_data_read
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_isr
</UL>

<P><STRONG><a name="[594]"></a>usbd_intf_reset</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, usbd_int.o(i.usbd_intf_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usbd_intf_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_isr
</UL>

<P><STRONG><a name="[592]"></a>usbd_intf_sof</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, usbd_int.o(i.usbd_intf_sof))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usbd_intf_sof
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_isr
</UL>

<P><STRONG><a name="[58e]"></a>usbd_intf_suspend</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, usbd_int.o(i.usbd_intf_suspend))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usbd_intf_suspend
</UL>
<BR>[Calls]<UL><LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_suspend
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_isr
</UL>

<P><STRONG><a name="[590]"></a>usbd_intf_wakeup</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, usbd_int.o(i.usbd_intf_wakeup))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usbd_intf_wakeup
</UL>
<BR>[Calls]<UL><LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resume_mcu
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_isr
</UL>

<P><STRONG><a name="[c]"></a>usbd_clearfeature</STRONG> (Thumb, 280 bytes, Stack size 16 bytes, usbd_std.o(i.usbd_clearfeature))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = usbd_clearfeature &rArr; usbd_enum_error &rArr; usbd_ep_stall
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_enum_error
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_clear_stall
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_std.o(.data)
</UL>
<P><STRONG><a name="[18]"></a>usbd_configuration_descriptor_get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, usbd_std.o(i.usbd_configuration_descriptor_get))
<BR>[Address Reference Count : 1]<UL><LI> usbd_std.o(.data)
</UL>
<P><STRONG><a name="[17]"></a>usbd_device_descriptor_get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, usbd_std.o(i.usbd_device_descriptor_get))
<BR>[Address Reference Count : 1]<UL><LI> usbd_std.o(.data)
</UL>
<P><STRONG><a name="[12]"></a>usbd_getconfiguration</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, usbd_std.o(i.usbd_getconfiguration))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = usbd_getconfiguration &rArr; usbd_ep_tx &rArr; usbd_ep_data_write
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_enum_error
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_tx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_std.o(.data)
</UL>
<P><STRONG><a name="[10]"></a>usbd_getdescriptor</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, usbd_std.o(i.usbd_getdescriptor))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = usbd_getdescriptor &rArr; usbd_ep_tx &rArr; usbd_ep_data_write
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_enum_error
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_tx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_std.o(.data)
</UL>
<P><STRONG><a name="[14]"></a>usbd_getinterface</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, usbd_std.o(i.usbd_getinterface))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = usbd_getinterface &rArr; usbd_enum_error &rArr; usbd_ep_stall
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_enum_error
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_std.o(.data)
</UL>
<P><STRONG><a name="[b]"></a>usbd_getstatus</STRONG> (Thumb, 250 bytes, Stack size 24 bytes, usbd_std.o(i.usbd_getstatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = usbd_getstatus &rArr; usbd_ep_tx &rArr; usbd_ep_data_write
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_enum_error
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_tx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_std.o(.data)
</UL>
<P><STRONG><a name="[d]"></a>usbd_reserved</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbd_std.o(i.usbd_reserved))
<BR>[Address Reference Count : 1]<UL><LI> usbd_std.o(.data)
</UL>
<P><STRONG><a name="[f]"></a>usbd_setaddress</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, usbd_std.o(i.usbd_setaddress))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = usbd_setaddress &rArr; usbd_enum_error &rArr; usbd_ep_stall
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_enum_error
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_std.o(.data)
</UL>
<P><STRONG><a name="[13]"></a>usbd_setconfiguration</STRONG> (Thumb, 328 bytes, Stack size 16 bytes, usbd_std.o(i.usbd_setconfiguration))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = usbd_setconfiguration &rArr; usbd_enum_error &rArr; usbd_ep_stall
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_enum_error
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_std.o(.data)
</UL>
<P><STRONG><a name="[11]"></a>usbd_setdescriptor</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbd_std.o(i.usbd_setdescriptor))
<BR>[Address Reference Count : 1]<UL><LI> usbd_std.o(.data)
</UL>
<P><STRONG><a name="[e]"></a>usbd_setfeature</STRONG> (Thumb, 242 bytes, Stack size 16 bytes, usbd_std.o(i.usbd_setfeature))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = usbd_setfeature &rArr; usbd_enum_error &rArr; usbd_ep_stall
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_enum_error
<LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_stall
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_std.o(.data)
</UL>
<P><STRONG><a name="[15]"></a>usbd_setinterface</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, usbd_std.o(i.usbd_setinterface))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = usbd_setinterface &rArr; usbd_enum_error &rArr; usbd_ep_stall
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_enum_error
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_std.o(.data)
</UL>
<P><STRONG><a name="[19]"></a>usbd_string_descriptor_get</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, usbd_std.o(i.usbd_string_descriptor_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usbd_string_descriptor_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_std.o(.data)
</UL>
<P><STRONG><a name="[16]"></a>usbd_synchframe</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbd_std.o(i.usbd_synchframe))
<BR>[Address Reference Count : 1]<UL><LI> usbd_std.o(.data)
</UL>
<P><STRONG><a name="[aa]"></a>disp_flush</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, lv_port_disp.o(i.disp_flush))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = disp_flush &rArr; display_region &rArr; write_datas &rArr; st7789_write_bus
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_region
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ST7789_DATA_OUT
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_flush_ready
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_port_disp.o(i.lv_port_disp_init)
</UL>
<P><STRONG><a name="[4b5]"></a>disp_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lv_port_disp.o(i.disp_init))
<BR><BR>[Called By]<UL><LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_port_disp_init
</UL>

<P><STRONG><a name="[38a]"></a>keypad_get_key</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, lv_port_indev.o(i.keypad_get_key))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = keypad_get_key
</UL>
<BR>[Calls]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_bit_get
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keypad_read
</UL>

<P><STRONG><a name="[4b7]"></a>keypad_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lv_port_indev.o(i.keypad_init))
<BR><BR>[Called By]<UL><LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_port_indev_init
</UL>

<P><STRONG><a name="[ab]"></a>keypad_read</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, lv_port_indev.o(i.keypad_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = keypad_read &rArr; keypad_get_key
</UL>
<BR>[Calls]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mouse_get_xy
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keypad_get_key
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_port_indev.o(i.lv_port_indev_init)
</UL>
<P><STRONG><a name="[38b]"></a>mouse_get_xy</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_port_indev.o(i.mouse_get_xy))
<BR><BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keypad_read
</UL>

<P><STRONG><a name="[310]"></a>event_is_bubbled</STRONG> (Thumb, 138 bytes, Stack size 8 bytes, lv_event.o(i.event_is_bubbled))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = event_is_bubbled
</UL>
<BR>[Calls]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag
</UL>
<BR>[Called By]<UL><LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
</UL>

<P><STRONG><a name="[311]"></a>event_send_core</STRONG> (Thumb, 318 bytes, Stack size 24 bytes, lv_event.o(i.event_send_core))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + In Cycle
<LI>Call Chain = event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_act
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event_base
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_event_dsc
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_is_bubbled
</UL>
<BR>[Called By]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
</UL>

<P><STRONG><a name="[312]"></a>lv_obj_get_event_dsc</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, lv_event.o(i.lv_obj_get_event_dsc))
<BR><BR>[Called By]<UL><LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
</UL>

<P><STRONG><a name="[322]"></a>focus_next_core</STRONG> (Thumb, 274 bytes, Stack size 48 bytes, lv_group.o(i.focus_next_core))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = focus_next_core &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; _lv_inv_area &rArr; _lv_area_is_in &rArr; _lv_area_is_point_on &rArr;  _lv_area_is_point_on (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_state
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_indev
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag
</UL>
<BR>[Called By]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_focus_prev
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_focus_next
</UL>

<P><STRONG><a name="[323]"></a>get_indev</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, lv_group.o(i.get_indev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = get_indev &rArr; lv_indev_get_next
</UL>
<BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_type
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_next
</UL>
<BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_set_editing
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_remove_obj
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_remove_all_objs
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_focus_obj
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_next_core
</UL>

<P><STRONG><a name="[414]"></a>lv_group_refocus</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lv_group.o(i.lv_group_refocus))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = lv_group_refocus &rArr; lv_group_focus_prev &rArr; focus_next_core &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; _lv_inv_area &rArr; _lv_area_is_in &rArr; _lv_area_is_point_on &rArr;  _lv_area_is_point_on (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_focus_prev
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_focus_next
</UL>
<BR>[Called By]<UL><LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_remove_obj
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_add_obj
</UL>

<P><STRONG><a name="[353]"></a>indev_button_proc</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, lv_indev.o(i.indev_button_proc))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = indev_button_proc &rArr; indev_proc_press &rArr; _lv_indev_scroll_throw_handler &rArr; lv_obj_scroll_by &rArr; lv_anim_start &rArr; _lv_ll_ins_head &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_reset_check
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_proc_release
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_proc_press
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_read_timer_cb
</UL>

<P><STRONG><a name="[357]"></a>indev_click_focus</STRONG> (Thumb, 264 bytes, Stack size 16 bytes, lv_indev.o(i.indev_click_focus))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = indev_click_focus &rArr; lv_group_focus_obj &rArr; lv_group_set_editing &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; _lv_inv_area &rArr; _lv_area_is_in &rArr; _lv_area_is_point_on &rArr;  _lv_area_is_point_on (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_reset_check
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_group
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_focus_obj
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag
</UL>
<BR>[Called By]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_proc_press
</UL>

<P><STRONG><a name="[359]"></a>indev_encoder_proc</STRONG> (Thumb, 1036 bytes, Stack size 32 bytes, lv_indev.o(i.indev_encoder_proc))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = indev_encoder_proc &rArr; lv_obj_clear_state &rArr; lv_obj_set_state &rArr; _lv_obj_style_create_transition &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_get
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_elaps
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_editable
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_state
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_reset_check
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_set_editing
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_send_data
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_get_obj_count
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_get_focused
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_get_editing
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_focus_prev
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_focus_next
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_read_timer_cb
</UL>

<P><STRONG><a name="[362]"></a>indev_gesture</STRONG> (Thumb, 362 bytes, Stack size 16 bytes, lv_indev.o(i.indev_gesture))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = indev_gesture &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_reset_check
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag
</UL>
<BR>[Called By]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_proc_press
</UL>

<P><STRONG><a name="[363]"></a>indev_keypad_proc</STRONG> (Thumb, 650 bytes, Stack size 24 bytes, lv_indev.o(i.indev_keypad_proc))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = indev_keypad_proc &rArr; lv_group_focus_prev &rArr; focus_next_core &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; _lv_inv_area &rArr; _lv_area_is_in &rArr; _lv_area_is_point_on &rArr;  _lv_area_is_point_on (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_get
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_elaps
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_reset_check
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_set_editing
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_send_data
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_get_focused
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_focus_prev
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_focus_next
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_read_timer_cb
</UL>

<P><STRONG><a name="[364]"></a>indev_pointer_proc</STRONG> (Thumb, 260 bytes, Stack size 16 bytes, lv_indev.o(i.indev_pointer_proc))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = indev_pointer_proc &rArr; indev_proc_press &rArr; _lv_indev_scroll_throw_handler &rArr; lv_obj_scroll_by &rArr; lv_anim_start &rArr; _lv_ll_ins_head &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_pos
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_ver_res
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_hor_res
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_proc_release
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_proc_press
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_read_timer_cb
</UL>

<P><STRONG><a name="[356]"></a>indev_proc_press</STRONG> (Thumb, 696 bytes, Stack size 24 bytes, lv_indev.o(i.indev_proc_press))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = indev_proc_press &rArr; _lv_indev_scroll_throw_handler &rArr; lv_obj_scroll_by &rArr; lv_anim_start &rArr; _lv_ll_ins_head &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_scr_act
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_get
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_elaps
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_layer_top
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_layer_sys
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_scroll_throw_handler
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_scroll_handler
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_search_obj
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_reset_check
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_gesture
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_click_focus
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag
</UL>
<BR>[Called By]<UL><LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_pointer_proc
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_button_proc
</UL>

<P><STRONG><a name="[354]"></a>indev_proc_release</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, lv_indev.o(i.indev_proc_release))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = indev_proc_release &rArr; _lv_indev_scroll_throw_handler &rArr; lv_obj_scroll_by &rArr; lv_anim_start &rArr; _lv_ll_ins_head &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_scroll_throw_handler
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_reset_check
</UL>
<BR>[Called By]<UL><LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_pointer_proc
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_button_proc
</UL>

<P><STRONG><a name="[421]"></a>indev_proc_reset_query_handler</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, lv_indev.o(i.indev_proc_reset_query_handler))
<BR><BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_read_timer_cb
</UL>

<P><STRONG><a name="[355]"></a>indev_reset_check</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lv_indev.o(i.indev_reset_check))
<BR><BR>[Called By]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_proc_release
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_proc_press
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_keypad_proc
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_gesture
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_encoder_proc
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_click_focus
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_button_proc
</UL>

<P><STRONG><a name="[19b]"></a>elastic_diff</STRONG> (Thumb, 472 bytes, Stack size 48 bytes, lv_indev_scroll.o(i.elastic_diff))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = elastic_diff &rArr; lv_obj_get_style_pad_top &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_obj_act
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_snap_y
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_snap_x
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_width
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_height
</UL>
<BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_scroll_throw_handler
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_scroll_handler
</UL>

<P><STRONG><a name="[196]"></a>find_scroll_obj</STRONG> (Thumb, 540 bytes, Stack size 72 bytes, lv_indev_scroll.o(i.find_scroll_obj))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = find_scroll_obj &rArr; lv_obj_get_scroll_left &rArr; lv_obj_get_style_pad_right &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_act
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_top
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_right
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_dir
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_bottom
</UL>
<BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_scroll_handler
</UL>

<P><STRONG><a name="[1a9]"></a>find_snap_point_x</STRONG> (Thumb, 302 bytes, Stack size 64 bytes, lv_indev_scroll.o(i.find_snap_point_x))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = find_snap_point_x &rArr; lv_obj_get_style_pad_right &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_cnt
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag_any
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_snap_x
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_width
</UL>
<BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_scroll_throw_handler
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_scroll_limits
</UL>

<P><STRONG><a name="[1a7]"></a>find_snap_point_y</STRONG> (Thumb, 302 bytes, Stack size 64 bytes, lv_indev_scroll.o(i.find_snap_point_y))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = find_snap_point_y &rArr; lv_obj_get_style_pad_top &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_cnt
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag_any
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_snap_y
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_height
</UL>
<BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_scroll_throw_handler
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_scroll_limits
</UL>

<P><STRONG><a name="[197]"></a>init_scroll_limits</STRONG> (Thumb, 416 bytes, Stack size 24 bytes, lv_indev_scroll.o(i.init_scroll_limits))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = init_scroll_limits &rArr; find_snap_point_y &rArr; lv_obj_get_style_pad_top &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_set
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_snap_y
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_snap_x
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_width
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_height
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_snap_point_y
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_snap_point_x
</UL>
<BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_scroll_handler
</UL>

<P><STRONG><a name="[30c]"></a>lv_area_get_height</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lv_indev_scroll.o(i.lv_area_get_height))
<BR><BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_scroll_limits
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_snap_point_y
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;elastic_diff
</UL>

<P><STRONG><a name="[309]"></a>lv_area_get_width</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lv_indev_scroll.o(i.lv_area_get_width))
<BR><BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_scroll_limits
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_snap_point_x
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;elastic_diff
</UL>

<P><STRONG><a name="[30b]"></a>lv_obj_get_style_pad_bottom</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_indev_scroll.o(i.lv_obj_get_style_pad_bottom))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_pad_bottom &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_snap_point_y
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;elastic_diff
</UL>

<P><STRONG><a name="[307]"></a>lv_obj_get_style_pad_left</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_indev_scroll.o(i.lv_obj_get_style_pad_left))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_pad_left &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_snap_point_x
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;elastic_diff
</UL>

<P><STRONG><a name="[308]"></a>lv_obj_get_style_pad_right</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_indev_scroll.o(i.lv_obj_get_style_pad_right))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_pad_right &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_snap_point_x
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;elastic_diff
</UL>

<P><STRONG><a name="[30a]"></a>lv_obj_get_style_pad_top</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_indev_scroll.o(i.lv_obj_get_style_pad_top))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_pad_top &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_snap_point_y
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;elastic_diff
</UL>

<P><STRONG><a name="[19f]"></a>scroll_limit_diff</STRONG> (Thumb, 120 bytes, Stack size 8 bytes, lv_indev_scroll.o(i.scroll_limit_diff))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = scroll_limit_diff
</UL>
<BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_scroll_throw_handler
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_scroll_handler
</UL>

<P><STRONG><a name="[1a8]"></a>scroll_throw_predict_x</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, lv_indev_scroll.o(i.scroll_throw_predict_x))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = scroll_throw_predict_x
</UL>
<BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_act
</UL>
<BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_scroll_throw_handler
</UL>

<P><STRONG><a name="[1a6]"></a>scroll_throw_predict_y</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, lv_indev_scroll.o(i.scroll_throw_predict_y))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = scroll_throw_predict_y
</UL>
<BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_act
</UL>
<BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_scroll_throw_handler
</UL>

<P><STRONG><a name="[2ff]"></a>draw_scrollbar</STRONG> (Thumb, 172 bytes, Stack size 160 bytes, lv_obj.o(i.draw_scrollbar))
<BR><BR>[Stack]<UL><LI>Max Depth = 476<LI>Call Chain = draw_scrollbar &rArr; lv_obj_get_scrollbar_area &rArr; lv_obj_get_scroll_left &rArr; lv_obj_get_style_pad_right &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scrollbar_area
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw_dsc_init
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_size
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scrollbar_init_draw_dsc
</UL>
<BR>[Called By]<UL><LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw
</UL>

<P><STRONG><a name="[468]"></a>lv_area_copy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lv_obj.o(i.lv_area_copy))
<BR><BR>[Called By]<UL><LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw
</UL>

<P><STRONG><a name="[c6]"></a>lv_obj_constructor</STRONG> (Thumb, 190 bytes, Stack size 32 bytes, lv_obj.o(i.lv_obj_constructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = lv_obj_constructor &rArr; lv_obj_get_scroll_left &rArr; lv_obj_get_style_pad_right &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_top
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_obj.o(.constdata)
</UL>
<P><STRONG><a name="[c7]"></a>lv_obj_destructor</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, lv_obj.o(i.lv_obj_destructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = lv_obj_destructor &rArr; lv_obj_remove_style &rArr; trans_del &rArr; lv_style_remove_prop &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_style
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_group
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_remove_obj
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_event_mark_deleted
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_enable_style_refresh
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_obj.o(.constdata)
</UL>
<P><STRONG><a name="[463]"></a>lv_obj_draw</STRONG> (Thumb, 800 bytes, Stack size 176 bytes, lv_obj.o(i.lv_obj_draw))
<BR><BR>[Stack]<UL><LI>Max Depth = 652<LI>Call Chain = lv_obj_draw &rArr; draw_scrollbar &rArr; lv_obj_get_scrollbar_area &rArr; lv_obj_get_scroll_left &rArr; lv_obj_get_style_pad_right &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_param
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_draw_ctx
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_code
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw_dsc_init
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect_dsc_init
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_remove_custom
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius_init
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_free_param
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_add
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_in
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_transform_width
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_transform_height
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_radius
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_opa
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_clip_corner
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_border_post
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_bg_opa
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_copy
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_scrollbar
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
</UL>

<P><STRONG><a name="[c8]"></a>lv_obj_event</STRONG> (Thumb, 1068 bytes, Stack size 56 bytes, lv_obj.o(i.lv_obj_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 708<LI>Call Chain = lv_obj_event &rArr; lv_obj_draw &rArr; draw_scrollbar &rArr; lv_obj_get_scrollbar_area &rArr; lv_obj_get_scroll_left &rArr; lv_obj_get_style_pad_right &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_cnt
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_editable
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_state
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_scroll_obj
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_state
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_group
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_type
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_get_editing
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_act
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_param
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_indev
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_current_target
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_code
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to_y
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to_x
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to_view_recursive
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_mark_layout_as_dirty
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scrollbar_mode
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scrollbar_area
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_y
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_x
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_calculate_ext_draw_size
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_state
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_layout
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_align
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_right
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_dir
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_obj.o(.constdata)
</UL>
<P><STRONG><a name="[46f]"></a>lv_obj_get_style_align</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_obj.o(i.lv_obj_get_style_align))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_align &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
</UL>

<P><STRONG><a name="[469]"></a>lv_obj_get_style_bg_opa</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, lv_obj.o(i.lv_obj_get_style_bg_opa))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_bg_opa &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scrollbar_init_draw_dsc
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw
</UL>

<P><STRONG><a name="[46b]"></a>lv_obj_get_style_border_post</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lv_obj.o(i.lv_obj_get_style_border_post))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_border_post &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw
</UL>

<P><STRONG><a name="[464]"></a>lv_obj_get_style_clip_corner</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lv_obj.o(i.lv_obj_get_style_clip_corner))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_clip_corner &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw
</UL>

<P><STRONG><a name="[470]"></a>lv_obj_get_style_layout</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_obj.o(i.lv_obj_get_style_layout))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_layout &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
</UL>

<P><STRONG><a name="[46a]"></a>lv_obj_get_style_opa</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_obj.o(i.lv_obj_get_style_opa))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_opa &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scrollbar_init_draw_dsc
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw
</UL>

<P><STRONG><a name="[465]"></a>lv_obj_get_style_radius</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, lv_obj.o(i.lv_obj_get_style_radius))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_radius &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scrollbar_init_draw_dsc
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw
</UL>

<P><STRONG><a name="[467]"></a>lv_obj_get_style_transform_height</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_obj.o(i.lv_obj_get_style_transform_height))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_transform_height &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw
</UL>

<P><STRONG><a name="[466]"></a>lv_obj_get_style_transform_width</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_obj.o(i.lv_obj_get_style_transform_width))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_transform_width &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw
</UL>

<P><STRONG><a name="[449]"></a>lv_obj_set_state</STRONG> (Thumb, 512 bytes, Stack size 72 bytes, lv_obj.o(i.lv_obj_set_state))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = lv_obj_set_state &rArr; _lv_obj_style_create_transition &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_style_get_selector_state
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_style_get_selector_part
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_ext_draw_size
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_00
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_style_state_compare
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_style_create_transition
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_get_prop_inlined
</UL>
<BR>[Called By]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_state
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_state
</UL>

<P><STRONG><a name="[4ad]"></a>lv_style_get_prop_inlined</STRONG> (Thumb, 118 bytes, Stack size 20 bytes, lv_obj.o(i.lv_style_get_prop_inlined))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lv_style_get_prop_inlined
</UL>
<BR>[Called By]<UL><LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
</UL>

<P><STRONG><a name="[301]"></a>scrollbar_init_draw_dsc</STRONG> (Thumb, 352 bytes, Stack size 32 bytes, lv_obj.o(i.scrollbar_init_draw_dsc))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = scrollbar_init_draw_dsc &rArr; lv_obj_get_style_radius &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect_dsc_init
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_radius
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_opa
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_bg_opa
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_scrollbar
</UL>

<P><STRONG><a name="[458]"></a>get_instance_size</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, lv_obj_class.o(i.get_instance_size))
<BR><BR>[Called By]<UL><LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
</UL>

<P><STRONG><a name="[45b]"></a>lv_obj_construct</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, lv_obj_class.o(i.lv_obj_construct))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + In Cycle
<LI>Call Chain = lv_obj_construct &rArr;  lv_obj_construct (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_construct
</UL>
<BR>[Called By]<UL><LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_construct
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
</UL>

<P><STRONG><a name="[47b]"></a>lv_obj_get_style_bg_color_filtered</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, lv_obj_draw.o(i.lv_obj_get_style_bg_color_filtered))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_bg_color_filtered &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
</UL>

<P><STRONG><a name="[47c]"></a>lv_obj_get_style_blend_mode</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, lv_obj_draw.o(i.lv_obj_get_style_blend_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_blend_mode &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_label_dsc
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_img_dsc
</UL>

<P><STRONG><a name="[480]"></a>lv_obj_get_style_opa</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_obj_draw.o(i.lv_obj_get_style_opa))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_opa &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_label_dsc
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_img_dsc
</UL>

<P><STRONG><a name="[456]"></a>lv_obj_get_style_outline_opa</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_obj_draw.o(i.lv_obj_get_style_outline_opa))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_outline_opa &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_calculate_ext_draw_size
</UL>

<P><STRONG><a name="[457]"></a>lv_obj_get_style_outline_pad</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_obj_draw.o(i.lv_obj_get_style_outline_pad))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_outline_pad &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_calculate_ext_draw_size
</UL>

<P><STRONG><a name="[455]"></a>lv_obj_get_style_outline_width</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_obj_draw.o(i.lv_obj_get_style_outline_width))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_outline_width &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_calculate_ext_draw_size
</UL>

<P><STRONG><a name="[453]"></a>lv_obj_get_style_shadow_ofs_x</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_obj_draw.o(i.lv_obj_get_style_shadow_ofs_x))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_shadow_ofs_x &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_calculate_ext_draw_size
</UL>

<P><STRONG><a name="[454]"></a>lv_obj_get_style_shadow_ofs_y</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_obj_draw.o(i.lv_obj_get_style_shadow_ofs_y))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_shadow_ofs_y &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_calculate_ext_draw_size
</UL>

<P><STRONG><a name="[451]"></a>lv_obj_get_style_shadow_opa</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_obj_draw.o(i.lv_obj_get_style_shadow_opa))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_shadow_opa &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_calculate_ext_draw_size
</UL>

<P><STRONG><a name="[452]"></a>lv_obj_get_style_shadow_spread</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_obj_draw.o(i.lv_obj_get_style_shadow_spread))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_shadow_spread &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_calculate_ext_draw_size
</UL>

<P><STRONG><a name="[450]"></a>lv_obj_get_style_shadow_width</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_obj_draw.o(i.lv_obj_get_style_shadow_width))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_shadow_width &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_calculate_ext_draw_size
</UL>

<P><STRONG><a name="[486]"></a>lv_obj_get_style_text_color_filtered</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, lv_obj_draw.o(i.lv_obj_get_style_text_color_filtered))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_text_color_filtered &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_label_dsc
</UL>

<P><STRONG><a name="[487]"></a>lv_obj_get_style_text_font</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, lv_obj_draw.o(i.lv_obj_get_style_text_font))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_text_font &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_label_dsc
</UL>

<P><STRONG><a name="[21e]"></a>calc_content_height</STRONG> (Thumb, 304 bytes, Stack size 48 bytes, lv_obj_pos.o(i.calc_content_height))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = calc_content_height &rArr; lv_obj_scroll_to_y &rArr; lv_obj_scroll_by_bounded &rArr;  lv_obj_update_layout (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_cnt
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to_y
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_layout_positioned
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag_any
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_self_height
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_y
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_border_width
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_align
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_height
</UL>
<BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
</UL>

<P><STRONG><a name="[22a]"></a>calc_content_width</STRONG> (Thumb, 526 bytes, Stack size 48 bytes, lv_obj_pos.o(i.calc_content_width))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = calc_content_width &rArr; lv_obj_scroll_to_x &rArr; lv_obj_scroll_by_bounded &rArr;  lv_obj_update_layout (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_cnt
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to_x
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_layout_positioned
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag_any
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_self_width
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_y
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_x
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_border_width
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_base_dir
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_align
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_width
</UL>
<BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
</UL>

<P><STRONG><a name="[38e]"></a>layout_update_core</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, lv_obj_pos.o(i.layout_update_core))
<BR><BR>[Stack]<UL><LI>Max Depth = 584 + In Cycle
<LI>Call Chain = layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_cnt
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_pos
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_layout
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;layout_update_core
</UL>
<BR>[Called By]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_update_layout
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;layout_update_core
</UL>

<P><STRONG><a name="[44f]"></a>lv_area_copy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lv_obj_pos.o(i.lv_area_copy))
<BR><BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_coords
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_click_area
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_area_is_visible
</UL>

<P><STRONG><a name="[229]"></a>lv_area_get_height</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lv_obj_pos.o(i.lv_area_get_height))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_content_height
</UL>

<P><STRONG><a name="[231]"></a>lv_area_get_width</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lv_obj_pos.o(i.lv_area_get_width))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_content_width
</UL>

<P><STRONG><a name="[227]"></a>lv_obj_get_style_align</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_obj_pos.o(i.lv_obj_get_style_align))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_align &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_pos
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_content_width
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_content_height
</UL>

<P><STRONG><a name="[22f]"></a>lv_obj_get_style_base_dir</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_obj_pos.o(i.lv_obj_get_style_base_dir))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_base_dir &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_pos
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align_to
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_content_width
</UL>

<P><STRONG><a name="[220]"></a>lv_obj_get_style_border_width</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_obj_pos.o(i.lv_obj_get_style_border_width))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_border_width &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_to
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_y
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_width
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_height
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_coords
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align_to
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_content_width
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_content_height
</UL>

<P><STRONG><a name="[47d]"></a>lv_obj_get_style_height</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_obj_pos.o(i.lv_obj_get_style_height))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_height &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_self_size
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
</UL>

<P><STRONG><a name="[390]"></a>lv_obj_get_style_layout</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_obj_pos.o(i.lv_obj_get_style_layout))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_layout &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_layout_positioned
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;layout_update_core
</UL>

<P><STRONG><a name="[222]"></a>lv_obj_get_style_pad_bottom</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_obj_pos.o(i.lv_obj_get_style_pad_bottom))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_pad_bottom &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_height
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_coords
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_content_height
</UL>

<P><STRONG><a name="[22d]"></a>lv_obj_get_style_pad_left</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_obj_pos.o(i.lv_obj_get_style_pad_left))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_pad_left &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_to
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_width
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_coords
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align_to
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_content_width
</UL>

<P><STRONG><a name="[22c]"></a>lv_obj_get_style_pad_right</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_obj_pos.o(i.lv_obj_get_style_pad_right))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_pad_right &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_width
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_coords
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_content_width
</UL>

<P><STRONG><a name="[221]"></a>lv_obj_get_style_pad_top</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_obj_pos.o(i.lv_obj_get_style_pad_top))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_pad_top &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_to
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_y
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_height
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_coords
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align_to
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_content_height
</UL>

<P><STRONG><a name="[48f]"></a>lv_obj_get_style_width</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_obj_pos.o(i.lv_obj_get_style_width))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_width &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_self_size
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
</UL>

<P><STRONG><a name="[230]"></a>lv_obj_get_style_x</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_obj_pos.o(i.lv_obj_get_style_x))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_x &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_pos
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_content_width
</UL>

<P><STRONG><a name="[228]"></a>lv_obj_get_style_y</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_obj_pos.o(i.lv_obj_get_style_y))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_y &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_pos
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_content_width
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_content_height
</UL>

<P><STRONG><a name="[49e]"></a>lv_anim_set_exec_cb</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lv_obj_scroll.o(i.lv_anim_set_exec_cb))
<BR><BR>[Called By]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by
</UL>

<P><STRONG><a name="[49f]"></a>lv_anim_set_path_cb</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lv_obj_scroll.o(i.lv_anim_set_path_cb))
<BR><BR>[Called By]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by
</UL>

<P><STRONG><a name="[49c]"></a>lv_anim_set_time</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lv_obj_scroll.o(i.lv_anim_set_time))
<BR><BR>[Called By]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by
</UL>

<P><STRONG><a name="[49d]"></a>lv_anim_set_values</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_obj_scroll.o(i.lv_anim_set_values))
<BR><BR>[Called By]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by
</UL>

<P><STRONG><a name="[477]"></a>lv_obj_get_style_base_dir</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_obj_scroll.o(i.lv_obj_get_style_base_dir))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_base_dir &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scrollbar_area
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_right
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by_bounded
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_readjust_scroll
</UL>

<P><STRONG><a name="[476]"></a>lv_obj_get_style_border_width</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_obj_scroll.o(i.lv_obj_get_style_border_width))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_border_width &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_right
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_bottom
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_area_into_view
</UL>

<P><STRONG><a name="[475]"></a>lv_obj_get_style_pad_bottom</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_obj_scroll.o(i.lv_obj_get_style_pad_bottom))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_pad_bottom &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scrollbar_area
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_bottom
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_area_into_view
</UL>

<P><STRONG><a name="[479]"></a>lv_obj_get_style_pad_left</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_obj_scroll.o(i.lv_obj_get_style_pad_left))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_pad_left &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scrollbar_area
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_right
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_area_into_view
</UL>

<P><STRONG><a name="[478]"></a>lv_obj_get_style_pad_right</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_obj_scroll.o(i.lv_obj_get_style_pad_right))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_pad_right &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scrollbar_area
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_right
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_area_into_view
</UL>

<P><STRONG><a name="[474]"></a>lv_obj_get_style_pad_top</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_obj_scroll.o(i.lv_obj_get_style_pad_top))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_pad_top &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scrollbar_area
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_bottom
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_area_into_view
</UL>

<P><STRONG><a name="[a6]"></a>scroll_anim_ready_cb</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lv_obj_scroll.o(i.scroll_anim_ready_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = scroll_anim_ready_cb &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_obj_scroll.o(i.lv_obj_scroll_by)
</UL>
<P><STRONG><a name="[4a2]"></a>scroll_area_into_view</STRONG> (Thumb, 866 bytes, Stack size 120 bytes, lv_obj_scroll.o(i.scroll_area_into_view))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = scroll_area_into_view &rArr; lv_obj_scroll_by &rArr; lv_anim_start &rArr; _lv_ll_ins_head &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_top
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_snap_y
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_snap_x
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_right
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_dir
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_bottom
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_border_width
</UL>
<BR>[Called By]<UL><LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to_view_recursive
</UL>

<P><STRONG><a name="[4a0]"></a>scroll_by_raw</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, lv_obj_scroll.o(i.scroll_by_raw))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = scroll_by_raw &rArr; lv_obj_allocate_spec_attr &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_spec_attr
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_children_by
</UL>
<BR>[Called By]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_y_anim
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_x_anim
</UL>

<P><STRONG><a name="[a7]"></a>scroll_x_anim</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, lv_obj_scroll.o(i.scroll_x_anim))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = scroll_x_anim &rArr; scroll_by_raw &rArr; lv_obj_allocate_spec_attr &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_x
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_by_raw
</UL>
<BR>[Address Reference Count : 3]<UL><LI> lv_obj_scroll.o(i.lv_obj_scroll_by)
<LI> lv_obj_scroll.o(i.lv_obj_scroll_to_x)
<LI> lv_obj_scroll.o(i.scroll_area_into_view)
</UL>
<P><STRONG><a name="[a9]"></a>scroll_y_anim</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, lv_obj_scroll.o(i.scroll_y_anim))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = scroll_y_anim &rArr; scroll_by_raw &rArr; lv_obj_allocate_spec_attr &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_y
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_by_raw
</UL>
<BR>[Address Reference Count : 3]<UL><LI> lv_obj_scroll.o(i.lv_obj_scroll_by)
<LI> lv_obj_scroll.o(i.lv_obj_scroll_to_y)
<LI> lv_obj_scroll.o(i.scroll_area_into_view)
</UL>
<P><STRONG><a name="[1e9]"></a>apply_color_filter</STRONG> (Thumb, 88 bytes, Stack size 40 bytes, lv_obj_style.o(i.apply_color_filter))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + In Cycle
<LI>Call Chain = apply_color_filter &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>

<P><STRONG><a name="[332]"></a>get_local_style</STRONG> (Thumb, 262 bytes, Stack size 16 bytes, lv_obj_style.o(i.get_local_style))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = get_local_style &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_00
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_init
</UL>
<BR>[Called By]<UL><LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[339]"></a>get_prop_core</STRONG> (Thumb, 330 bytes, Stack size 64 bytes, lv_obj_style.o(i.get_prop_core))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_style_get_selector_state
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_style_get_selector_part
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_get_prop
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_get_prop_group
</UL>
<BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>

<P><STRONG><a name="[1b9]"></a>get_trans_style</STRONG> (Thumb, 196 bytes, Stack size 16 bytes, lv_obj_style.o(i.get_trans_style))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = get_trans_style &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_00
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_init
</UL>
<BR>[Called By]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_style_create_transition
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_start_cb
</UL>

<P><STRONG><a name="[1c1]"></a>lv_anim_set_delay</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_obj_style.o(i.lv_anim_set_delay))
<BR><BR>[Called By]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_style_create_transition
</UL>

<P><STRONG><a name="[1bd]"></a>lv_anim_set_exec_cb</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lv_obj_style.o(i.lv_anim_set_exec_cb))
<BR><BR>[Called By]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_style_create_transition
</UL>

<P><STRONG><a name="[1be]"></a>lv_anim_set_ready_cb</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lv_obj_style.o(i.lv_anim_set_ready_cb))
<BR><BR>[Called By]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_style_create_transition
</UL>

<P><STRONG><a name="[1c0]"></a>lv_anim_set_time</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lv_obj_style.o(i.lv_anim_set_time))
<BR><BR>[Called By]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_style_create_transition
</UL>

<P><STRONG><a name="[1bf]"></a>lv_anim_set_values</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_obj_style.o(i.lv_anim_set_values))
<BR><BR>[Called By]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_style_create_transition
</UL>

<P><STRONG><a name="[1bc]"></a>lv_anim_set_var</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lv_obj_style.o(i.lv_anim_set_var))
<BR><BR>[Called By]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_style_create_transition
</UL>

<P><STRONG><a name="[496]"></a>refresh_children_style</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, lv_obj_style.o(i.refresh_children_style))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + In Cycle
<LI>Call Chain = refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_cnt
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refresh_children_style
</UL>
<BR>[Called By]<UL><LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refresh_children_style
</UL>

<P><STRONG><a name="[49b]"></a>report_style_change_core</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, lv_obj_style.o(i.report_style_change_core))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + In Cycle
<LI>Call Chain = report_style_change_core &rArr;  report_style_change_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_cnt
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_style_change_core
</UL>
<BR>[Called By]<UL><LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_report_style_change
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_style_change_core
</UL>

<P><STRONG><a name="[71]"></a>trans_anim_cb</STRONG> (Thumb, 470 bytes, Stack size 56 bytes, lv_obj_style.o(i.trans_anim_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = trans_anim_cb &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_get_prop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_obj_style.o(i._lv_obj_style_create_transition)
</UL>
<P><STRONG><a name="[73]"></a>trans_anim_ready_cb</STRONG> (Thumb, 204 bytes, Stack size 40 bytes, lv_obj_style.o(i.trans_anim_ready_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = trans_anim_ready_cb &rArr; lv_obj_remove_style &rArr; trans_del &rArr; lv_style_remove_prop &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_style
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_remove
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_remove_prop
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_is_empty
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_obj_style.o(i._lv_obj_style_create_transition)
</UL>
<P><STRONG><a name="[72]"></a>trans_anim_start_cb</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, lv_obj_style.o(i.trans_anim_start_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = trans_anim_start_cb &rArr; trans_del &rArr; lv_style_remove_prop &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_style_get_selector_part
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_del
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_trans_style
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_obj_style.o(i._lv_obj_style_create_transition)
</UL>
<P><STRONG><a name="[44a]"></a>trans_del</STRONG> (Thumb, 180 bytes, Stack size 40 bytes, lv_obj_style.o(i.trans_del))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = trans_del &rArr; lv_style_remove_prop &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_remove
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_tail
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_prev
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_remove_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_style
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_style
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_start_cb
</UL>

<P><STRONG><a name="[a5]"></a>lv_obj_del_async_cb</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lv_obj_tree.o(i.lv_obj_del_async_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = lv_obj_del_async_cb &rArr; lv_obj_del &rArr; lv_obj_readjust_scroll &rArr; lv_obj_scroll_by &rArr; lv_anim_start &rArr; _lv_ll_ins_head &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_obj_tree.o(i.lv_obj_del_async)
</UL>
<P><STRONG><a name="[45f]"></a>obj_del_core</STRONG> (Thumb, 334 bytes, Stack size 40 bytes, lv_obj_tree.o(i.obj_del_core))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + In Cycle
<LI>Call Chain = obj_del_core &rArr;  obj_del_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_disp
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_reset
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_obj_act
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_group
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_next
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_destruct
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_index
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_del_core
</UL>
<BR>[Called By]<UL><LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_del_core
</UL>

<P><STRONG><a name="[2a2]"></a>call_flush_cb</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, lv_refr.o(i.call_flush_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = call_flush_cb
</UL>
<BR>[Called By]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_buf_rotate
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_buf_flush
</UL>

<P><STRONG><a name="[178]"></a>draw_buf_flush</STRONG> (Thumb, 218 bytes, Stack size 24 bytes, lv_refr.o(i.draw_buf_flush))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = draw_buf_flush &rArr; draw_buf_rotate &rArr; lv_mem_buf_get &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_draw_buf
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_buf_rotate
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;call_flush_cb
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area_part
</UL>

<P><STRONG><a name="[2a1]"></a>draw_buf_rotate</STRONG> (Thumb, 554 bytes, Stack size 56 bytes, lv_refr.o(i.draw_buf_rotate))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = draw_buf_rotate &rArr; lv_mem_buf_get &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_draw_buf
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_width
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_height
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_buf_rotate_90_sqr
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_buf_rotate_90
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_buf_rotate_180
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;call_flush_cb
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_buf_flush
</UL>

<P><STRONG><a name="[2a8]"></a>draw_buf_rotate4</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, lv_refr.o(i.draw_buf_rotate4))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = draw_buf_rotate4
</UL>
<BR>[Called By]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_buf_rotate_90_sqr
</UL>

<P><STRONG><a name="[2a3]"></a>draw_buf_rotate_180</STRONG> (Thumb, 142 bytes, Stack size 48 bytes, lv_refr.o(i.draw_buf_rotate_180))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = draw_buf_rotate_180
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_width
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_height
</UL>
<BR>[Called By]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_buf_rotate
</UL>

<P><STRONG><a name="[2a7]"></a>draw_buf_rotate_90</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, lv_refr.o(i.draw_buf_rotate_90))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = draw_buf_rotate_90
</UL>
<BR>[Called By]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_buf_rotate
</UL>

<P><STRONG><a name="[2a6]"></a>draw_buf_rotate_90_sqr</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, lv_refr.o(i.draw_buf_rotate_90_sqr))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = draw_buf_rotate_90_sqr &rArr; draw_buf_rotate4
</UL>
<BR>[Calls]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_buf_rotate4
</UL>
<BR>[Called By]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_buf_rotate
</UL>

<P><STRONG><a name="[334]"></a>get_max_row</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, lv_refr.o(i.get_max_row))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = get_max_row
</UL>
<BR>[Calls]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_height
</UL>
<BR>[Called By]<UL><LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area
</UL>

<P><STRONG><a name="[1ad]"></a>lv_area_copy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lv_refr.o(i.lv_area_copy))
<BR><BR>[Called By]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_inv_area
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_join_area
</UL>

<P><STRONG><a name="[2a5]"></a>lv_area_get_height</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lv_refr.o(i.lv_area_get_height))
<BR><BR>[Called By]<UL><LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_max_row
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_buf_rotate_180
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_buf_rotate
</UL>

<P><STRONG><a name="[2a4]"></a>lv_area_get_width</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lv_refr.o(i.lv_area_get_width))
<BR><BR>[Called By]<UL><LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_buf_rotate_180
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_buf_rotate
</UL>

<P><STRONG><a name="[4b8]"></a>lv_refr_area</STRONG> (Thumb, 472 bytes, Stack size 64 bytes, lv_refr.o(i.lv_refr_area))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = lv_refr_area &rArr; lv_refr_area_part &rArr; lv_draw_img &rArr; decode_and_draw &rArr; show_error &rArr; lv_draw_label &rArr; lv_txt_get_size &rArr; _lv_txt_get_next_line &rArr; lv_txt_get_next_word &rArr; lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_ver_res
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_hor_res
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_set
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area_part
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_width
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_height
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_max_row
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_areas
</UL>

<P><STRONG><a name="[4b9]"></a>lv_refr_area_part</STRONG> (Thumb, 420 bytes, Stack size 80 bytes, lv_refr.o(i.lv_refr_area_part))
<BR><BR>[Stack]<UL><LI>Max Depth = 872<LI>Call Chain = lv_refr_area_part &rArr; lv_draw_img &rArr; decode_and_draw &rArr; show_error &rArr; lv_draw_label &rArr; lv_txt_get_size &rArr; _lv_txt_get_next_line &rArr; lv_txt_get_next_word &rArr; lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_scr_act
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_set
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_layer_top
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_layer_sys
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect_dsc_init
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_get_info
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img_dsc_init
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_draw_buf
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_obj_and_children
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_get_top_obj
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_buf_flush
</UL>
<BR>[Called By]<UL><LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area
</UL>

<P><STRONG><a name="[174]"></a>lv_refr_areas</STRONG> (Thumb, 232 bytes, Stack size 16 bytes, lv_refr.o(i.lv_refr_areas))
<BR><BR>[Stack]<UL><LI>Max Depth = 952<LI>Call Chain = lv_refr_areas &rArr; lv_refr_area &rArr; lv_refr_area_part &rArr; lv_draw_img &rArr; decode_and_draw &rArr; show_error &rArr; lv_draw_label &rArr; lv_txt_get_size &rArr; _lv_txt_get_next_line &rArr; lv_txt_get_next_word &rArr; lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_size
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
</UL>

<P><STRONG><a name="[4ba]"></a>lv_refr_get_top_obj</STRONG> (Thumb, 126 bytes, Stack size 40 bytes, lv_refr.o(i.lv_refr_get_top_obj))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + In Cycle
<LI>Call Chain = lv_refr_get_top_obj &rArr;  lv_refr_get_top_obj (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_cnt
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_in
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_get_top_obj
</UL>
<BR>[Called By]<UL><LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_get_top_obj
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area_part
</UL>

<P><STRONG><a name="[173]"></a>lv_refr_join_area</STRONG> (Thumb, 206 bytes, Stack size 32 bytes, lv_refr.o(i.lv_refr_join_area))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = lv_refr_join_area &rArr; lv_area_get_size
</UL>
<BR>[Calls]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_size
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_join
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_on
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
</UL>

<P><STRONG><a name="[4bb]"></a>lv_refr_obj_and_children</STRONG> (Thumb, 150 bytes, Stack size 40 bytes, lv_refr.o(i.lv_refr_obj_and_children))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = lv_refr_obj_and_children &rArr; lv_refr_obj &rArr;  lv_refr_obj (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_scr_act
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_cnt
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_obj
</UL>
<BR>[Called By]<UL><LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area_part
</UL>

<P><STRONG><a name="[1ea]"></a>apply_theme</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, lv_theme.o(i.apply_theme))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + In Cycle
<LI>Call Chain = apply_theme &rArr;  apply_theme (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apply_theme
</UL>
<BR>[Called By]<UL><LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_apply
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apply_theme
</UL>

<P><STRONG><a name="[2fb]"></a>draw_quarter_0</STRONG> (Thumb, 584 bytes, Stack size 24 bytes, lv_draw_sw_arc.o(i.draw_quarter_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = draw_quarter_0 &rArr; lv_draw_rect
</UL>
<BR>[Calls]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_trigo_sin
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_arc
</UL>

<P><STRONG><a name="[2fc]"></a>draw_quarter_1</STRONG> (Thumb, 594 bytes, Stack size 24 bytes, lv_draw_sw_arc.o(i.draw_quarter_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = draw_quarter_1 &rArr; lv_draw_rect
</UL>
<BR>[Calls]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_trigo_sin
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_arc
</UL>

<P><STRONG><a name="[2fd]"></a>draw_quarter_2</STRONG> (Thumb, 604 bytes, Stack size 24 bytes, lv_draw_sw_arc.o(i.draw_quarter_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = draw_quarter_2 &rArr; lv_draw_rect
</UL>
<BR>[Calls]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_trigo_sin
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_arc
</UL>

<P><STRONG><a name="[2fe]"></a>draw_quarter_3</STRONG> (Thumb, 594 bytes, Stack size 24 bytes, lv_draw_sw_arc.o(i.draw_quarter_3))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = draw_quarter_3 &rArr; lv_draw_rect
</UL>
<BR>[Calls]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_trigo_sin
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_arc
</UL>

<P><STRONG><a name="[33c]"></a>get_rounded_area</STRONG> (Thumb, 168 bytes, Stack size 48 bytes, lv_draw_sw_arc.o(i.get_rounded_area))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = get_rounded_area
</UL>
<BR>[Calls]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_trigo_sin
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_arc
</UL>

<P><STRONG><a name="[80]"></a>color_blend_true_color_additive</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, lv_draw_sw_blend.o(i.color_blend_true_color_additive))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = color_blend_true_color_additive &rArr; lv_color_mix
</UL>
<BR>[Calls]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_mix
</UL>
<BR>[Address Reference Count : 2]<UL><LI> lv_draw_sw_blend.o(i.fill_blended)
<LI> lv_draw_sw_blend.o(i.map_blended)
</UL>
<P><STRONG><a name="[82]"></a>color_blend_true_color_multiply</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, lv_draw_sw_blend.o(i.color_blend_true_color_multiply))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = color_blend_true_color_multiply &rArr; lv_color_mix
</UL>
<BR>[Calls]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_mix
</UL>
<BR>[Address Reference Count : 2]<UL><LI> lv_draw_sw_blend.o(i.fill_blended)
<LI> lv_draw_sw_blend.o(i.map_blended)
</UL>
<P><STRONG><a name="[81]"></a>color_blend_true_color_subtractive</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, lv_draw_sw_blend.o(i.color_blend_true_color_subtractive))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = color_blend_true_color_subtractive &rArr; lv_color_mix
</UL>
<BR>[Calls]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_mix
</UL>
<BR>[Address Reference Count : 2]<UL><LI> lv_draw_sw_blend.o(i.fill_blended)
<LI> lv_draw_sw_blend.o(i.map_blended)
</UL>
<P><STRONG><a name="[314]"></a>fill_blended</STRONG> (Thumb, 342 bytes, Stack size 80 bytes, lv_draw_sw_blend.o(i.fill_blended))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = fill_blended
</UL>
<BR>[Calls]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_width
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_height
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_blend_basic
</UL>

<P><STRONG><a name="[317]"></a>fill_normal</STRONG> (Thumb, 842 bytes, Stack size 88 bytes, lv_draw_sw_blend.o(i.fill_normal))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = fill_normal &rArr; lv_color_mix
</UL>
<BR>[Calls]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_refr_get_disp_refreshing
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_fill
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_mix_premult
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_mix
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_width
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_height
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_blend_basic
</UL>

<P><STRONG><a name="[31a]"></a>fill_set_px</STRONG> (Thumb, 188 bytes, Stack size 72 bytes, lv_draw_sw_blend.o(i.fill_set_px))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = fill_set_px
</UL>
<BR>[Calls]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_refr_get_disp_refreshing
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_width
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_height
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_blend_basic
</UL>

<P><STRONG><a name="[316]"></a>lv_area_get_height</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lv_draw_sw_blend.o(i.lv_area_get_height))
<BR><BR>[Called By]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;map_set_px
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;map_normal
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;map_blended
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_set_px
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_normal
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_blended
</UL>

<P><STRONG><a name="[315]"></a>lv_area_get_width</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lv_draw_sw_blend.o(i.lv_area_get_width))
<BR><BR>[Called By]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;map_set_px
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;map_normal
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;map_blended
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_set_px
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_normal
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_blended
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_blend_basic
</UL>

<P><STRONG><a name="[267]"></a>lv_color_mix</STRONG> (Thumb, 64 bytes, Stack size 28 bytes, lv_draw_sw_blend.o(i.lv_color_mix))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = lv_color_mix
</UL>
<BR>[Called By]<UL><LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;map_normal
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_normal
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_blend_true_color_subtractive
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_blend_true_color_multiply
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_blend_true_color_additive
</UL>

<P><STRONG><a name="[319]"></a>lv_color_mix_premult</STRONG> (Thumb, 126 bytes, Stack size 20 bytes, lv_draw_sw_blend.o(i.lv_color_mix_premult))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lv_color_mix_premult
</UL>
<BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_normal
</UL>

<P><STRONG><a name="[3e9]"></a>map_blended</STRONG> (Thumb, 264 bytes, Stack size 80 bytes, lv_draw_sw_blend.o(i.map_blended))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = map_blended
</UL>
<BR>[Calls]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_width
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_height
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_blend_basic
</UL>

<P><STRONG><a name="[3e8]"></a>map_normal</STRONG> (Thumb, 846 bytes, Stack size 72 bytes, lv_draw_sw_blend.o(i.map_normal))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = map_normal &rArr; lv_color_mix
</UL>
<BR>[Calls]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memcpy
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_mix
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_width
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_height
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_blend_basic
</UL>

<P><STRONG><a name="[3e7]"></a>map_set_px</STRONG> (Thumb, 214 bytes, Stack size 72 bytes, lv_draw_sw_blend.o(i.map_set_px))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = map_set_px
</UL>
<BR>[Calls]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_refr_get_disp_refreshing
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_width
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_height
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_blend_basic
</UL>

<P><STRONG><a name="[1e5]"></a>allocate_item</STRONG> (Thumb, 288 bytes, Stack size 40 bytes, lv_draw_sw_gradient.o(i.allocate_item))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = allocate_item &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iterate_cache
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compute_key
</UL>
<BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_gradient_get
</UL>

<P><STRONG><a name="[1e7]"></a>compute_key</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lv_draw_sw_gradient.o(i.compute_key))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = compute_key
</UL>
<BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_gradient_get
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;allocate_item
</UL>

<P><STRONG><a name="[9c]"></a>find_item</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, lv_draw_sw_gradient.o(i.find_item))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = find_item
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_draw_sw_gradient.o(i.lv_gradient_get)
</UL>
<P><STRONG><a name="[75]"></a>find_oldest_item_life</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, lv_draw_sw_gradient.o(i.find_oldest_item_life))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = find_oldest_item_life
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_draw_sw_gradient.o(i.allocate_item)
</UL>
<P><STRONG><a name="[324]"></a>free_item</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, lv_draw_sw_gradient.o(i.free_item))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = free_item &rArr; lv_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_00
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memcpy
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_cache_item_size
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kill_oldest_item
</UL>

<P><STRONG><a name="[325]"></a>get_cache_item_size</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lv_draw_sw_gradient.o(i.get_cache_item_size))
<BR><BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;next_in_cache
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_item
</UL>

<P><STRONG><a name="[1e6]"></a>iterate_cache</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, lv_draw_sw_gradient.o(i.iterate_cache))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = iterate_cache &rArr; next_in_cache
</UL>
<BR>[Calls]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;next_in_cache
</UL>
<BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_gradient_get
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;allocate_item
</UL>

<P><STRONG><a name="[76]"></a>kill_oldest_item</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lv_draw_sw_gradient.o(i.kill_oldest_item))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = kill_oldest_item &rArr; free_item &rArr; lv_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_item
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_draw_sw_gradient.o(i.allocate_item)
</UL>
<P><STRONG><a name="[411]"></a>lv_color_to32</STRONG> (Thumb, 90 bytes, Stack size 12 bytes, lv_draw_sw_gradient.o(i.lv_color_to32))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = lv_color_to32
</UL>
<BR>[Called By]<UL><LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_gradient_calculate
</UL>

<P><STRONG><a name="[380]"></a>next_in_cache</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, lv_draw_sw_gradient.o(i.next_in_cache))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = next_in_cache
</UL>
<BR>[Calls]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_cache_item_size
</UL>
<BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iterate_cache
</UL>

<P><STRONG><a name="[3eb]"></a>lv_area_get_height</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lv_draw_sw_img.o(i.lv_area_get_height))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_img_decoded
</UL>

<P><STRONG><a name="[3ea]"></a>lv_area_get_width</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lv_draw_sw_img.o(i.lv_area_get_width))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_img_decoded
</UL>

<P><STRONG><a name="[3ec]"></a>lv_color_mix_premult</STRONG> (Thumb, 126 bytes, Stack size 20 bytes, lv_draw_sw_img.o(i.lv_color_mix_premult))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lv_color_mix_premult
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_img_decoded
</UL>

<P><STRONG><a name="[2bf]"></a>draw_letter_normal</STRONG> (Thumb, 926 bytes, Stack size 184 bytes, lv_draw_sw_letter.o(i.draw_letter_normal))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = draw_letter_normal &rArr; lv_mem_buf_get &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_hor_res
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_00
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_refr_get_disp_refreshing
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_blend
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_is_any
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_apply
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_letter
</UL>

<P><STRONG><a name="[2c1]"></a>draw_line_hor</STRONG> (Thumb, 472 bytes, Stack size 112 bytes, lv_draw_sw_line.o(i.draw_line_hor))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = draw_line_hor &rArr; lv_mem_buf_get &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_00
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_blend
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_width
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_ff
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_is_any
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_apply
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_line
</UL>

<P><STRONG><a name="[2c3]"></a>draw_line_skew</STRONG> (Thumb, 1110 bytes, Stack size 336 bytes, lv_draw_sw_line.o(i.draw_line_skew))
<BR><BR>[Stack]<UL><LI>Max Depth = 592<LI>Call Chain = draw_line_skew &rArr; lv_mem_buf_get &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_hor_res
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_00
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_free_param
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_add
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_size
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_refr_get_disp_refreshing
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_blend
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_remove_id
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_line_points_init
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_width
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_ff
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_apply
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_line
</UL>

<P><STRONG><a name="[2c6]"></a>draw_line_ver</STRONG> (Thumb, 436 bytes, Stack size 120 bytes, lv_draw_sw_line.o(i.draw_line_ver))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = draw_line_ver &rArr; lv_mem_buf_get &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_00
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_blend
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_width
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_ff
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_is_any
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_apply
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_line
</UL>

<P><STRONG><a name="[2c2]"></a>lv_area_get_width</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lv_draw_sw_line.o(i.lv_area_get_width))
<BR><BR>[Called By]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_ver
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_skew
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_hor
</UL>

<P><STRONG><a name="[27b]"></a>draw_bg</STRONG> (Thumb, 1002 bytes, Stack size 168 bytes, lv_draw_sw_rect.o(i.draw_bg))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = draw_bg &rArr; lv_draw_mask_radius_init &rArr; circ_calc_aa4 &rArr; lv_mem_buf_get &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius_init
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_free_param
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_add
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_gradient_get
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_gradient_cleanup
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_blend
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_remove_id
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_width
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_height
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_copy
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_is_any
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_apply
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_rect
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_bg
</UL>

<P><STRONG><a name="[289]"></a>draw_bg_img</STRONG> (Thumb, 568 bytes, Stack size 88 bytes, lv_draw_sw_rect.o(i.draw_bg_img))
<BR><BR>[Stack]<UL><LI>Max Depth = 880<LI>Call Chain = draw_bg_img &rArr; lv_draw_img &rArr; decode_and_draw &rArr; show_error &rArr; lv_draw_label &rArr; lv_txt_get_size &rArr; _lv_txt_get_next_line &rArr; lv_txt_get_next_word &rArr; lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_src_get_type
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_get_info
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img_dsc_init
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_size
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label_dsc_init
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_width
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_height
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_rect
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_bg
</UL>

<P><STRONG><a name="[291]"></a>draw_border</STRONG> (Thumb, 310 bytes, Stack size 64 bytes, lv_draw_sw_rect.o(i.draw_border))
<BR><BR>[Stack]<UL><LI>Max Depth = 640<LI>Call Chain = draw_border &rArr; draw_border_generic &rArr; lv_draw_mask_radius_init &rArr; circ_calc_aa4 &rArr; lv_mem_buf_get &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border_generic
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_width
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_height
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_rect
</UL>

<P><STRONG><a name="[293]"></a>draw_border_simple</STRONG> (Thumb, 282 bytes, Stack size 88 bytes, lv_draw_sw_rect.o(i.draw_border_simple))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = draw_border_simple &rArr; lv_draw_sw_blend &rArr; _lv_area_intersect
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_00
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_blend
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border_generic
</UL>

<P><STRONG><a name="[2f5]"></a>draw_outline</STRONG> (Thumb, 256 bytes, Stack size 88 bytes, lv_draw_sw_rect.o(i.draw_outline))
<BR><BR>[Stack]<UL><LI>Max Depth = 664<LI>Call Chain = draw_outline &rArr; draw_border_generic &rArr; lv_draw_mask_radius_init &rArr; circ_calc_aa4 &rArr; lv_mem_buf_get &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border_generic
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_width
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_height
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_rect
</UL>

<P><STRONG><a name="[302]"></a>draw_shadow</STRONG> (Thumb, 3434 bytes, Stack size 184 bytes, lv_draw_sw_rect.o(i.draw_shadow))
<BR><BR>[Stack]<UL><LI>Max Depth = 664<LI>Call Chain = draw_shadow &rArr; shadow_draw_corner_buf &rArr; lv_draw_mask_radius_init &rArr; circ_calc_aa4 &rArr; lv_mem_buf_get &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_00
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius_init
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_free_param
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_add
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_in
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_increase
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memcpy
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_blend
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_remove_id
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_out
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shadow_draw_corner_buf
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_width
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_height
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_copy
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_ff
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_is_any
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_apply
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_sw_rect
</UL>

<P><STRONG><a name="[27c]"></a>lv_area_copy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lv_draw_sw_rect.o(i.lv_area_copy))
<BR><BR>[Called By]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shadow_draw_corner_buf
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_shadow
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_outline
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
</UL>

<P><STRONG><a name="[280]"></a>lv_area_get_height</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lv_draw_sw_rect.o(i.lv_area_get_height))
<BR><BR>[Called By]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shadow_draw_corner_buf
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_shadow
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_outline
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg_img
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
</UL>

<P><STRONG><a name="[27f]"></a>lv_area_get_width</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lv_draw_sw_rect.o(i.lv_area_get_width))
<BR><BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border_generic
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shadow_draw_corner_buf
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_shadow
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_outline
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg_img
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bg
</UL>

<P><STRONG><a name="[559]"></a>shadow_blur_corner</STRONG> (Thumb, 380 bytes, Stack size 56 bytes, lv_draw_sw_rect.o(i.shadow_blur_corner))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = shadow_blur_corner &rArr; lv_mem_buf_get &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shadow_draw_corner_buf
</UL>

<P><STRONG><a name="[304]"></a>shadow_draw_corner_buf</STRONG> (Thumb, 454 bytes, Stack size 96 bytes, lv_draw_sw_rect.o(i.shadow_draw_corner_buf))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = shadow_draw_corner_buf &rArr; lv_draw_mask_radius_init &rArr; circ_calc_aa4 &rArr; lv_mem_buf_get &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_00
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius_init
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_free_param
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shadow_blur_corner
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_width
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_height
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_copy
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_ff
</UL>
<BR>[Called By]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_shadow
</UL>

<P><STRONG><a name="[270]"></a>decode_and_draw</STRONG> (Thumb, 564 bytes, Stack size 104 bytes, lv_draw_img.o(i.decode_and_draw))
<BR><BR>[Stack]<UL><LI>Max Depth = 768<LI>Call Chain = decode_and_draw &rArr; show_error &rArr; lv_draw_label &rArr; lv_txt_get_size &rArr; _lv_txt_get_next_line &rArr; lv_txt_get_next_word &rArr; lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_error
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_width
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_copy
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_cleanup
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_read_line
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_close
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_set_height
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_cache_open
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_buf_get_transformed_area
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_cf_is_chroma_keyed
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_cf_has_alpha
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img_decoded
</UL>
<BR>[Called By]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img
</UL>

<P><STRONG><a name="[274]"></a>draw_cleanup</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, lv_draw_img.o(i.draw_cleanup))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = draw_cleanup &rArr; lv_img_decoder_close &rArr; lv_mem_free &rArr; lv_tlsf_free &rArr; block_merge_prev &rArr; block_absorb &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_close
</UL>
<BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_and_draw
</UL>

<P><STRONG><a name="[272]"></a>lv_area_copy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lv_draw_img.o(i.lv_area_copy))
<BR><BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_and_draw
</UL>

<P><STRONG><a name="[273]"></a>lv_area_get_width</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lv_draw_img.o(i.lv_area_get_width))
<BR><BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_and_draw
</UL>

<P><STRONG><a name="[3d8]"></a>lv_color_make</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, lv_draw_img.o(i.lv_color_make))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = lv_color_make
</UL>
<BR>[Called By]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img_dsc_init
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_error
</UL>

<P><STRONG><a name="[271]"></a>show_error</STRONG> (Thumb, 82 bytes, Stack size 112 bytes, lv_draw_img.o(i.show_error))
<BR><BR>[Stack]<UL><LI>Max Depth = 664<LI>Call Chain = show_error &rArr; lv_draw_label &rArr; lv_txt_get_size &rArr; _lv_txt_get_next_line &rArr; lv_txt_get_next_word &rArr; lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect_dsc_init
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_make
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label_dsc_init
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
</UL>
<BR>[Called By]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_and_draw
</UL>

<P><STRONG><a name="[3dd]"></a>hex_char_to_num</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, lv_draw_label.o(i.hex_char_to_num))
<BR><BR>[Called By]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
</UL>

<P><STRONG><a name="[3d9]"></a>lv_area_get_width</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lv_draw_label.o(i.lv_area_get_width))
<BR><BR>[Called By]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
</UL>

<P><STRONG><a name="[3c1]"></a>lv_color_black</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, lv_draw_label.o(i.lv_color_black))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lv_color_black &rArr; lv_color_make
</UL>
<BR>[Calls]<UL><LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_make
</UL>
<BR>[Called By]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label_dsc_init
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
</UL>

<P><STRONG><a name="[3c2]"></a>lv_color_make</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, lv_draw_label.o(i.lv_color_make))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = lv_color_make
</UL>
<BR>[Called By]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_black
</UL>

<P><STRONG><a name="[25e]"></a>circ_calc_aa4</STRONG> (Thumb, 862 bytes, Stack size 88 bytes, lv_draw_mask.o(i.circ_calc_aa4))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = circ_calc_aa4 &rArr; lv_mem_buf_get &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circ_next
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circ_init
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circ_cont
</UL>
<BR>[Called By]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius_init
</UL>

<P><STRONG><a name="[262]"></a>circ_cont</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lv_draw_mask.o(i.circ_cont))
<BR><BR>[Called By]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circ_calc_aa4
</UL>

<P><STRONG><a name="[260]"></a>circ_init</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lv_draw_mask.o(i.circ_init))
<BR><BR>[Called By]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circ_calc_aa4
</UL>

<P><STRONG><a name="[261]"></a>circ_next</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, lv_draw_mask.o(i.circ_next))
<BR><BR>[Called By]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circ_calc_aa4
</UL>

<P><STRONG><a name="[3e5]"></a>get_next_line</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, lv_draw_mask.o(i.get_next_line))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = get_next_line
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius
</UL>

<P><STRONG><a name="[392]"></a>line_mask_flat</STRONG> (Thumb, 482 bytes, Stack size 56 bytes, lv_draw_mask.o(i.line_mask_flat))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = line_mask_flat &rArr; lv_memset_00
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_00
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mask_mix
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_line
</UL>

<P><STRONG><a name="[394]"></a>line_mask_steep</STRONG> (Thumb, 676 bytes, Stack size 80 bytes, lv_draw_mask.o(i.line_mask_steep))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = line_mask_steep &rArr; lv_memset_00
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_00
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mask_mix
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_line
</UL>

<P><STRONG><a name="[3e2]"></a>lv_area_copy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lv_draw_mask.o(i.lv_area_copy))
<BR><BR>[Called By]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius_init
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius
</UL>

<P><STRONG><a name="[3e4]"></a>lv_area_get_height</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lv_draw_mask.o(i.lv_area_get_height))
<BR><BR>[Called By]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius_init
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius
</UL>

<P><STRONG><a name="[3e3]"></a>lv_area_get_width</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lv_draw_mask.o(i.lv_area_get_width))
<BR><BR>[Called By]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius_init
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius
</UL>

<P><STRONG><a name="[8f]"></a>lv_draw_mask_angle</STRONG> (Thumb, 1070 bytes, Stack size 64 bytes, lv_draw_mask.o(i.lv_draw_mask_angle))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = lv_draw_mask_angle &rArr; lv_draw_mask_line &rArr; line_mask_steep &rArr; lv_memset_00
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_00
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_line
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_draw_mask.o(i.lv_draw_mask_angle_init)
</UL>
<P><STRONG><a name="[90]"></a>lv_draw_mask_line</STRONG> (Thumb, 300 bytes, Stack size 40 bytes, lv_draw_mask.o(i.lv_draw_mask_line))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = lv_draw_mask_line &rArr; line_mask_steep &rArr; lv_memset_00
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_00
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;line_mask_steep
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;line_mask_flat
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_angle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_draw_mask.o(i.lv_draw_mask_line_points_init)
</UL>
<P><STRONG><a name="[91]"></a>lv_draw_mask_radius</STRONG> (Thumb, 846 bytes, Stack size 88 bytes, lv_draw_mask.o(i.lv_draw_mask_radius))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = lv_draw_mask_radius &rArr; lv_memset_00
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_00
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mask_mix
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_width
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_height
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_copy
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_next_line
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_draw_mask.o(i.lv_draw_mask_radius_init)
</UL>
<P><STRONG><a name="[393]"></a>mask_mix</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, lv_draw_mask.o(i.mask_mix))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;line_mask_steep
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;line_mask_flat
</UL>

<P><STRONG><a name="[3c3]"></a>lv_color_black</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, lv_draw_rect.o(i.lv_color_black))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lv_color_black &rArr; lv_color_make
</UL>
<BR>[Calls]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_make
</UL>
<BR>[Called By]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect_dsc_init
</UL>

<P><STRONG><a name="[3c4]"></a>lv_color_make</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, lv_draw_rect.o(i.lv_color_make))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = lv_color_make
</UL>
<BR>[Called By]<UL><LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_white
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_black
</UL>

<P><STRONG><a name="[3c8]"></a>lv_color_white</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, lv_draw_rect.o(i.lv_color_white))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lv_color_white &rArr; lv_color_make
</UL>
<BR>[Calls]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_make
</UL>
<BR>[Called By]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect_dsc_init
</UL>

<P><STRONG><a name="[188]"></a>lv_color_mix</STRONG> (Thumb, 64 bytes, Stack size 28 bytes, lv_img_buf.o(i.lv_color_mix))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = lv_color_mix
</UL>
<BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_buf_transform_anti_alias
</UL>

<P><STRONG><a name="[184]"></a>lv_memcpy_small</STRONG> (Thumb, 24 bytes, Stack size 12 bytes, lv_img_buf.o(i.lv_memcpy_small))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = lv_memcpy_small
</UL>
<BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_buf_transform
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_buf_get_px_color
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_buf_transform_anti_alias
</UL>

<P><STRONG><a name="[41e]"></a>lv_color_make</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, lv_img_decoder.o(i.lv_color_make))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = lv_color_make
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_open
</UL>

<P><STRONG><a name="[41a]"></a>lv_img_decoder_built_in_line_alpha</STRONG> (Thumb, 442 bytes, Stack size 104 bytes, lv_img_decoder.o(i.lv_img_decoder_built_in_line_alpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = lv_img_decoder_built_in_line_alpha &rArr; lv_fs_read &rArr; lv_fs_read_cached &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_cf_get_px_size
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_seek
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_read
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_read_line
</UL>

<P><STRONG><a name="[41c]"></a>lv_img_decoder_built_in_line_indexed</STRONG> (Thumb, 404 bytes, Stack size 72 bytes, lv_img_decoder.o(i.lv_img_decoder_built_in_line_indexed))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = lv_img_decoder_built_in_line_indexed &rArr; lv_fs_read &rArr; lv_fs_read_cached &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_cf_get_px_size
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_seek
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_read
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_read_line
</UL>

<P><STRONG><a name="[41d]"></a>lv_img_decoder_built_in_line_true_color</STRONG> (Thumb, 128 bytes, Stack size 48 bytes, lv_img_decoder.o(i.lv_img_decoder_built_in_line_true_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = lv_img_decoder_built_in_line_true_color &rArr; lv_fs_read &rArr; lv_fs_read_cached &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_cf_get_px_size
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_seek
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_read
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_read_line
</UL>

<P><STRONG><a name="[255]"></a>children_repos</STRONG> (Thumb, 1332 bytes, Stack size 112 bytes, lv_flex.o(i.children_repos))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = children_repos &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; _lv_inv_area &rArr; _lv_area_is_in &rArr; _lv_area_is_point_on &rArr;  _lv_area_is_point_on (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag_any
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_children_by
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_width
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;place_content
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_flex_grow
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_base_dir
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_next_item
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flex_update
</UL>

<P><STRONG><a name="[31b]"></a>find_track_end</STRONG> (Thumb, 696 bytes, Stack size 80 bytes, lv_flex.o(i.find_track_end))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = find_track_end &rArr; lv_mem_buf_get &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag_any
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memcpy
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_width
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_height
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_flex_grow
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_next_item
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flex_update
</UL>

<P><STRONG><a name="[9b]"></a>flex_update</STRONG> (Thumb, 906 bytes, Stack size 128 bytes, lv_flex.o(i.flex_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 688<LI>Call Chain = flex_update &rArr; lv_obj_refr_size &rArr; calc_content_width &rArr; lv_obj_scroll_to_x &rArr; lv_obj_scroll_by_bounded &rArr;  lv_obj_update_layout (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_y
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_x
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_width
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_height
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;place_content
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_width
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_row
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_column
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_height
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_base_dir
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_track_end
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;children_repos
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_flex.o(i.lv_flex_init)
</UL>
<P><STRONG><a name="[25a]"></a>get_next_item</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, lv_flex.o(i.get_next_item))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = get_next_item
</UL>
<BR>[Called By]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_track_end
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;children_repos
</UL>

<P><STRONG><a name="[7d]"></a>lv_area_get_height</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lv_flex.o(i.lv_area_get_height))
<BR>[Address Reference Count : 1]<UL><LI> lv_flex.o(i.children_repos)
</UL>
<P><STRONG><a name="[7c]"></a>lv_area_get_width</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lv_flex.o(i.lv_area_get_width))
<BR>[Address Reference Count : 1]<UL><LI> lv_flex.o(i.children_repos)
</UL>
<P><STRONG><a name="[256]"></a>lv_obj_get_style_base_dir</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_flex.o(i.lv_obj_get_style_base_dir))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_base_dir &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flex_update
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;children_repos
</UL>

<P><STRONG><a name="[25b]"></a>lv_obj_get_style_flex_grow</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_flex.o(i.lv_obj_get_style_flex_grow))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_flex_grow &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_track_end
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;children_repos
</UL>

<P><STRONG><a name="[31d]"></a>lv_obj_get_style_height</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_flex.o(i.lv_obj_get_style_height))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_height &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flex_update
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_track_end
</UL>

<P><STRONG><a name="[31e]"></a>lv_obj_get_style_pad_column</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_flex.o(i.lv_obj_get_style_pad_column))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_pad_column &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flex_update
</UL>

<P><STRONG><a name="[31f]"></a>lv_obj_get_style_pad_row</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_flex.o(i.lv_obj_get_style_pad_row))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_pad_row &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flex_update
</UL>

<P><STRONG><a name="[31c]"></a>lv_obj_get_style_width</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_flex.o(i.lv_obj_get_style_width))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_width &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flex_update
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_track_end
</UL>

<P><STRONG><a name="[257]"></a>place_content</STRONG> (Thumb, 182 bytes, Stack size 20 bytes, lv_flex.o(i.place_content))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = place_content
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flex_update
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;children_repos
</UL>

<P><STRONG><a name="[c1]"></a>dark_color_filter_cb</STRONG> (Thumb, 28 bytes, Stack size 32 bytes, lv_theme_default.o(i.dark_color_filter_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = dark_color_filter_cb &rArr; lv_color_darken &rArr; lv_color_mix
</UL>
<BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_darken
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_theme_default.o(i.style_init)
</UL>
<P><STRONG><a name="[c2]"></a>grey_filter_cb</STRONG> (Thumb, 78 bytes, Stack size 40 bytes, lv_theme_default.o(i.grey_filter_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = grey_filter_cb &rArr; lv_palette_lighten &rArr; lv_color_black &rArr; lv_color_make
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_mix
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_palette_lighten
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_palette_darken
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_theme_default.o(i.style_init)
</UL>
<P><STRONG><a name="[565]"></a>lv_color_filter_dsc_init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lv_theme_default.o(i.lv_color_filter_dsc_init))
<BR><BR>[Called By]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[562]"></a>lv_color_hex</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, lv_theme_default.o(i.lv_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[342]"></a>lv_color_mix</STRONG> (Thumb, 64 bytes, Stack size 28 bytes, lv_theme_default.o(i.lv_color_mix))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = lv_color_mix
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grey_filter_cb
</UL>

<P><STRONG><a name="[563]"></a>lv_color_white</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lv_theme_default.o(i.lv_color_white))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lv_color_white
</UL>
<BR>[Called By]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[3c9]"></a>lv_disp_dpx</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, lv_theme_default.o(i.lv_disp_dpx))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lv_disp_dpx &rArr; lv_disp_get_dpi
</UL>
<BR>[Calls]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_dpi
</UL>
<BR>[Called By]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[4ec]"></a>lv_style_set_pad_all</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, lv_theme_default.o(i.lv_style_set_pad_all))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = lv_style_set_pad_all &rArr; lv_style_set_pad_top &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_top
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_right
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_left
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_bottom
</UL>
<BR>[Called By]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[4f1]"></a>lv_style_set_pad_gap</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, lv_theme_default.o(i.lv_style_set_pad_gap))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = lv_style_set_pad_gap &rArr; lv_style_set_pad_row &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_row
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_column
</UL>
<BR>[Called By]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[4f2]"></a>lv_style_set_pad_hor</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, lv_theme_default.o(i.lv_style_set_pad_hor))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = lv_style_set_pad_hor &rArr; lv_style_set_pad_right &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_right
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_left
</UL>
<BR>[Called By]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[518]"></a>style_init</STRONG> (Thumb, 4456 bytes, Stack size 16 bytes, lv_theme_default.o(i.style_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = style_init &rArr; lv_style_set_pad_hor &rArr; lv_style_set_pad_right &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_dpi
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_palette_main
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init_reset
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_hor
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_gap
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_all
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_dpx
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_white
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_hex
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_filter_dsc_init
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_transition_dsc_init
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_width
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_transition
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_transform_width
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_transform_height
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_text_line_space
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_text_font
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_text_color
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_text_align
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_shadow_width
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_shadow_opa
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_shadow_ofs_y
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_shadow_color
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_radius
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_top
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_row
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_left
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_column
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_bottom
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_outline_width
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_outline_pad
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_outline_opa
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_outline_color
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_max_height
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_line_width
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_line_color
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_color_filter_opa
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_color_filter_dsc
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_clip_corner
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_border_width
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_border_side
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_border_post
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_border_color
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_opa
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_img_src
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_color
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_anim_time
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_palette_lighten
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_palette_darken
</UL>
<BR>[Called By]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_default_init
</UL>

<P><STRONG><a name="[564]"></a>style_init_reset</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, lv_theme_default.o(i.style_init_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = style_init_reset &rArr; lv_style_reset &rArr; lv_mem_free &rArr; lv_tlsf_free &rArr; block_merge_prev &rArr; block_absorb &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_reset
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_init
</UL>
<BR>[Called By]<UL><LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[b4]"></a>theme_apply</STRONG> (Thumb, 2258 bytes, Stack size 16 bytes, lv_theme_default.o(i.theme_apply))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = theme_apply &rArr; lv_obj_add_style &rArr; trans_del &rArr; lv_style_remove_prop &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_check_type
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_style
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_theme_default.o(i.lv_theme_default_init)
</UL>
<P><STRONG><a name="[8c]"></a>draw_part_begin_event_cb</STRONG> (Thumb, 200 bytes, Stack size 24 bytes, lv_calendar.o(i.draw_part_begin_event_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = draw_part_begin_event_cb &rArr; lv_theme_get_color_primary &rArr; lv_theme_get_from_obj &rArr; lv_obj_get_disp &rArr; lv_obj_get_screen
</UL>
<BR>[Calls]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_param
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_palette_main
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_get_color_primary
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_has_btn_ctrl
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_get_selected_btn
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_calendar.o(i.lv_calendar_constructor)
</UL>
<P><STRONG><a name="[348]"></a>get_day_of_week</STRONG> (Thumb, 76 bytes, Stack size 20 bytes, lv_calendar.o(i.get_day_of_week))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = get_day_of_week
</UL>
<BR>[Called By]<UL><LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_set_showed_date
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;highlight_update
</UL>

<P><STRONG><a name="[335]"></a>get_month_length</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, lv_calendar.o(i.get_month_length))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = get_month_length
</UL>
<BR>[Calls]<UL><LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_leap_year
</UL>
<BR>[Called By]<UL><LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_set_showed_date
</UL>

<P><STRONG><a name="[346]"></a>highlight_update</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, lv_calendar.o(i.highlight_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = highlight_update &rArr; lv_btnmatrix_set_btn_ctrl &rArr; lv_btnmatrix_clear_btn_ctrl_all &rArr; lv_btnmatrix_clear_btn_ctrl &rArr; lv_obj_refresh_ext_draw_size &rArr; lv_obj_allocate_spec_attr &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_btn_ctrl
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_clear_btn_ctrl_all
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_day_of_week
</UL>
<BR>[Called By]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_set_today_date
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_set_showed_date
</UL>

<P><STRONG><a name="[336]"></a>is_leap_year</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, lv_calendar.o(i.is_leap_year))
<BR><BR>[Called By]<UL><LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_month_length
</UL>

<P><STRONG><a name="[c9]"></a>lv_calendar_constructor</STRONG> (Thumb, 280 bytes, Stack size 32 bytes, lv_calendar.o(i.lv_calendar_constructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = lv_calendar_constructor &rArr; lv_calendar_set_showed_date &rArr; lv_snprintf &rArr; _vsnprintf &rArr;  _vsnprintf (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_event_cb
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_00
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_width
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_flex_grow
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_flex_flow
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_btn_ctrl_all
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_create
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_set_today_date
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_set_showed_date
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_calendar.o(.constdata)
</UL>
<P><STRONG><a name="[b8]"></a>month_event_cb</STRONG> (Thumb, 188 bytes, Stack size 32 bytes, lv_calendar_header_arrow.o(i.month_event_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = month_event_cb &rArr; lv_label_set_text_fmt &rArr; lv_label_refr_text &rArr; lv_label_get_letter_on &rArr; _lv_txt_get_next_line &rArr; lv_txt_get_next_word &rArr; lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text_fmt
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_set_showed_date
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_get_showed_date
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_calendar_header_arrow.o(i.my_constructor)
</UL>
<P><STRONG><a name="[ca]"></a>my_constructor</STRONG> (Thumb, 234 bytes, Stack size 32 bytes, lv_calendar_header_arrow.o(i.my_constructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 632<LI>Call Chain = my_constructor &rArr; lv_obj_update_layout &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_event_cb
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_update_layout
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_width
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_height
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_text_align
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_bg_img_src
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_to_index
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_flex_grow
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_flex_flow
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_flex_align
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_long_mode
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_create
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btn_create
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_calendar_header_arrow.o(.constdata)
</UL>
<P><STRONG><a name="[b9]"></a>value_changed_event_cb</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, lv_calendar_header_arrow.o(i.value_changed_event_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 512<LI>Call Chain = value_changed_event_cb &rArr; lv_label_set_text_fmt &rArr; lv_label_refr_text &rArr; lv_label_get_letter_on &rArr; _lv_txt_get_next_line &rArr; lv_txt_get_next_word &rArr; lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text_fmt
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_get_showed_date
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_calendar_header_arrow.o(i.my_constructor)
</UL>
<P><STRONG><a name="[bb]"></a>month_event_cb</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, lv_calendar_header_dropdown.o(i.month_event_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = month_event_cb &rArr; lv_calendar_set_showed_date &rArr; lv_snprintf &rArr; _vsnprintf &rArr;  _vsnprintf (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_user_data
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_set_showed_date
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_get_showed_date
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_get_selected
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_calendar_header_dropdown.o(i.my_constructor)
</UL>
<P><STRONG><a name="[cb]"></a>my_constructor</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, lv_calendar_header_dropdown.o(i.my_constructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = my_constructor &rArr; lv_dropdown_create &rArr; lv_obj_class_init_obj &rArr; lv_theme_apply &rArr; lv_obj_remove_style &rArr; trans_del &rArr; lv_style_remove_prop &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_event_cb
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_to_index
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_flex_grow
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_flex_flow
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_set_options
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_create
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_calendar_header_dropdown.o(.constdata)
</UL>
<P><STRONG><a name="[bc]"></a>value_changed_event_cb</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, lv_calendar_header_dropdown.o(i.value_changed_event_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = value_changed_event_cb &rArr; lv_dropdown_set_selected &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; _lv_inv_area &rArr; _lv_area_is_in &rArr; _lv_area_is_point_on &rArr;  _lv_area_is_point_on (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_get_showed_date
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_set_selected
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_calendar_header_dropdown.o(i.my_constructor)
</UL>
<P><STRONG><a name="[ba]"></a>year_event_cb</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, lv_calendar_header_dropdown.o(i.year_event_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = year_event_cb &rArr; lv_calendar_set_showed_date &rArr; lv_snprintf &rArr; _vsnprintf &rArr;  _vsnprintf (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_user_data
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_set_showed_date
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_get_showed_date
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_get_selected
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_calendar_header_dropdown.o(i.my_constructor)
</UL>
<P><STRONG><a name="[cc]"></a>lv_spinbox_constructor</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, lv_spinbox.o(i.lv_spinbox_constructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 1056<LI>Call Chain = lv_spinbox_constructor &rArr; lv_spinbox_updatevalue &rArr; lv_textarea_set_text &rArr; lv_textarea_add_char &rArr; insert_handler &rArr; lv_textarea_add_text &rArr;  lv_textarea_add_char (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_width
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_one_line
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_click_pos
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_updatevalue
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_spinbox.o(.constdata)
</UL>
<P><STRONG><a name="[cd]"></a>lv_spinbox_event</STRONG> (Thumb, 486 bytes, Stack size 56 bytes, lv_spinbox.o(i.lv_spinbox_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 1120<LI>Call Chain = lv_spinbox_event &rArr; lv_spinbox_step_prev &rArr; lv_spinbox_updatevalue &rArr; lv_textarea_set_text &rArr; lv_textarea_add_char &rArr; insert_handler &rArr; lv_textarea_add_text &rArr;  lv_textarea_add_char (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_group
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_type
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_get_editing
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_act
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event_base
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_param
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_code
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_get_text
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_cursor_left
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_char
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_pow
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_step_prev
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_step_next
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_increment
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_decrement
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_spinbox.o(.constdata)
</UL>
<P><STRONG><a name="[4cd]"></a>lv_spinbox_updatevalue</STRONG> (Thumb, 324 bytes, Stack size 80 bytes, lv_spinbox.o(i.lv_spinbox_updatevalue))
<BR><BR>[Stack]<UL><LI>Max Depth = 1040<LI>Call Chain = lv_spinbox_updatevalue &rArr; lv_textarea_set_text &rArr; lv_textarea_add_char &rArr; insert_handler &rArr; lv_textarea_add_text &rArr;  lv_textarea_add_char (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_00
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_snprintf
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_text
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_step_prev
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_step_next
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_set_range
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_set_digit_format
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_increment
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_decrement
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_constructor
</UL>

<P><STRONG><a name="[32d]"></a>get_glyph_dsc_id</STRONG> (Thumb, 428 bytes, Stack size 40 bytes, lv_font_fmt_txt.o(i.get_glyph_dsc_id))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = get_glyph_dsc_id &rArr; _lv_utils_bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_utils_bsearch
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_glyph_dsc_fmt_txt
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_bitmap_fmt_txt
</UL>

<P><STRONG><a name="[331]"></a>get_kern_value</STRONG> (Thumb, 202 bytes, Stack size 48 bytes, lv_font_fmt_txt.o(i.get_kern_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = get_kern_value &rArr; _lv_utils_bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_utils_bsearch
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_glyph_dsc_fmt_txt
</UL>

<P><STRONG><a name="[87]"></a>kern_pair_16_compare</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, lv_font_fmt_txt.o(i.kern_pair_16_compare))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = kern_pair_16_compare
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_font_fmt_txt.o(i.get_kern_value)
</UL>
<P><STRONG><a name="[86]"></a>kern_pair_8_compare</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, lv_font_fmt_txt.o(i.kern_pair_8_compare))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = kern_pair_8_compare
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_font_fmt_txt.o(i.get_kern_value)
</UL>
<P><STRONG><a name="[85]"></a>unicode_list_compare</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_font_fmt_txt.o(i.unicode_list_compare))
<BR>[Address Reference Count : 1]<UL><LI> lv_font_fmt_txt.o(i.get_glyph_dsc_id)
</UL>
<P><STRONG><a name="[3cd]"></a>lv_color_make</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, lv_hal_disp.o(i.lv_color_make))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = lv_color_make
</UL>
<BR>[Called By]<UL><LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_register
</UL>

<P><STRONG><a name="[3d1]"></a>lv_obj_remove_style_all</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lv_hal_disp.o(i.lv_obj_remove_style_all))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = lv_obj_remove_style_all &rArr; lv_obj_remove_style &rArr; trans_del &rArr; lv_style_remove_prop &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_style
</UL>
<BR>[Called By]<UL><LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_register
</UL>

<P><STRONG><a name="[168]"></a>anim_mark_list_change</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, lv_anim.o(i.anim_mark_list_change))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = anim_mark_list_change
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_resume
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_pause
</UL>
<BR>[Called By]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_anim_core_init
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anim_ready_handler
</UL>

<P><STRONG><a name="[1e8]"></a>anim_ready_handler</STRONG> (Thumb, 150 bytes, Stack size 8 bytes, lv_anim.o(i.anim_ready_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = anim_ready_handler &rArr; lv_mem_free &rArr; lv_tlsf_free &rArr; block_merge_prev &rArr; block_absorb &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_remove
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anim_mark_list_change
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anim_timer
</UL>

<P><STRONG><a name="[6c]"></a>anim_timer</STRONG> (Thumb, 270 bytes, Stack size 24 bytes, lv_anim.o(i.anim_timer))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = anim_timer &rArr; anim_ready_handler &rArr; lv_mem_free &rArr; lv_tlsf_free &rArr; block_merge_prev &rArr; block_absorb &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_get
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_elaps
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anim_ready_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_anim.o(i._lv_anim_core_init)
</UL>
<P><STRONG><a name="[16d]"></a>lv_area_get_height</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lv_area.o(i.lv_area_get_height))
<BR><BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_point_on
</UL>

<P><STRONG><a name="[16c]"></a>lv_area_get_width</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lv_area.o(i.lv_area_get_width))
<BR><BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_point_on
</UL>

<P><STRONG><a name="[16e]"></a>lv_point_within_circle</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, lv_area.o(i.lv_point_within_circle))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = lv_point_within_circle
</UL>
<BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_point_on
</UL>

<P><STRONG><a name="[89]"></a>lv_async_timer_cb</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, lv_async.o(i.lv_async_timer_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = lv_async_timer_cb &rArr; lv_mem_free &rArr; lv_tlsf_free &rArr; block_merge_prev &rArr; block_absorb &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_async.o(i.lv_async_call)
</UL>
<P><STRONG><a name="[3c5]"></a>lv_color_black</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, lv_color.o(i.lv_color_black))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lv_color_black &rArr; lv_color_make
</UL>
<BR>[Calls]<UL><LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_make
</UL>
<BR>[Called By]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_palette_main
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_palette_lighten
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_palette_darken
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_darken
</UL>

<P><STRONG><a name="[3c6]"></a>lv_color_make</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, lv_color.o(i.lv_color_make))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = lv_color_make
</UL>
<BR>[Called By]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_black
</UL>

<P><STRONG><a name="[3c7]"></a>lv_color_mix</STRONG> (Thumb, 64 bytes, Stack size 28 bytes, lv_color.o(i.lv_color_mix))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = lv_color_mix
</UL>
<BR>[Called By]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_darken
</UL>

<P><STRONG><a name="[40c]"></a>lv_fs_get_real_path</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_fs.o(i.lv_fs_get_real_path))
<BR><BR>[Called By]<UL><LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_open
</UL>

<P><STRONG><a name="[40e]"></a>lv_fs_read_cached</STRONG> (Thumb, 346 bytes, Stack size 64 bytes, lv_fs.o(i.lv_fs_read_cached))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = lv_fs_read_cached &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memcpy
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_read
</UL>

<P><STRONG><a name="[1b4]"></a>node_set_next</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, lv_ll.o(i.node_set_next))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = node_set_next
</UL>
<BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_remove
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_tail
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_head
</UL>

<P><STRONG><a name="[1b3]"></a>node_set_prev</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, lv_ll.o(i.node_set_prev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = node_set_prev
</UL>
<BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_remove
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_tail
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_head
</UL>

<P><STRONG><a name="[a4]"></a>lv_mem_walker</STRONG> (Thumb, 38 bytes, Stack size 12 bytes, lv_mem.o(i.lv_mem_walker))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = lv_mem_walker
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_mem.o(i.lv_mem_monitor)
</UL>
<P><STRONG><a name="[163]"></a>_atoi</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, lv_printf.o(i._atoi))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _atoi
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
</UL>
<BR>[Called By]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_vsnprintf
</UL>

<P><STRONG><a name="[164]"></a>_is_digit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lv_printf.o(i._is_digit))
<BR><BR>[Called By]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_vsnprintf
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_atoi
</UL>

<P><STRONG><a name="[1d4]"></a>_ntoa_format</STRONG> (Thumb, 282 bytes, Stack size 72 bytes, lv_printf.o(i._ntoa_format))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = _ntoa_format &rArr; _out_rev
</UL>
<BR>[Calls]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_out_rev
</UL>
<BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ntoa_long_long
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ntoa_long
</UL>

<P><STRONG><a name="[1d6]"></a>_ntoa_long</STRONG> (Thumb, 124 bytes, Stack size 112 bytes, lv_printf.o(i._ntoa_long))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = _ntoa_long &rArr; _ntoa_format &rArr; _out_rev
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ntoa_format
</UL>
<BR>[Called By]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_vsnprintf
</UL>

<P><STRONG><a name="[1d7]"></a>_ntoa_long_long</STRONG> (Thumb, 184 bytes, Stack size 112 bytes, lv_printf.o(i._ntoa_long_long))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = _ntoa_long_long &rArr; _ntoa_format &rArr; _out_rev
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ntoa_format
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_vsnprintf
</UL>

<P><STRONG><a name="[ad]"></a>_out_buffer</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_printf.o(i._out_buffer))
<BR>[Address Reference Count : 2]<UL><LI> lv_printf.o(i.lv_snprintf)
<LI> lv_printf.o(i.lv_vsnprintf)
</UL>
<P><STRONG><a name="[74]"></a>_out_null</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lv_printf.o(i._out_null))
<BR>[Address Reference Count : 1]<UL><LI> lv_printf.o(i._vsnprintf)
</UL>
<P><STRONG><a name="[1d5]"></a>_out_rev</STRONG> (Thumb, 116 bytes, Stack size 56 bytes, lv_printf.o(i._out_rev))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _out_rev
</UL>
<BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ntoa_format
</UL>

<P><STRONG><a name="[1e0]"></a>_vsnprintf</STRONG> (Thumb, 1554 bytes, Stack size 96 bytes, lv_printf.o(i._vsnprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 336 + In Cycle
<LI>Call Chain = _vsnprintf &rArr;  _vsnprintf (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_vsnprintf
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ntoa_long_long
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ntoa_long
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_atoi
</UL>
<BR>[Called By]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_snprintf
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_vsnprintf
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_vsnprintf
</UL>

<P><STRONG><a name="[4d8]"></a>lv_color_make</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, lv_style.o(i.lv_color_make))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = lv_color_make
</UL>
<BR>[Called By]<UL><LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_prop_get_default
</UL>

<P><STRONG><a name="[4d7]"></a>lv_style_get_prop_inlined</STRONG> (Thumb, 118 bytes, Stack size 20 bytes, lv_style.o(i.lv_style_get_prop_inlined))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lv_style_get_prop_inlined
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_get_prop
</UL>

<P><STRONG><a name="[51a]"></a>lv_timer_exec</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, lv_timer.o(i.lv_timer_exec))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = lv_timer_exec &rArr; lv_timer_del &rArr; lv_mem_free &rArr; lv_tlsf_free &rArr; block_merge_prev &rArr; block_absorb &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_get
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_del
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_time_remaining
</UL>
<BR>[Called By]<UL><LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_handler
</UL>

<P><STRONG><a name="[51b]"></a>lv_timer_time_remaining</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, lv_timer.o(i.lv_timer_time_remaining))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lv_timer_time_remaining &rArr; lv_tick_elaps
</UL>
<BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_elaps
</UL>
<BR>[Called By]<UL><LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_handler
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_exec
</UL>

<P><STRONG><a name="[1e1]"></a>adjust_request_size</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, lv_tlsf.o(i.adjust_request_size))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = adjust_request_size
</UL>
<BR>[Calls]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;align_up
</UL>
<BR>[Called By]<UL><LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_realloc
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_malloc
</UL>

<P><STRONG><a name="[51f]"></a>align_down</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, lv_tlsf.o(i.align_down))
<BR><BR>[Called By]<UL><LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_add_pool
</UL>

<P><STRONG><a name="[212]"></a>align_ptr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, lv_tlsf.o(i.align_ptr))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = align_ptr
</UL>
<BR>[Called By]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;insert_free_block
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_split
</UL>

<P><STRONG><a name="[1e2]"></a>align_up</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, lv_tlsf.o(i.align_up))
<BR><BR>[Called By]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adjust_request_size
</UL>

<P><STRONG><a name="[1f4]"></a>block_absorb</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, lv_tlsf.o(i.block_absorb))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = block_absorb &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_size
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_link_next
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_is_last
</UL>
<BR>[Called By]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_merge_prev
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_merge_next
</UL>

<P><STRONG><a name="[1f8]"></a>block_can_split</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, lv_tlsf.o(i.block_can_split))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = block_can_split
</UL>
<BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_size
</UL>
<BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_trim_used
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_trim_free
</UL>

<P><STRONG><a name="[523]"></a>block_from_ptr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_tlsf.o(i.block_from_ptr))
<BR><BR>[Called By]<UL><LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_realloc
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_free
</UL>

<P><STRONG><a name="[1f9]"></a>block_insert</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, lv_tlsf.o(i.block_insert))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = block_insert &rArr; insert_free_block &rArr; align_ptr
</UL>
<BR>[Calls]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mapping_insert
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;insert_free_block
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_size
</UL>
<BR>[Called By]<UL><LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_free
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_add_pool
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_trim_used
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_trim_free
</UL>

<P><STRONG><a name="[208]"></a>block_is_free</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_tlsf.o(i.block_is_free))
<BR><BR>[Called By]<UL><LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_walk_pool
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_realloc
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_free
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_trim_used
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_trim_free
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_merge_prev
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_merge_next
</UL>

<P><STRONG><a name="[1f5]"></a>block_is_last</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lv_tlsf.o(i.block_is_last))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_size
</UL>
<BR>[Called By]<UL><LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_walk_pool
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_next
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_merge_next
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_absorb
</UL>

<P><STRONG><a name="[20b]"></a>block_is_prev_free</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_tlsf.o(i.block_is_prev_free))
<BR><BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_prev
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_merge_prev
</UL>

<P><STRONG><a name="[1f7]"></a>block_link_next</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, lv_tlsf.o(i.block_link_next))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_next
</UL>
<BR>[Called By]<UL><LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_add_pool
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_trim_free
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_mark_as_free
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_absorb
</UL>

<P><STRONG><a name="[1fd]"></a>block_locate_free</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, lv_tlsf.o(i.block_locate_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = block_locate_free &rArr; mapping_search &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;search_suitable_block
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_free_block
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mapping_search
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_size
</UL>
<BR>[Called By]<UL><LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_malloc
</UL>

<P><STRONG><a name="[201]"></a>block_mark_as_free</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_tlsf.o(i.block_mark_as_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_set_prev_free
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_set_free
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_link_next
</UL>
<BR>[Called By]<UL><LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_free
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_split
</UL>

<P><STRONG><a name="[204]"></a>block_mark_as_used</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_tlsf.o(i.block_mark_as_used))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = block_mark_as_used &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_set_used
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_set_prev_used
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_next
</UL>
<BR>[Called By]<UL><LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_realloc
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_prepare_used
</UL>

<P><STRONG><a name="[207]"></a>block_merge_next</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, lv_tlsf.o(i.block_merge_next))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = block_merge_next &rArr; block_absorb &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_remove
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_next
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_is_last
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_is_free
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_absorb
</UL>
<BR>[Called By]<UL><LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_realloc
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_free
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_trim_used
</UL>

<P><STRONG><a name="[20a]"></a>block_merge_prev</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, lv_tlsf.o(i.block_merge_prev))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = block_merge_prev &rArr; block_absorb &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_remove
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_prev
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_is_prev_free
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_is_free
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_absorb
</UL>
<BR>[Called By]<UL><LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_free
</UL>

<P><STRONG><a name="[1fc]"></a>block_next</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, lv_tlsf.o(i.block_next))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;offset_to_block
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_to_ptr
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_size
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_is_last
</UL>
<BR>[Called By]<UL><LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_walk_pool
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_realloc
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_merge_next
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_mark_as_used
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_link_next
</UL>

<P><STRONG><a name="[20f]"></a>block_prepare_used</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, lv_tlsf.o(i.block_prepare_used))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_trim_free
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_to_ptr
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_mark_as_used
</UL>
<BR>[Called By]<UL><LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_malloc
</UL>

<P><STRONG><a name="[20c]"></a>block_prev</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lv_tlsf.o(i.block_prev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = block_prev
</UL>
<BR>[Calls]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_is_prev_free
</UL>
<BR>[Called By]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_merge_prev
</UL>

<P><STRONG><a name="[209]"></a>block_remove</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, lv_tlsf.o(i.block_remove))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = block_remove &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_free_block
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mapping_insert
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_size
</UL>
<BR>[Called By]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_merge_prev
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_merge_next
</UL>

<P><STRONG><a name="[203]"></a>block_set_free</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_tlsf.o(i.block_set_free))
<BR><BR>[Called By]<UL><LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_add_pool
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_mark_as_free
</UL>

<P><STRONG><a name="[202]"></a>block_set_prev_free</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_tlsf.o(i.block_set_prev_free))
<BR><BR>[Called By]<UL><LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_add_pool
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_trim_free
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_mark_as_free
</UL>

<P><STRONG><a name="[205]"></a>block_set_prev_used</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_tlsf.o(i.block_set_prev_used))
<BR><BR>[Called By]<UL><LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_add_pool
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_trim_used
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_mark_as_used
</UL>

<P><STRONG><a name="[213]"></a>block_set_size</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_tlsf.o(i.block_set_size))
<BR><BR>[Called By]<UL><LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_add_pool
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_split
</UL>

<P><STRONG><a name="[206]"></a>block_set_used</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_tlsf.o(i.block_set_used))
<BR><BR>[Called By]<UL><LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_add_pool
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_mark_as_used
</UL>

<P><STRONG><a name="[1f6]"></a>block_size</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_tlsf.o(i.block_size))
<BR><BR>[Called By]<UL><LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_walk_pool
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_realloc
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_split
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_remove
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_next
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_locate_free
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_is_last
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_insert
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_can_split
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_absorb
</UL>

<P><STRONG><a name="[211]"></a>block_split</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, lv_tlsf.o(i.block_split))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;offset_to_block
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_to_ptr
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_size
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_set_size
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_mark_as_free
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;align_ptr
</UL>
<BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_trim_used
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_trim_free
</UL>

<P><STRONG><a name="[20d]"></a>block_to_ptr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_tlsf.o(i.block_to_ptr))
<BR><BR>[Called By]<UL><LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_walk_pool
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;insert_free_block
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_split
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_prepare_used
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_next
</UL>

<P><STRONG><a name="[210]"></a>block_trim_free</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, lv_tlsf.o(i.block_trim_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_split
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_set_prev_free
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_link_next
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_is_free
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_insert
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_can_split
</UL>
<BR>[Called By]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_prepare_used
</UL>

<P><STRONG><a name="[214]"></a>block_trim_used</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, lv_tlsf.o(i.block_trim_used))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = block_trim_used &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_split
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_set_prev_used
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_merge_next
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_is_free
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_insert
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_can_split
</UL>
<BR>[Called By]<UL><LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_realloc
</UL>

<P><STRONG><a name="[521]"></a>control_constructor</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, lv_tlsf.o(i.control_constructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = control_constructor
</UL>
<BR>[Called By]<UL><LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_create
</UL>

<P><STRONG><a name="[b5]"></a>default_walker</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_tlsf.o(i.default_walker))
<BR>[Address Reference Count : 1]<UL><LI> lv_tlsf.o(i.lv_tlsf_walk_pool)
</UL>
<P><STRONG><a name="[1fb]"></a>insert_free_block</STRONG> (Thumb, 152 bytes, Stack size 32 bytes, lv_tlsf.o(i.insert_free_block))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = insert_free_block &rArr; align_ptr
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_to_ptr
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;align_ptr
</UL>
<BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_insert
</UL>

<P><STRONG><a name="[1fa]"></a>mapping_insert</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, lv_tlsf.o(i.mapping_insert))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tlsf_fls
</UL>
<BR>[Called By]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mapping_search
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_remove
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_insert
</UL>

<P><STRONG><a name="[1fe]"></a>mapping_search</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, lv_tlsf.o(i.mapping_search))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = mapping_search &rArr; mapping_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tlsf_fls
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mapping_insert
</UL>
<BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_locate_free
</UL>

<P><STRONG><a name="[20e]"></a>offset_to_block</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_tlsf.o(i.offset_to_block))
<BR><BR>[Called By]<UL><LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_walk_pool
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tlsf_add_pool
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_split
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_next
</UL>

<P><STRONG><a name="[200]"></a>remove_free_block</STRONG> (Thumb, 114 bytes, Stack size 20 bytes, lv_tlsf.o(i.remove_free_block))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = remove_free_block
</UL>
<BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_remove
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_locate_free
</UL>

<P><STRONG><a name="[1ff]"></a>search_suitable_block</STRONG> (Thumb, 132 bytes, Stack size 32 bytes, lv_tlsf.o(i.search_suitable_block))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = search_suitable_block
</UL>
<BR>[Calls]<UL><LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tlsf_ffs
</UL>
<BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_locate_free
</UL>

<P><STRONG><a name="[553]"></a>tlsf_ffs</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lv_tlsf.o(i.tlsf_ffs))
<BR><BR>[Called By]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;search_suitable_block
</UL>

<P><STRONG><a name="[52f]"></a>tlsf_fls</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lv_tlsf.o(i.tlsf_fls))
<BR><BR>[Called By]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mapping_search
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mapping_insert
</UL>

<P><STRONG><a name="[1cf]"></a>lv_memcpy_small</STRONG> (Thumb, 24 bytes, Stack size 12 bytes, lv_txt.o(i.lv_memcpy_small))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = lv_memcpy_small
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_ins
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_utf8_conv_wc
</UL>

<P><STRONG><a name="[1cc]"></a>lv_txt_get_next_word</STRONG> (Thumb, 352 bytes, Stack size 72 bytes, lv_txt.o(i.lv_txt_get_next_word))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = lv_txt_get_next_word &rArr; lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_glyph_width
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_is_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_get_next_line
</UL>

<P><STRONG><a name="[1b]"></a>lv_txt_unicode_to_utf8</STRONG> (Thumb, 164 bytes, Stack size 8 bytes, lv_txt.o(i.lv_txt_unicode_to_utf8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_txt_unicode_to_utf8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_txt.o(.data)
</UL>
<P><STRONG><a name="[1c]"></a>lv_txt_utf8_conv_wc</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, lv_txt.o(i.lv_txt_utf8_conv_wc))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = lv_txt_utf8_conv_wc &rArr; lv_memcpy_small
</UL>
<BR>[Calls]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memcpy_small
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_txt.o(.data)
</UL>
<P><STRONG><a name="[1f]"></a>lv_txt_utf8_get_byte_id</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, lv_txt.o(i.lv_txt_utf8_get_byte_id))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lv_txt_utf8_get_byte_id
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_txt.o(.data)
</UL>
<P><STRONG><a name="[20]"></a>lv_txt_utf8_get_char_id</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, lv_txt.o(i.lv_txt_utf8_get_char_id))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lv_txt_utf8_get_char_id
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_txt.o(.data)
</UL>
<P><STRONG><a name="[21]"></a>lv_txt_utf8_get_length</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, lv_txt.o(i.lv_txt_utf8_get_length))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lv_txt_utf8_get_length
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_txt.o(.data)
</UL>
<P><STRONG><a name="[1d]"></a>lv_txt_utf8_next</STRONG> (Thumb, 328 bytes, Stack size 8 bytes, lv_txt.o(i.lv_txt_utf8_next))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_txt_utf8_next
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_txt.o(.data)
</UL>
<P><STRONG><a name="[1e]"></a>lv_txt_utf8_prev</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, lv_txt.o(i.lv_txt_utf8_prev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = lv_txt_utf8_prev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_txt.o(.data)
</UL>
<P><STRONG><a name="[1a]"></a>lv_txt_utf8_size</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, lv_txt.o(i.lv_txt_utf8_size))
<BR>[Address Reference Count : 1]<UL><LI> lv_txt.o(.data)
</UL>
<P><STRONG><a name="[2b0]"></a>draw_indic</STRONG> (Thumb, 1562 bytes, Stack size 408 bytes, lv_bar.o(i.draw_indic))
<BR><BR>[Stack]<UL><LI>Max Depth = 792<LI>Call Chain = draw_indic &rArr; lv_draw_mask_radius_init &rArr; circ_calc_aa4 &rArr; lv_mem_buf_get &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_draw_ctx
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw_dsc_init
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect_dsc_init
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius_init
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_free_param
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_add
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_coords
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_remove_id
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_width
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_height
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_event
</UL>

<P><STRONG><a name="[2b6]"></a>lv_area_copy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lv_bar.o(i.lv_area_copy))
<BR><BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_indic
</UL>

<P><STRONG><a name="[7f]"></a>lv_area_get_height</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lv_bar.o(i.lv_area_get_height))
<BR><BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_indic
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_bar.o(i.draw_indic)
</UL>
<P><STRONG><a name="[7e]"></a>lv_area_get_width</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lv_bar.o(i.lv_area_get_width))
<BR><BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_indic
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_bar.o(i.draw_indic)
</UL>
<P><STRONG><a name="[8a]"></a>lv_bar_anim</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, lv_bar.o(i.lv_bar_anim))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = lv_bar_anim &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; _lv_inv_area &rArr; _lv_area_is_in &rArr; _lv_area_is_point_on &rArr;  _lv_area_is_point_on (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_bar.o(i.lv_bar_set_value_with_anim)
</UL>
<P><STRONG><a name="[8b]"></a>lv_bar_anim_ready</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, lv_bar.o(i.lv_bar_anim_ready))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = lv_bar_anim_ready &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; _lv_inv_area &rArr; _lv_area_is_in &rArr; _lv_area_is_point_on &rArr;  _lv_area_is_point_on (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_bar.o(i.lv_bar_set_value_with_anim)
</UL>
<P><STRONG><a name="[d0]"></a>lv_bar_constructor</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, lv_bar.o(i.lv_bar_constructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = lv_bar_constructor &rArr; lv_bar_set_value &rArr; lv_bar_set_value_with_anim &rArr; lv_anim_start &rArr; _lv_ll_ins_head &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_init_anim
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_value
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_bar.o(.constdata)
</UL>
<P><STRONG><a name="[d1]"></a>lv_bar_destructor</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lv_bar.o(i.lv_bar_destructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = lv_bar_destructor &rArr; lv_anim_del &rArr; lv_mem_free &rArr; lv_tlsf_free &rArr; block_merge_prev &rArr; block_absorb &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_bar.o(.constdata)
</UL>
<P><STRONG><a name="[d2]"></a>lv_bar_event</STRONG> (Thumb, 246 bytes, Stack size 56 bytes, lv_bar.o(i.lv_bar_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 848<LI>Call Chain = lv_bar_event &rArr; draw_indic &rArr; lv_draw_mask_radius_init &rArr; circ_calc_aa4 &rArr; lv_mem_buf_get &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event_base
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_param
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_code
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_calculate_ext_draw_size
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_indic
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_bar.o(.constdata)
</UL>
<P><STRONG><a name="[39e]"></a>lv_bar_init_anim</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lv_bar.o(i.lv_bar_init_anim))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_constructor
</UL>

<P><STRONG><a name="[3a4]"></a>lv_bar_set_value_with_anim</STRONG> (Thumb, 144 bytes, Stack size 104 bytes, lv_bar.o(i.lv_bar_set_value_with_anim))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = lv_bar_set_value_with_anim &rArr; lv_anim_start &rArr; _lv_ll_ins_head &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_init
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_value
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_start_value
</UL>

<P><STRONG><a name="[2b5]"></a>lv_obj_get_style_pad_bottom</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_bar.o(i.lv_obj_get_style_pad_bottom))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_pad_bottom &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_event
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_indic
</UL>

<P><STRONG><a name="[2b2]"></a>lv_obj_get_style_pad_left</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_bar.o(i.lv_obj_get_style_pad_left))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_pad_left &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_event
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_indic
</UL>

<P><STRONG><a name="[2b3]"></a>lv_obj_get_style_pad_right</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_bar.o(i.lv_obj_get_style_pad_right))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_pad_right &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_event
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_indic
</UL>

<P><STRONG><a name="[2b4]"></a>lv_obj_get_style_pad_top</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_bar.o(i.lv_obj_get_style_pad_top))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_pad_top &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_event
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_indic
</UL>

<P><STRONG><a name="[d3]"></a>lv_btn_constructor</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_btn.o(i.lv_btn_constructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 372<LI>Call Chain = lv_btn_constructor &rArr; lv_obj_clear_flag &rArr; lv_obj_get_scrollbar_area &rArr; lv_obj_get_scroll_left &rArr; lv_obj_get_style_pad_right &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_btn.o(.constdata)
</UL>
<P><STRONG><a name="[1e3]"></a>allocate_btn_areas_and_controls</STRONG> (Thumb, 174 bytes, Stack size 24 bytes, lv_btnmatrix.o(i.allocate_btn_areas_and_controls))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = allocate_btn_areas_and_controls &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memset_00
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
</UL>

<P><STRONG><a name="[2ce]"></a>button_get_checked</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_btnmatrix.o(i.button_get_checked))
<BR><BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
</UL>

<P><STRONG><a name="[3ac]"></a>button_is_checkable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_btnmatrix.o(i.button_is_checkable))
<BR><BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
</UL>

<P><STRONG><a name="[3af]"></a>button_is_checked</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_btnmatrix.o(i.button_is_checked))
<BR><BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
</UL>

<P><STRONG><a name="[3aa]"></a>button_is_click_trig</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_btnmatrix.o(i.button_is_click_trig))
<BR><BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
</UL>

<P><STRONG><a name="[2cd]"></a>button_is_hidden</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_btnmatrix.o(i.button_is_hidden))
<BR><BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
</UL>

<P><STRONG><a name="[2cf]"></a>button_is_inactive</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_btnmatrix.o(i.button_is_inactive))
<BR><BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
</UL>

<P><STRONG><a name="[345]"></a>button_is_popover</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_btnmatrix.o(i.button_is_popover))
<BR><BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;has_popovers_in_top_row
</UL>

<P><STRONG><a name="[2d1]"></a>button_is_recolor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_btnmatrix.o(i.button_is_recolor))
<BR><BR>[Called By]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
</UL>

<P><STRONG><a name="[3ae]"></a>button_is_repeat_disabled</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_btnmatrix.o(i.button_is_repeat_disabled))
<BR><BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
</UL>

<P><STRONG><a name="[2c8]"></a>draw_main</STRONG> (Thumb, 1040 bytes, Stack size 360 bytes, lv_btnmatrix.o(i.draw_main))
<BR><BR>[Stack]<UL><LI>Max Depth = 912<LI>Call Chain = draw_main &rArr; lv_draw_label &rArr; lv_txt_get_size &rArr; _lv_txt_get_next_line &rArr; lv_txt_get_next_word &rArr; lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_draw_ctx
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw_dsc_init
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect_dsc_init
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_coords
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memcpy
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_label_dsc
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_size
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label_dsc_init
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_width
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_height
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_copy
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_is_recolor
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_is_inactive
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_is_hidden
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_get_checked
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
</UL>

<P><STRONG><a name="[32a]"></a>get_button_from_point</STRONG> (Thumb, 508 bytes, Stack size 72 bytes, lv_btnmatrix.o(i.get_button_from_point))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = get_button_from_point &rArr; lv_obj_get_style_pad_top &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_point_on
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_coords
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_row
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_column
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
</UL>

<P><STRONG><a name="[3b1]"></a>get_button_width</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lv_btnmatrix.o(i.get_button_width))
<BR><BR>[Called By]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
</UL>

<P><STRONG><a name="[344]"></a>has_popovers_in_top_row</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, lv_btnmatrix.o(i.has_popovers_in_top_row))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = has_popovers_in_top_row
</UL>
<BR>[Calls]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_is_popover
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
</UL>

<P><STRONG><a name="[37d]"></a>invalidate_button_area</STRONG> (Thumb, 252 bytes, Stack size 48 bytes, lv_btnmatrix.o(i.invalidate_button_area))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = invalidate_button_area &rArr; lv_obj_invalidate_area &rArr; _lv_inv_area &rArr; _lv_area_is_in &rArr; _lv_area_is_point_on &rArr;  _lv_area_is_point_on (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_disp
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_dpi
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_coords
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_row
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_column
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_height
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_selected_btn
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_btn_ctrl
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_clear_btn_ctrl
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
</UL>

<P><STRONG><a name="[2d0]"></a>lv_area_copy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lv_btnmatrix.o(i.lv_area_copy))
<BR><BR>[Called By]<UL><LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidate_button_area
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_button_from_point
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
</UL>

<P><STRONG><a name="[2d2]"></a>lv_area_get_height</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lv_btnmatrix.o(i.lv_area_get_height))
<BR><BR>[Called By]<UL><LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidate_button_area
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
</UL>

<P><STRONG><a name="[2d3]"></a>lv_area_get_width</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lv_btnmatrix.o(i.lv_area_get_width))
<BR><BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
</UL>

<P><STRONG><a name="[d4]"></a>lv_btnmatrix_constructor</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, lv_btnmatrix.o(i.lv_btnmatrix_constructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = lv_btnmatrix_constructor &rArr; lv_btnmatrix_set_map &rArr; lv_obj_refresh_ext_draw_size &rArr; lv_obj_allocate_spec_attr &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_btnmatrix.o(.constdata)
</UL>
<P><STRONG><a name="[d5]"></a>lv_btnmatrix_destructor</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, lv_btnmatrix.o(i.lv_btnmatrix_destructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = lv_btnmatrix_destructor &rArr; lv_mem_free &rArr; lv_tlsf_free &rArr; block_merge_prev &rArr; block_absorb &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_btnmatrix.o(.constdata)
</UL>
<P><STRONG><a name="[d6]"></a>lv_btnmatrix_event</STRONG> (Thumb, 1736 bytes, Stack size 56 bytes, lv_btnmatrix.o(i.lv_btnmatrix_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 968<LI>Call Chain = lv_btnmatrix_event &rArr; draw_main &rArr; lv_draw_label &rArr; lv_txt_get_size &rArr; _lv_txt_get_next_line &rArr; lv_txt_get_next_word &rArr; lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_reset_long_press
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_point
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_group
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_type
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_next
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_get_editing
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_act
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event_base
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_param
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_code
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_height
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;make_one_button_checked
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_column
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_width
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidate_button_area
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;has_popovers_in_top_row
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_button_from_point
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_is_repeat_disabled
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_is_popover
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_is_inactive
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_is_hidden
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_is_click_trig
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_is_checked
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_is_checkable
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;button_get_checked
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_btnmatrix.o(.constdata)
</UL>
<P><STRONG><a name="[2ca]"></a>lv_obj_get_style_pad_bottom</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_btnmatrix.o(i.lv_obj_get_style_pad_bottom))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_pad_bottom &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_button_from_point
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
</UL>

<P><STRONG><a name="[32c]"></a>lv_obj_get_style_pad_column</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_btnmatrix.o(i.lv_obj_get_style_pad_column))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_pad_column &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidate_button_area
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_button_from_point
</UL>

<P><STRONG><a name="[2cb]"></a>lv_obj_get_style_pad_left</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_btnmatrix.o(i.lv_obj_get_style_pad_left))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_pad_left &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_button_from_point
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
</UL>

<P><STRONG><a name="[2cc]"></a>lv_obj_get_style_pad_right</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_btnmatrix.o(i.lv_obj_get_style_pad_right))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_pad_right &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_button_from_point
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
</UL>

<P><STRONG><a name="[32b]"></a>lv_obj_get_style_pad_row</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_btnmatrix.o(i.lv_obj_get_style_pad_row))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_pad_row &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidate_button_area
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_button_from_point
</UL>

<P><STRONG><a name="[2c9]"></a>lv_obj_get_style_pad_top</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_btnmatrix.o(i.lv_obj_get_style_pad_top))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_pad_top &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_button_from_point
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
</UL>

<P><STRONG><a name="[3ad]"></a>make_one_button_checked</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, lv_btnmatrix.o(i.make_one_button_checked))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = make_one_button_checked &rArr; lv_btnmatrix_set_btn_ctrl &rArr; lv_btnmatrix_clear_btn_ctrl_all &rArr; lv_btnmatrix_clear_btn_ctrl &rArr; lv_obj_refresh_ext_draw_size &rArr; lv_obj_allocate_spec_attr &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_btn_ctrl
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_has_btn_ctrl
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_clear_btn_ctrl_all
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
</UL>

<P><STRONG><a name="[d7]"></a>lv_checkbox_constructor</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, lv_checkbox.o(i.lv_checkbox_constructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 372<LI>Call Chain = lv_checkbox_constructor &rArr; lv_obj_add_flag &rArr; lv_obj_get_scrollbar_area &rArr; lv_obj_get_scroll_left &rArr; lv_obj_get_style_pad_right &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_checkbox.o(.constdata)
</UL>
<P><STRONG><a name="[d8]"></a>lv_checkbox_destructor</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lv_checkbox.o(i.lv_checkbox_destructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = lv_checkbox_destructor &rArr; lv_mem_free &rArr; lv_tlsf_free &rArr; block_merge_prev &rArr; block_absorb &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_checkbox.o(.constdata)
</UL>
<P><STRONG><a name="[3b8]"></a>lv_checkbox_draw</STRONG> (Thumb, 606 bytes, Stack size 288 bytes, lv_checkbox.o(i.lv_checkbox_draw))
<BR><BR>[Stack]<UL><LI>Max Depth = 840<LI>Call Chain = lv_checkbox_draw &rArr; lv_draw_label &rArr; lv_txt_get_size &rArr; _lv_txt_get_next_line &rArr; lv_txt_get_next_word &rArr; lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_draw_ctx
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw_dsc_init
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect_dsc_init
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_label_dsc
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_size
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label_dsc_init
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_line_space
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_letter_space
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_font
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_column
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_event
</UL>

<P><STRONG><a name="[d9]"></a>lv_checkbox_event</STRONG> (Thumb, 316 bytes, Stack size 88 bytes, lv_checkbox.o(i.lv_checkbox_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 928<LI>Call Chain = lv_checkbox_event &rArr; lv_checkbox_draw &rArr; lv_draw_label &rArr; lv_txt_get_size &rArr; _lv_txt_get_next_line &rArr; lv_txt_get_next_word &rArr; lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event_base
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_param
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_code
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_calculate_ext_draw_size
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_size
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_line_space
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_letter_space
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_font
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_column
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_draw
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_checkbox.o(.constdata)
</UL>
<P><STRONG><a name="[3be]"></a>lv_obj_get_style_pad_bottom</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_checkbox.o(i.lv_obj_get_style_pad_bottom))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_pad_bottom &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_event
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_draw
</UL>

<P><STRONG><a name="[3bc]"></a>lv_obj_get_style_pad_column</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_checkbox.o(i.lv_obj_get_style_pad_column))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_pad_column &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_event
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_draw
</UL>

<P><STRONG><a name="[3bb]"></a>lv_obj_get_style_pad_left</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_checkbox.o(i.lv_obj_get_style_pad_left))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_pad_left &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_event
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_draw
</UL>

<P><STRONG><a name="[3bd]"></a>lv_obj_get_style_pad_right</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_checkbox.o(i.lv_obj_get_style_pad_right))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_pad_right &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_event
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_draw
</UL>

<P><STRONG><a name="[3ba]"></a>lv_obj_get_style_pad_top</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_checkbox.o(i.lv_obj_get_style_pad_top))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_pad_top &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_event
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_draw
</UL>

<P><STRONG><a name="[3b9]"></a>lv_obj_get_style_text_font</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, lv_checkbox.o(i.lv_obj_get_style_text_font))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_text_font &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_event
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_draw
</UL>

<P><STRONG><a name="[3c0]"></a>lv_obj_get_style_text_letter_space</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_checkbox.o(i.lv_obj_get_style_text_letter_space))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_text_letter_space &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_event
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_draw
</UL>

<P><STRONG><a name="[3bf]"></a>lv_obj_get_style_text_line_space</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_checkbox.o(i.lv_obj_get_style_text_line_space))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_text_line_space &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_event
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_draw
</UL>

<P><STRONG><a name="[215]"></a>btn_release_handler</STRONG> (Thumb, 134 bytes, Stack size 32 bytes, lv_dropdown.o(i.btn_release_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 776<LI>Call Chain = btn_release_handler &rArr; lv_dropdown_open &rArr; lv_obj_align_to &rArr; lv_obj_update_layout &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_scroll_obj
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_group
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_type
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_set_editing
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_act
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_is_open
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_close
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
</UL>

<P><STRONG><a name="[295]"></a>draw_box</STRONG> (Thumb, 216 bytes, Stack size 128 bytes, lv_dropdown.o(i.draw_box))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = draw_box &rArr; lv_obj_init_draw_rect_dsc &rArr; lv_obj_get_style_text_font &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect_dsc_init
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_line_space
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_font
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_line_height
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_label
</UL>
<BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_list
</UL>

<P><STRONG><a name="[29d]"></a>draw_box_label</STRONG> (Thumb, 264 bytes, Stack size 104 bytes, lv_dropdown.o(i.draw_box_label))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = draw_box_label &rArr; lv_draw_label &rArr; lv_txt_get_size &rArr; _lv_txt_get_next_line &rArr; lv_txt_get_next_word &rArr; lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_label_dsc
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label_dsc_init
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_text
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_line_space
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_line_height
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_label
</UL>
<BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_list
</UL>

<P><STRONG><a name="[2c7]"></a>draw_list</STRONG> (Thumb, 188 bytes, Stack size 48 bytes, lv_dropdown.o(i.draw_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 704<LI>Call Chain = draw_list &rArr; draw_box_label &rArr; lv_draw_label &rArr; lv_txt_get_size &rArr; _lv_txt_get_next_line &rArr; lv_txt_get_next_word &rArr; lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_draw_ctx
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_box_label
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_box
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_list_event
</UL>

<P><STRONG><a name="[2d4]"></a>draw_main</STRONG> (Thumb, 762 bytes, Stack size 176 bytes, lv_dropdown.o(i.draw_main))
<BR><BR>[Stack]<UL><LI>Max Depth = 968<LI>Call Chain = draw_main &rArr; lv_draw_img &rArr; decode_and_draw &rArr; show_error &rArr; lv_draw_label &rArr; lv_txt_get_size &rArr; _lv_txt_get_next_line &rArr; lv_txt_get_next_word &rArr; lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_draw_ctx
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_src_get_type
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_label_dsc
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_img_dsc
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_get_info
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img_dsc_init
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_size
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label_dsc_init
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_get_selected_str
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_border_width
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
</UL>

<P><STRONG><a name="[32f]"></a>get_id_on_point</STRONG> (Thumb, 106 bytes, Stack size 40 bytes, lv_dropdown.o(i.get_id_on_point))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = get_id_on_point &rArr; lv_obj_get_style_text_line_space &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_line_space
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_font
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_line_height
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_label
</UL>
<BR>[Called By]<UL><LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_release_handler
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_press_handler
</UL>

<P><STRONG><a name="[299]"></a>get_label</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, lv_dropdown.o(i.get_label))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = get_label
</UL>
<BR>[Calls]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child
</UL>
<BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;position_to_selected
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_id_on_point
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_box_label
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_box
</UL>

<P><STRONG><a name="[395]"></a>list_press_handler</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, lv_dropdown.o(i.list_press_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = list_press_handler &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; _lv_inv_area &rArr; _lv_area_is_in &rArr; _lv_area_is_point_on &rArr;  _lv_area_is_point_on (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_point
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_type
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_act
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_id_on_point
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_list_event
</UL>

<P><STRONG><a name="[396]"></a>list_release_handler</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, lv_dropdown.o(i.list_release_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 544<LI>Call Chain = list_release_handler &rArr; lv_dropdown_close &rArr; lv_obj_clear_state &rArr; lv_obj_set_state &rArr; _lv_obj_style_create_transition &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_point
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_group
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_type
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_set_editing
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_get_editing
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_act
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_close
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_id_on_point
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_list_event
</UL>

<P><STRONG><a name="[da]"></a>lv_dropdown_constructor</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, lv_dropdown.o(i.lv_dropdown_constructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = lv_dropdown_constructor &rArr; lv_dropdown_list_create &rArr; lv_obj_class_init_obj &rArr; lv_theme_apply &rArr; lv_obj_remove_style &rArr; trans_del &rArr; lv_style_remove_prop &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_screen
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_set_options_static
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_list_create
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_dropdown.o(.constdata)
</UL>
<P><STRONG><a name="[db]"></a>lv_dropdown_destructor</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, lv_dropdown.o(i.lv_dropdown_destructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = lv_dropdown_destructor &rArr; lv_obj_del &rArr; lv_obj_readjust_scroll &rArr; lv_obj_scroll_by &rArr; lv_anim_start &rArr; _lv_ll_ins_head &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_dropdown.o(.constdata)
</UL>
<P><STRONG><a name="[dc]"></a>lv_dropdown_event</STRONG> (Thumb, 364 bytes, Stack size 40 bytes, lv_dropdown.o(i.lv_dropdown_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 1008<LI>Call Chain = lv_dropdown_event &rArr; draw_main &rArr; lv_draw_img &rArr; decode_and_draw &rArr; show_error &rArr; lv_draw_label &rArr; lv_txt_get_size &rArr; _lv_txt_get_next_line &rArr; lv_txt_get_next_word &rArr; lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_obj_act
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_group
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_type
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_get_editing
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_act
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event_base
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_param
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_code
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_self_size
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_is_open
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_close
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;position_to_selected
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_font
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_line_height
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn_release_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_dropdown.o(.constdata)
</UL>
<P><STRONG><a name="[3f1]"></a>lv_dropdown_list_create</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, lv_dropdown.o(i.lv_dropdown_list_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = lv_dropdown_list_create &rArr; lv_obj_class_init_obj &rArr; lv_theme_apply &rArr; lv_obj_remove_style &rArr; trans_del &rArr; lv_style_remove_prop &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_constructor
</UL>

<P><STRONG><a name="[df]"></a>lv_dropdown_list_event</STRONG> (Thumb, 136 bytes, Stack size 40 bytes, lv_dropdown.o(i.lv_dropdown_list_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 744<LI>Call Chain = lv_dropdown_list_event &rArr; draw_list &rArr; draw_box_label &rArr; lv_draw_label &rArr; lv_txt_get_size &rArr; _lv_txt_get_next_line &rArr; lv_txt_get_next_word &rArr; lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_scroll_obj
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_act
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event_base
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_code
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_release_handler
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_press_handler
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_list
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_dropdown.o(.constdata)
</UL>
<P><STRONG><a name="[dd]"></a>lv_dropdownlist_constructor</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, lv_dropdown.o(i.lv_dropdownlist_constructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = lv_dropdownlist_constructor &rArr; lv_label_create &rArr; lv_obj_class_init_obj &rArr; lv_theme_apply &rArr; lv_obj_remove_style &rArr; trans_del &rArr; lv_style_remove_prop &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_create
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_dropdown.o(.constdata)
</UL>
<P><STRONG><a name="[de]"></a>lv_dropdownlist_destructor</STRONG> (Thumb, 16 bytes, Stack size 12 bytes, lv_dropdown.o(i.lv_dropdownlist_destructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = lv_dropdownlist_destructor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_dropdown.o(.constdata)
</UL>
<P><STRONG><a name="[298]"></a>lv_font_get_line_height</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_dropdown.o(i.lv_font_get_line_height))
<BR><BR>[Called By]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;position_to_selected
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_id_on_point
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_box_label
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_box
</UL>

<P><STRONG><a name="[2d5]"></a>lv_obj_get_style_border_width</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_dropdown.o(i.lv_obj_get_style_border_width))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_border_width &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
</UL>

<P><STRONG><a name="[2d6]"></a>lv_obj_get_style_pad_top</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_dropdown.o(i.lv_obj_get_style_pad_top))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_pad_top &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
</UL>

<P><STRONG><a name="[296]"></a>lv_obj_get_style_text_font</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, lv_dropdown.o(i.lv_obj_get_style_text_font))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_text_font &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;position_to_selected
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_id_on_point
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_box
</UL>

<P><STRONG><a name="[297]"></a>lv_obj_get_style_text_line_space</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_dropdown.o(i.lv_obj_get_style_text_line_space))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_text_line_space &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;position_to_selected
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_id_on_point
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_box_label
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_box
</UL>

<P><STRONG><a name="[3f5]"></a>position_to_selected</STRONG> (Thumb, 108 bytes, Stack size 40 bytes, lv_dropdown.o(i.position_to_selected))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = position_to_selected &rArr; lv_obj_scroll_to_y &rArr; lv_obj_scroll_by_bounded &rArr;  lv_obj_update_layout (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to_y
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_height
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_line_space
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_font
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_line_height
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_label
</UL>
<BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
</UL>

<P><STRONG><a name="[2d9]"></a>draw_main</STRONG> (Thumb, 672 bytes, Stack size 104 bytes, lv_label.o(i.draw_main))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = draw_main &rArr; lv_draw_label &rArr; lv_txt_get_size &rArr; _lv_txt_get_next_line &rArr; lv_txt_get_next_word &rArr; lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_draw_ctx
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_top
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_coords
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_label_dsc
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_move
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_size
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label_dsc_init
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_glyph_width
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_width
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_line_height
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_width
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_height
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_text_selection_start
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_text_selection_end
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_event
</UL>

<P><STRONG><a name="[438]"></a>lv_anim_set_exec_cb</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lv_label.o(i.lv_anim_set_exec_cb))
<BR><BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
</UL>

<P><STRONG><a name="[43b]"></a>lv_anim_set_playback_time</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lv_label.o(i.lv_anim_set_playback_time))
<BR><BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
</UL>

<P><STRONG><a name="[436]"></a>lv_anim_set_repeat_count</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lv_label.o(i.lv_anim_set_repeat_count))
<BR><BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
</UL>

<P><STRONG><a name="[43a]"></a>lv_anim_set_time</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lv_label.o(i.lv_anim_set_time))
<BR><BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
</UL>

<P><STRONG><a name="[437]"></a>lv_anim_set_values</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_label.o(i.lv_anim_set_values))
<BR><BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
</UL>

<P><STRONG><a name="[435]"></a>lv_anim_set_var</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lv_label.o(i.lv_anim_set_var))
<BR><BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
</UL>

<P><STRONG><a name="[2df]"></a>lv_area_get_height</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lv_label.o(i.lv_area_get_height))
<BR><BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
</UL>

<P><STRONG><a name="[2de]"></a>lv_area_get_width</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lv_label.o(i.lv_area_get_width))
<BR><BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_is_char_under_pos
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_pos
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_on
</UL>

<P><STRONG><a name="[2e1]"></a>lv_font_get_line_height</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_label.o(i.lv_font_get_line_height))
<BR><BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_event
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_is_char_under_pos
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_pos
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_on
</UL>

<P><STRONG><a name="[e0]"></a>lv_label_constructor</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, lv_label.o(i.lv_label_constructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = lv_label_constructor &rArr; lv_label_set_text &rArr; lv_label_refr_text &rArr; lv_label_get_letter_on &rArr; _lv_txt_get_next_line &rArr; lv_txt_get_next_word &rArr; lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_long_mode
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_label.o(.constdata)
</UL>
<P><STRONG><a name="[e1]"></a>lv_label_destructor</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, lv_label.o(i.lv_label_destructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = lv_label_destructor &rArr; lv_label_dot_tmp_free &rArr; lv_mem_free &rArr; lv_tlsf_free &rArr; block_merge_prev &rArr; block_absorb &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_dot_tmp_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_label.o(.constdata)
</UL>
<P><STRONG><a name="[429]"></a>lv_label_dot_tmp_free</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, lv_label.o(i.lv_label_dot_tmp_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = lv_label_dot_tmp_free &rArr; lv_mem_free &rArr; lv_tlsf_free &rArr; block_merge_prev &rArr; block_absorb &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
</UL>
<BR>[Called By]<UL><LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_dot_tmp
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_revert_dots
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_destructor
</UL>

<P><STRONG><a name="[e2]"></a>lv_label_event</STRONG> (Thumb, 328 bytes, Stack size 64 bytes, lv_label.o(i.lv_label_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 720<LI>Call Chain = lv_label_event &rArr; draw_main &rArr; lv_draw_label &rArr; lv_txt_get_size &rArr; _lv_txt_get_next_line &rArr; lv_txt_get_next_word &rArr; lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event_base
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_set_ext_draw_size
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_param
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_code
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_width
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_size
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_width
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_line_space
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_letter_space
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_font
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_revert_dots
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_line_height
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_label.o(.constdata)
</UL>
<P><STRONG><a name="[43d]"></a>lv_label_get_dot_tmp</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lv_label.o(i.lv_label_get_dot_tmp))
<BR><BR>[Called By]<UL><LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_revert_dots
</UL>

<P><STRONG><a name="[42b]"></a>lv_label_refr_text</STRONG> (Thumb, 1444 bytes, Stack size 136 bytes, lv_label.o(i.lv_label_refr_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = lv_label_refr_text &rArr; lv_label_get_letter_on &rArr; _lv_txt_get_next_line &rArr; lv_txt_get_next_word &rArr; lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_disp
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_init
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_self_size
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_dpi
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_speed_to_time
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_get
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_coords
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_size
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_glyph_width
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_width
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_line_space
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_letter_space
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_font
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_anim_speed
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_dot_tmp
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_line_height
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_width
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_height
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_set_var
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_set_values
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_set_time
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_set_repeat_count
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_set_playback_time
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_set_exec_cb
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_on
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text_fmt
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_long_mode
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_event
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text_static
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
</UL>

<P><STRONG><a name="[42a]"></a>lv_label_revert_dots</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, lv_label.o(i.lv_label_revert_dots))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = lv_label_revert_dots &rArr; lv_label_dot_tmp_free &rArr; lv_mem_free &rArr; lv_tlsf_free &rArr; block_merge_prev &rArr; block_absorb &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_dot_tmp
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_dot_tmp_free
</UL>
<BR>[Called By]<UL><LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_long_mode
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_event
</UL>

<P><STRONG><a name="[43c]"></a>lv_label_set_dot_tmp</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, lv_label.o(i.lv_label_set_dot_tmp))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = lv_label_set_dot_tmp &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memcpy
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_dot_tmp_free
</UL>
<BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
</UL>

<P><STRONG><a name="[434]"></a>lv_obj_get_style_anim_speed</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, lv_label.o(i.lv_obj_get_style_anim_speed))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_anim_speed &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
</UL>

<P><STRONG><a name="[42c]"></a>lv_obj_get_style_text_font</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, lv_label.o(i.lv_obj_get_style_text_font))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_text_font &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_event
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_is_char_under_pos
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_pos
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_on
</UL>

<P><STRONG><a name="[42d]"></a>lv_obj_get_style_text_letter_space</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_label.o(i.lv_obj_get_style_text_letter_space))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_text_letter_space &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_event
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_is_char_under_pos
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_pos
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_on
</UL>

<P><STRONG><a name="[42e]"></a>lv_obj_get_style_text_line_space</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_label.o(i.lv_obj_get_style_text_line_space))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_text_line_space &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_event
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_is_char_under_pos
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_pos
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_on
</UL>

<P><STRONG><a name="[2db]"></a>lv_obj_get_style_width</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_label.o(i.lv_obj_get_style_width))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_width &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_event
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_is_char_under_pos
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_pos
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_on
</UL>

<P><STRONG><a name="[a2]"></a>set_ofs_x_anim</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, lv_label.o(i.set_ofs_x_anim))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = set_ofs_x_anim &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; _lv_inv_area &rArr; _lv_area_is_in &rArr; _lv_area_is_point_on &rArr;  _lv_area_is_point_on (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
</UL>
<BR>[Address Reference Count : 2]<UL><LI> lv_label.o(i.lv_label_refr_text)
<LI> lv_label.o(i.lv_label_set_long_mode)
</UL>
<P><STRONG><a name="[a3]"></a>set_ofs_y_anim</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, lv_label.o(i.set_ofs_y_anim))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = set_ofs_y_anim &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; _lv_inv_area &rArr; _lv_area_is_in &rArr; _lv_area_is_point_on &rArr;  _lv_area_is_point_on (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
</UL>
<BR>[Address Reference Count : 2]<UL><LI> lv_label.o(i.lv_label_refr_text)
<LI> lv_label.o(i.lv_label_set_long_mode)
</UL>
<P><STRONG><a name="[2bd]"></a>draw_label</STRONG> (Thumb, 248 bytes, Stack size 96 bytes, lv_roller.o(i.draw_label))
<BR><BR>[Stack]<UL><LI>Max Depth = 648<LI>Call Chain = draw_label &rArr; lv_draw_label &rArr; lv_txt_get_size &rArr; _lv_txt_get_next_line &rArr; lv_txt_get_next_word &rArr; lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_draw_ctx
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_label_dsc
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label_dsc_init
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_text
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sel_area
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_label_event
</UL>

<P><STRONG><a name="[2e2]"></a>draw_main</STRONG> (Thumb, 476 bytes, Stack size 144 bytes, lv_roller.o(i.draw_main))
<BR><BR>[Stack]<UL><LI>Max Depth = 696<LI>Call Chain = draw_main &rArr; lv_draw_label &rArr; lv_txt_get_size &rArr; _lv_txt_get_next_line &rArr; lv_txt_get_next_word &rArr; lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_draw_ctx
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_code
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect_dsc_init
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_label_dsc
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_size
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label_dsc_init
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_text
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_font
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_border_width
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sel_area
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_label
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
</UL>

<P><STRONG><a name="[2e4]"></a>get_label</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lv_roller.o(i.get_label))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = get_label
</UL>
<BR>[Calls]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child
</UL>
<BR>[Called By]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_set_options
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;release_handler
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_position
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inf_normalize
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_selected_label_width
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
</UL>

<P><STRONG><a name="[2be]"></a>get_sel_area</STRONG> (Thumb, 134 bytes, Stack size 56 bytes, lv_roller.o(i.get_sel_area))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = get_sel_area &rArr; lv_obj_get_style_text_line_space &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_coords
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_line_space
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_font
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_line_height
</UL>
<BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_label
</UL>

<P><STRONG><a name="[340]"></a>get_selected_label_width</STRONG> (Thumb, 98 bytes, Stack size 48 bytes, lv_roller.o(i.get_selected_label_width))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = get_selected_label_width &rArr; lv_txt_get_size &rArr; _lv_txt_get_next_line &rArr; lv_txt_get_next_word &rArr; lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_size
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_text
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_font
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_label
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_label_event
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
</UL>

<P><STRONG><a name="[369]"></a>inf_normalize</STRONG> (Thumb, 174 bytes, Stack size 48 bytes, lv_roller.o(i.inf_normalize))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = inf_normalize &rArr; lv_obj_set_y &rArr; lv_obj_set_style_y &rArr; lv_obj_set_local_style_prop &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_y
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_height
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_line_space
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_font
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_line_height
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_label
</UL>
<BR>[Called By]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_set_options
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_anim_ready_cb
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_position
</UL>

<P><STRONG><a name="[33e]"></a>lv_font_get_line_height</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_roller.o(i.lv_font_get_line_height))
<BR><BR>[Called By]<UL><LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;release_handler
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_position
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inf_normalize
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sel_area
</UL>

<P><STRONG><a name="[2e6]"></a>lv_obj_get_style_border_width</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_roller.o(i.lv_obj_get_style_border_width))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_border_width &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
</UL>

<P><STRONG><a name="[2e5]"></a>lv_obj_get_style_text_font</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, lv_roller.o(i.lv_obj_get_style_text_font))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_text_font &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;release_handler
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_position
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inf_normalize
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_selected_label_width
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sel_area
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
</UL>

<P><STRONG><a name="[33f]"></a>lv_obj_get_style_text_line_space</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_roller.o(i.lv_obj_get_style_text_line_space))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_text_line_space &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;release_handler
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_position
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inf_normalize
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sel_area
</UL>

<P><STRONG><a name="[e3]"></a>lv_roller_constructor</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, lv_roller.o(i.lv_roller_constructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 544<LI>Call Chain = lv_roller_constructor &rArr; lv_roller_set_options &rArr; lv_label_set_text &rArr; lv_label_refr_text &rArr; lv_label_get_letter_on &rArr; _lv_txt_get_next_line &rArr; lv_txt_get_next_word &rArr; lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_set_options
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_roller.o(.constdata)
</UL>
<P><STRONG><a name="[e4]"></a>lv_roller_event</STRONG> (Thumb, 466 bytes, Stack size 40 bytes, lv_roller.o(i.lv_roller_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 736<LI>Call Chain = lv_roller_event &rArr; draw_main &rArr; lv_draw_label &rArr; lv_txt_get_size &rArr; _lv_txt_get_next_line &rArr; lv_txt_get_next_word &rArr; lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_y
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_vect
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_group
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_type
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_get_editing
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_act
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event_base
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_param
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_code
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_self_size
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_ext_draw_size
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_y
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_set_selected
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;release_handler
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_position
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_selected_label_width
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_label
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_roller.o(.constdata)
</UL>
<P><STRONG><a name="[e5]"></a>lv_roller_label_event</STRONG> (Thumb, 142 bytes, Stack size 40 bytes, lv_roller.o(i.lv_roller_label_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 688<LI>Call Chain = lv_roller_label_event &rArr; draw_label &rArr; lv_draw_label &rArr; lv_txt_get_size &rArr; _lv_txt_get_next_line &rArr; lv_txt_get_next_word &rArr; lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event_base
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_param
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_code
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_position
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_selected_label_width
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_label
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_roller.o(.constdata)
</UL>
<P><STRONG><a name="[4c0]"></a>refr_position</STRONG> (Thumb, 356 bytes, Stack size 136 bytes, lv_roller.o(i.refr_position))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = refr_position &rArr; inf_normalize &rArr; lv_obj_set_y &rArr; lv_obj_set_style_y &rArr; lv_obj_set_local_style_prop &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_y
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_x
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_init
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_y
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_width
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_height
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_calculate_style_text_align
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_text
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_line_space
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_font
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_line_height
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inf_normalize
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_label
</UL>
<BR>[Called By]<UL><LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_set_selected
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_label_event
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
</UL>

<P><STRONG><a name="[4c2]"></a>release_handler</STRONG> (Thumb, 392 bytes, Stack size 64 bytes, lv_roller.o(i.release_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 648<LI>Call Chain = release_handler &rArr; lv_roller_set_selected &rArr; refr_position &rArr; inf_normalize &rArr; lv_obj_set_y &rArr; lv_obj_set_style_y &rArr; lv_obj_set_local_style_prop &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_point
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_group
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_type
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_set_editing
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_get_editing
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_act
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_scroll_throw_predict
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_text
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_set_selected
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_line_space
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_font
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_line_height
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_label
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_on
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
</UL>

<P><STRONG><a name="[bf]"></a>scroll_anim_ready_cb</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, lv_roller.o(i.scroll_anim_ready_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = scroll_anim_ready_cb &rArr; inf_normalize &rArr; lv_obj_set_y &rArr; lv_obj_set_style_y &rArr; lv_obj_set_local_style_prop &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inf_normalize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_roller.o(i.refr_position)
</UL>
<P><STRONG><a name="[ac]"></a>set_y_anim</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, lv_roller.o(i.set_y_anim))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = set_y_anim &rArr; lv_obj_set_y &rArr; lv_obj_set_style_y &rArr; lv_obj_set_local_style_prop &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_y
</UL>
<BR>[Address Reference Count : 2]<UL><LI> lv_roller.o(i.lv_roller_event)
<LI> lv_roller.o(i.refr_position)
</UL>
<P><STRONG><a name="[2b8]"></a>draw_knob</STRONG> (Thumb, 554 bytes, Stack size 240 bytes, lv_slider.o(i.draw_knob))
<BR><BR>[Stack]<UL><LI>Max Depth = 444<LI>Call Chain = draw_knob &rArr; position_knob &rArr; lv_obj_get_style_transform_width &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_draw_ctx
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw_dsc_init
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect_dsc_init
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memcpy
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;position_knob
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_get_mode
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_base_dir
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
</UL>

<P><STRONG><a name="[2bb]"></a>lv_area_copy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lv_slider.o(i.lv_area_copy))
<BR><BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_knob
</UL>

<P><STRONG><a name="[2b9]"></a>lv_obj_get_style_base_dir</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_slider.o(i.lv_obj_get_style_base_dir))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_base_dir &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_knob
</UL>

<P><STRONG><a name="[481]"></a>lv_obj_get_style_pad_bottom</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_slider.o(i.lv_obj_get_style_pad_bottom))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_pad_bottom &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;position_knob
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
</UL>

<P><STRONG><a name="[482]"></a>lv_obj_get_style_pad_left</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_slider.o(i.lv_obj_get_style_pad_left))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_pad_left &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;position_knob
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
</UL>

<P><STRONG><a name="[483]"></a>lv_obj_get_style_pad_right</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_slider.o(i.lv_obj_get_style_pad_right))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_pad_right &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;position_knob
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
</UL>

<P><STRONG><a name="[484]"></a>lv_obj_get_style_pad_top</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_slider.o(i.lv_obj_get_style_pad_top))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_pad_top &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;position_knob
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
</UL>

<P><STRONG><a name="[48d]"></a>lv_obj_get_style_transform_height</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_slider.o(i.lv_obj_get_style_transform_height))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_transform_height &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;position_knob
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
</UL>

<P><STRONG><a name="[48e]"></a>lv_obj_get_style_transform_width</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_slider.o(i.lv_obj_get_style_transform_width))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_transform_width &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;position_knob
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
</UL>

<P><STRONG><a name="[e6]"></a>lv_slider_constructor</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, lv_slider.o(i.lv_slider_constructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 380<LI>Call Chain = lv_slider_constructor &rArr; lv_obj_clear_flag &rArr; lv_obj_get_scrollbar_area &rArr; lv_obj_get_scroll_left &rArr; lv_obj_get_style_pad_right &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_dpi
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_ext_click_area
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_slider.o(.constdata)
</UL>
<P><STRONG><a name="[e7]"></a>lv_slider_event</STRONG> (Thumb, 1858 bytes, Stack size 88 bytes, lv_slider.o(i.lv_slider_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 532<LI>Call Chain = lv_slider_event &rArr; draw_knob &rArr; position_knob &rArr; lv_obj_get_style_transform_width &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_point_on
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_point
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_group
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_type
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_set_editing
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_get_editing
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_act
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event_base
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_param
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_code
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_ext_draw_size
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_calculate_ext_draw_size
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_increase
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_set_value
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_set_left_value
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_get_value
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_get_mode
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_get_left_value
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_transform_width
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_transform_height
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_base_dir
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_copy
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_knob
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_slider.o(.constdata)
</UL>
<P><STRONG><a name="[4c6]"></a>lv_slider_get_left_value</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, lv_slider.o(i.lv_slider_get_left_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_slider_get_left_value
</UL>
<BR>[Calls]<UL><LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_get_start_value
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
</UL>

<P><STRONG><a name="[2bc]"></a>lv_slider_get_mode</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lv_slider.o(i.lv_slider_get_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lv_slider_get_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_get_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_knob
</UL>

<P><STRONG><a name="[4c4]"></a>lv_slider_get_value</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, lv_slider.o(i.lv_slider_get_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_slider_get_value
</UL>
<BR>[Calls]<UL><LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_get_value
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
</UL>

<P><STRONG><a name="[4c7]"></a>lv_slider_set_left_value</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, lv_slider.o(i.lv_slider_set_left_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = lv_slider_set_left_value &rArr; lv_bar_set_start_value &rArr; lv_bar_set_value_with_anim &rArr; lv_anim_start &rArr; _lv_ll_ins_head &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_start_value
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
</UL>

<P><STRONG><a name="[4c5]"></a>lv_slider_set_value</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, lv_slider.o(i.lv_slider_set_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = lv_slider_set_value &rArr; lv_bar_set_value &rArr; lv_bar_set_value_with_anim &rArr; lv_anim_start &rArr; _lv_ll_ins_head &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_value
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
</UL>

<P><STRONG><a name="[2ba]"></a>position_knob</STRONG> (Thumb, 200 bytes, Stack size 56 bytes, lv_slider.o(i.position_knob))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = position_knob &rArr; lv_obj_get_style_transform_width &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_transform_width
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_transform_height
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom
</UL>
<BR>[Called By]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_knob
</UL>

<P><STRONG><a name="[2e7]"></a>draw_main</STRONG> (Thumb, 454 bytes, Stack size 200 bytes, lv_switch.o(i.draw_main))
<BR><BR>[Stack]<UL><LI>Max Depth = 388<LI>Call Chain = draw_main &rArr; lv_obj_init_draw_rect_dsc &rArr; lv_obj_get_style_text_font &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_state
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_draw_ctx
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect_dsc_init
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_event
</UL>

<P><STRONG><a name="[2eb]"></a>lv_obj_get_style_pad_bottom</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_switch.o(i.lv_obj_get_style_pad_bottom))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_pad_bottom &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_event
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
</UL>

<P><STRONG><a name="[2e8]"></a>lv_obj_get_style_pad_left</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_switch.o(i.lv_obj_get_style_pad_left))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_pad_left &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_event
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
</UL>

<P><STRONG><a name="[2e9]"></a>lv_obj_get_style_pad_right</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_switch.o(i.lv_obj_get_style_pad_right))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_pad_right &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_event
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
</UL>

<P><STRONG><a name="[2ea]"></a>lv_obj_get_style_pad_top</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_switch.o(i.lv_obj_get_style_pad_top))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_pad_top &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_event
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
</UL>

<P><STRONG><a name="[ae]"></a>lv_switch_anim_exec_cb</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, lv_switch.o(i.lv_switch_anim_exec_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = lv_switch_anim_exec_cb &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; _lv_inv_area &rArr; _lv_area_is_in &rArr; _lv_area_is_point_on &rArr;  _lv_area_is_point_on (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_switch.o(i.lv_switch_trigger_anim)
</UL>
<P><STRONG><a name="[af]"></a>lv_switch_anim_ready</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, lv_switch.o(i.lv_switch_anim_ready))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = lv_switch_anim_ready &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; _lv_inv_area &rArr; _lv_area_is_in &rArr; _lv_area_is_point_on &rArr;  _lv_area_is_point_on (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_switch.o(i.lv_switch_trigger_anim)
</UL>
<P><STRONG><a name="[e8]"></a>lv_switch_constructor</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, lv_switch.o(i.lv_switch_constructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 372<LI>Call Chain = lv_switch_constructor &rArr; lv_obj_clear_flag &rArr; lv_obj_get_scrollbar_area &rArr; lv_obj_get_scroll_left &rArr; lv_obj_get_style_pad_right &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_switch.o(.constdata)
</UL>
<P><STRONG><a name="[e9]"></a>lv_switch_destructor</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, lv_switch.o(i.lv_switch_destructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = lv_switch_destructor &rArr; lv_anim_del &rArr; lv_mem_free &rArr; lv_tlsf_free &rArr; block_merge_prev &rArr; block_absorb &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_switch.o(.constdata)
</UL>
<P><STRONG><a name="[ea]"></a>lv_switch_event</STRONG> (Thumb, 256 bytes, Stack size 48 bytes, lv_switch.o(i.lv_switch_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 436<LI>Call Chain = lv_switch_event &rArr; draw_main &rArr; lv_obj_init_draw_rect_dsc &rArr; lv_obj_get_style_text_font &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event_base
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_param
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_code
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_calculate_ext_draw_size
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_trigger_anim
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_switch.o(.constdata)
</UL>
<P><STRONG><a name="[501]"></a>lv_switch_trigger_anim</STRONG> (Thumb, 186 bytes, Stack size 96 bytes, lv_switch.o(i.lv_switch_trigger_anim))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = lv_switch_trigger_anim &rArr; lv_anim_start &rArr; _lv_ll_ins_head &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_init
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_state
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_event
</UL>

<P><STRONG><a name="[2ed]"></a>draw_main</STRONG> (Thumb, 1476 bytes, Stack size 424 bytes, lv_table.o(i.draw_main))
<BR><BR>[Stack]<UL><LI>Max Depth = 976<LI>Call Chain = draw_main &rArr; lv_draw_label &rArr; lv_txt_get_size &rArr; _lv_txt_get_next_line &rArr; lv_txt_get_next_word &rArr; lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_draw_ctx
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_y
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_x
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw_dsc_init
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect_dsc_init
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memcpy
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_label_dsc
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_size
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label_dsc_init
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_base_dir
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_event
</UL>

<P><STRONG><a name="[337]"></a>get_pressed_cell</STRONG> (Thumb, 298 bytes, Stack size 40 bytes, lv_table.o(i.get_pressed_cell))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = get_pressed_cell &rArr; lv_obj_get_style_pad_top &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_point
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_type
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_act
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_y
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_x
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_base_dir
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_event
</UL>

<P><STRONG><a name="[33d]"></a>get_row_height</STRONG> (Thumb, 338 bytes, Stack size 88 bytes, lv_table.o(i.get_row_height))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = get_row_height &rArr; lv_txt_get_size &rArr; _lv_txt_get_next_line &rArr; lv_txt_get_next_word &rArr; lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_size
</UL>
<BR>[Called By]<UL><LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_size
</UL>

<P><STRONG><a name="[2f4]"></a>lv_obj_get_style_base_dir</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_table.o(i.lv_obj_get_style_base_dir))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_base_dir &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_pressed_cell
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
</UL>

<P><STRONG><a name="[47e]"></a>lv_obj_get_style_max_height</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_table.o(i.lv_obj_get_style_max_height))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_max_height &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_size
</UL>

<P><STRONG><a name="[47f]"></a>lv_obj_get_style_min_height</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_table.o(i.lv_obj_get_style_min_height))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_min_height &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_size
</UL>

<P><STRONG><a name="[2ef]"></a>lv_obj_get_style_pad_bottom</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_table.o(i.lv_obj_get_style_pad_bottom))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_pad_bottom &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_size
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
</UL>

<P><STRONG><a name="[2f0]"></a>lv_obj_get_style_pad_left</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_table.o(i.lv_obj_get_style_pad_left))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_pad_left &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_size
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_pressed_cell
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
</UL>

<P><STRONG><a name="[2f1]"></a>lv_obj_get_style_pad_right</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_table.o(i.lv_obj_get_style_pad_right))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_pad_right &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_size
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_pressed_cell
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
</UL>

<P><STRONG><a name="[2ee]"></a>lv_obj_get_style_pad_top</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_table.o(i.lv_obj_get_style_pad_top))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_pad_top &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_size
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_pressed_cell
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
</UL>

<P><STRONG><a name="[488]"></a>lv_obj_get_style_text_font</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, lv_table.o(i.lv_obj_get_style_text_font))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_text_font &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_size
</UL>

<P><STRONG><a name="[48a]"></a>lv_obj_get_style_text_letter_space</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_table.o(i.lv_obj_get_style_text_letter_space))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_text_letter_space &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_size
</UL>

<P><STRONG><a name="[48b]"></a>lv_obj_get_style_text_line_space</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_table.o(i.lv_obj_get_style_text_line_space))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_text_line_space &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_size
</UL>

<P><STRONG><a name="[eb]"></a>lv_table_constructor</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, lv_table.o(i.lv_table_constructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = lv_table_constructor &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_table.o(.constdata)
</UL>
<P><STRONG><a name="[ec]"></a>lv_table_destructor</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, lv_table.o(i.lv_table_destructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = lv_table_destructor &rArr; lv_mem_free &rArr; lv_tlsf_free &rArr; block_merge_prev &rArr; block_absorb &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_table.o(.constdata)
</UL>
<P><STRONG><a name="[ed]"></a>lv_table_event</STRONG> (Thumb, 532 bytes, Stack size 56 bytes, lv_table.o(i.lv_table_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 1032<LI>Call Chain = lv_table_event &rArr; draw_main &rArr; lv_draw_label &rArr; lv_txt_get_size &rArr; _lv_txt_get_next_line &rArr; lv_txt_get_next_word &rArr; lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_scroll_obj
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_type
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_act
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event_base
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_param
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_code
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_size
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_pressed_cell
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_table.o(.constdata)
</UL>
<P><STRONG><a name="[502]"></a>refr_size</STRONG> (Thumb, 234 bytes, Stack size 80 bytes, lv_table.o(i.refr_size))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = refr_size &rArr; get_row_height &rArr; lv_txt_get_size &rArr; _lv_txt_get_next_line &rArr; lv_txt_get_next_word &rArr; lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_self_size
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_line_space
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_letter_space
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_font
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_right
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_bottom
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_min_height
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_max_height
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_row_height
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_event
</UL>

<P><STRONG><a name="[253]"></a>char_is_accepted</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, lv_textarea.o(i.char_is_accepted))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = char_is_accepted &rArr; lv_textarea_get_text
</UL>
<BR>[Calls]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_get_text
</UL>
<BR>[Called By]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_char
</UL>

<P><STRONG><a name="[c0]"></a>cursor_blink_anim_cb</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, lv_textarea.o(i.cursor_blink_anim_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = cursor_blink_anim_cb &rArr; lv_obj_invalidate_area &rArr; _lv_inv_area &rArr; _lv_area_is_in &rArr; _lv_area_is_point_on &rArr;  _lv_area_is_point_on (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_copy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_textarea.o(i.start_cursor_blink)
</UL>
<P><STRONG><a name="[2a9]"></a>draw_cursor</STRONG> (Thumb, 332 bytes, Stack size 160 bytes, lv_textarea.o(i.draw_cursor))
<BR><BR>[Stack]<UL><LI>Max Depth = 712<LI>Call Chain = draw_cursor &rArr; lv_draw_label &rArr; lv_txt_get_size &rArr; _lv_txt_get_next_line &rArr; lv_txt_get_next_word &rArr; lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_draw_ctx
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect_dsc_init
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memcpy
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_label_dsc
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label_dsc_init
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_text
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_border_width
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
</UL>

<P><STRONG><a name="[2fa]"></a>draw_placeholder</STRONG> (Thumb, 174 bytes, Stack size 80 bytes, lv_textarea.o(i.draw_placeholder))
<BR><BR>[Stack]<UL><LI>Max Depth = 632<LI>Call Chain = draw_placeholder &rArr; lv_draw_label &rArr; lv_txt_get_size &rArr; _lv_txt_get_next_line &rArr; lv_txt_get_next_word &rArr; lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_draw_ctx
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_label_dsc
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_move
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label_dsc_init
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_text
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_border_width
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
</UL>

<P><STRONG><a name="[36d]"></a>insert_handler</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, lv_textarea.o(i.insert_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 760<LI>Call Chain = insert_handler &rArr; lv_textarea_add_text &rArr;  lv_textarea_add_char (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_text
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_char
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_del_char
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_text
</UL>

<P><STRONG><a name="[b3]"></a>label_event_cb</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, lv_textarea.o(i.label_event_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = label_event_cb &rArr; lv_label_set_text &rArr; lv_label_refr_text &rArr; lv_label_get_letter_on &rArr; _lv_txt_get_next_line &rArr; lv_txt_get_next_word &rArr; lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_code
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_cursor_blink
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_cursor_area
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_textarea.o(i.lv_textarea_constructor)
</UL>
<P><STRONG><a name="[506]"></a>lv_anim_set_exec_cb</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lv_textarea.o(i.lv_anim_set_exec_cb))
<BR><BR>[Called By]<UL><LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_text
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_char
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_text
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_cursor_blink
</UL>

<P><STRONG><a name="[509]"></a>lv_anim_set_path_cb</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lv_textarea.o(i.lv_anim_set_path_cb))
<BR><BR>[Called By]<UL><LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_text
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_char
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_text
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_cursor_blink
</UL>

<P><STRONG><a name="[50a]"></a>lv_anim_set_ready_cb</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lv_textarea.o(i.lv_anim_set_ready_cb))
<BR><BR>[Called By]<UL><LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_text
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_char
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_text
</UL>

<P><STRONG><a name="[507]"></a>lv_anim_set_time</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lv_textarea.o(i.lv_anim_set_time))
<BR><BR>[Called By]<UL><LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_text
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_char
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_text
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_cursor_blink
</UL>

<P><STRONG><a name="[508]"></a>lv_anim_set_values</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_textarea.o(i.lv_anim_set_values))
<BR><BR>[Called By]<UL><LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_text
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_char
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_text
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_cursor_blink
</UL>

<P><STRONG><a name="[505]"></a>lv_anim_set_var</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lv_textarea.o(i.lv_anim_set_var))
<BR><BR>[Called By]<UL><LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_text
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_char
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_text
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_cursor_blink
</UL>

<P><STRONG><a name="[26d]"></a>lv_area_copy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lv_textarea.o(i.lv_area_copy))
<BR><BR>[Called By]<UL><LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_cursor_area
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_placeholder
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_cursor
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cursor_blink_anim_cb
</UL>

<P><STRONG><a name="[510]"></a>lv_font_get_line_height</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_textarea.o(i.lv_font_get_line_height))
<BR><BR>[Called By]<UL><LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_cursor_up
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_cursor_down
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_cursor_area
</UL>

<P><STRONG><a name="[2ac]"></a>lv_obj_get_style_border_width</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_textarea.o(i.lv_obj_get_style_border_width))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_border_width &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_cursor_area
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_placeholder
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_cursor
</UL>

<P><STRONG><a name="[2ad]"></a>lv_obj_get_style_pad_left</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_textarea.o(i.lv_obj_get_style_pad_left))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_pad_left &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_cursor_area
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_placeholder
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_cursor
</UL>

<P><STRONG><a name="[2ae]"></a>lv_obj_get_style_pad_top</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_textarea.o(i.lv_obj_get_style_pad_top))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_pad_top &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_cursor_area
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_placeholder
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_cursor
</UL>

<P><STRONG><a name="[489]"></a>lv_obj_get_style_text_font</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, lv_textarea.o(i.lv_obj_get_style_text_font))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_text_font &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_cursor_up
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_cursor_down
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_cursor_area
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwd_char_hider
</UL>

<P><STRONG><a name="[48c]"></a>lv_obj_get_style_text_line_space</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_textarea.o(i.lv_obj_get_style_text_line_space))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_style_text_line_space &rArr; lv_obj_get_style_prop &rArr; get_prop_core &rArr; lv_style_get_prop &rArr; lv_style_get_prop_inlined
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_cursor_up
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_cursor_down
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_cursor_area
</UL>

<P><STRONG><a name="[50e]"></a>lv_pct</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lv_textarea.o(i.lv_pct))
<BR><BR>[Called By]<UL><LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_one_line
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_constructor
</UL>

<P><STRONG><a name="[ee]"></a>lv_textarea_constructor</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, lv_textarea.o(i.lv_textarea_constructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 672<LI>Call Chain = lv_textarea_constructor &rArr; lv_textarea_set_cursor_pos &rArr; lv_obj_update_layout &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_event_cb
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_width
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_create
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_cursor_blink
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_pct
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_textarea.o(.constdata)
</UL>
<P><STRONG><a name="[ef]"></a>lv_textarea_destructor</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, lv_textarea.o(i.lv_textarea_destructor))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = lv_textarea_destructor &rArr; lv_mem_free &rArr; lv_tlsf_free &rArr; block_merge_prev &rArr; block_absorb &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_textarea.o(.constdata)
</UL>
<P><STRONG><a name="[f0]"></a>lv_textarea_event</STRONG> (Thumb, 252 bytes, Stack size 32 bytes, lv_textarea.o(i.lv_textarea_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 904<LI>Call Chain = lv_textarea_event &rArr; lv_textarea_add_char &rArr; insert_handler &rArr; lv_textarea_add_text &rArr;  lv_textarea_add_char (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event_base
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_param
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_code
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_cursor_left
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_char
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_get_one_line
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_del_char_forward
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_del_char
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_cursor_up
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_cursor_right
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_cursor_down
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_cursor_position_on_click
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_cursor_blink
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_placeholder
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_cursor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_textarea.o(.constdata)
</UL>
<P><STRONG><a name="[503]"></a>pwd_char_hider</STRONG> (Thumb, 170 bytes, Stack size 64 bytes, lv_textarea.o(i.pwd_char_hider))
<BR><BR>[Stack]<UL><LI>Max Depth = 544<LI>Call Chain = pwd_char_hider &rArr; lv_label_set_text &rArr; lv_label_refr_text &rArr; lv_label_get_letter_on &rArr; _lv_txt_get_next_line &rArr; lv_txt_get_next_word &rArr; lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_memcpy
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_glyph_dsc
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_text
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_cursor_area
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_font
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_text
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_char
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_text
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwd_char_hider_anim_ready
</UL>

<P><STRONG><a name="[b0]"></a>pwd_char_hider_anim</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lv_textarea.o(i.pwd_char_hider_anim))
<BR>[Address Reference Count : 3]<UL><LI> lv_textarea.o(i.lv_textarea_add_char)
<LI> lv_textarea.o(i.lv_textarea_add_text)
<LI> lv_textarea.o(i.lv_textarea_set_text)
</UL>
<P><STRONG><a name="[b2]"></a>pwd_char_hider_anim_ready</STRONG> (Thumb, 14 bytes, Stack size 16 bytes, lv_textarea.o(i.pwd_char_hider_anim_ready))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = pwd_char_hider_anim_ready &rArr; pwd_char_hider &rArr; lv_label_set_text &rArr; lv_label_refr_text &rArr; lv_label_get_letter_on &rArr; _lv_txt_get_next_line &rArr; lv_txt_get_next_word &rArr; lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwd_char_hider
</UL>
<BR>[Address Reference Count : 3]<UL><LI> lv_textarea.o(i.lv_textarea_add_char)
<LI> lv_textarea.o(i.lv_textarea_add_text)
<LI> lv_textarea.o(i.lv_textarea_set_text)
</UL>
<P><STRONG><a name="[38c]"></a>refr_cursor_area</STRONG> (Thumb, 632 bytes, Stack size 96 bytes, lv_textarea.o(i.refr_cursor_area))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = refr_cursor_area &rArr; lv_label_get_letter_pos &rArr; _lv_txt_get_next_line &rArr; lv_txt_get_next_word &rArr; lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_calculate_style_text_align
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_glyph_width
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_text
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_pos
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_get_cursor_pos
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_line_space
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_text_font
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_top
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_pad_left
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_border_width
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_line_height
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwd_char_hider
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;label_event_cb
</UL>

<P><STRONG><a name="[38d]"></a>start_cursor_blink</STRONG> (Thumb, 128 bytes, Stack size 88 bytes, lv_textarea.o(i.start_cursor_blink))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = start_cursor_blink &rArr; lv_anim_start &rArr; _lv_ll_ins_head &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_init
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_set_var
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_set_values
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_set_time
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_set_path_cb
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_set_exec_cb
</UL>
<BR>[Called By]<UL><LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_constructor
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;label_event_cb
</UL>

<P><STRONG><a name="[516]"></a>update_cursor_position_on_click</STRONG> (Thumb, 496 bytes, Stack size 64 bytes, lv_textarea.o(i.update_cursor_position_on_click))
<BR><BR>[Stack]<UL><LI>Max Depth = 712<LI>Call Chain = update_cursor_position_on_click &rArr; lv_textarea_set_cursor_pos &rArr; lv_obj_update_layout &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_vect
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_point
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_type
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_act
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_code
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_coords
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_is_char_under_pos
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_on
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
</UL>

<P><STRONG><a name="[544]"></a>lv_anim_set_values</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, nt_pm.o(i.lv_anim_set_values))
<BR><BR>[Called By]<UL><LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_pm_view_rotations_anim_create
</UL>

<P><STRONG><a name="[491]"></a>lv_obj_move_foreground</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, nt_pm.o(i.lv_obj_move_foreground))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = lv_obj_move_foreground &rArr; lv_obj_move_to_index &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; _lv_inv_area &rArr; _lv_area_is_in &rArr; _lv_area_is_point_on &rArr;  _lv_area_is_point_on (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_cnt
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_to_index
</UL>
<BR>[Called By]<UL><LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_start_page
</UL>

<P><STRONG><a name="[1eb]"></a>attach_event</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, dialplate.o(i.attach_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = attach_event &rArr; lv_obj_add_event_cb &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_event_cb
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;view_load
</UL>

<P><STRONG><a name="[77]"></a>on_event</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, dialplate.o(i.on_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = on_event &rArr; nt_start_page &rArr; nt_page_state_update &rArr;  nt_page_state_update (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_start_page
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_code
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dialplate.o(i.attach_event)
</UL>
<P><STRONG><a name="[c3]"></a>ontimer_update</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, dialplate.o(i.ontimer_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 520 + Unknown Stack Size
<LI>Call Chain = ontimer_update &rArr; update &rArr; lv_label_set_text_fmt &rArr; lv_label_refr_text &rArr; lv_label_get_letter_on &rArr; _lv_txt_get_next_line &rArr; lv_txt_get_next_word &rArr; lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dialplate.o(i.view_did_appear)
</UL>
<P><STRONG><a name="[54a]"></a>update</STRONG> (Thumb, 242 bytes, Stack size 24 bytes, dialplate.o(i.update))
<BR><BR>[Stack]<UL><LI>Max Depth = 512 + Unknown Stack Size
<LI>Call Chain = update &rArr; lv_label_set_text_fmt &rArr; lv_label_refr_text &rArr; lv_label_get_letter_on &rArr; _lv_txt_get_next_line &rArr; lv_txt_get_next_word &rArr; lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_filte_get_pow
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_filte_get_cur
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ina226_filte_get_volt
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;avg_filte_get_volt
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qflow_dura_get_sec
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qflow_dura_get_min
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qflow_dura_get_hour
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_get
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_elaps
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text_fmt
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strifica
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ontimer_update
</UL>

<P><STRONG><a name="[f4]"></a>view_did_appear</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, dialplate.o(i.view_did_appear))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = view_did_appear &rArr; lv_timer_create &rArr; _lv_ll_ins_head &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_create
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dialplate.o(.constdata)
</UL>
<P><STRONG><a name="[f6]"></a>view_did_disappear</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dialplate.o(i.view_did_disappear))
<BR>[Address Reference Count : 1]<UL><LI> dialplate.o(.constdata)
</UL>
<P><STRONG><a name="[f2]"></a>view_did_load</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dialplate.o(i.view_did_load))
<BR>[Address Reference Count : 1]<UL><LI> dialplate.o(.constdata)
</UL>
<P><STRONG><a name="[f7]"></a>view_did_unload</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dialplate.o(i.view_did_unload))
<BR>[Address Reference Count : 1]<UL><LI> dialplate.o(.constdata)
</UL>
<P><STRONG><a name="[f1]"></a>view_load</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, dialplate.o(i.view_load))
<BR><BR>[Stack]<UL><LI>Max Depth = 528<LI>Call Chain = view_load &rArr; nt_dialplate_create &rArr; main_create &rArr; lv_label_set_text &rArr; lv_label_refr_text &rArr; lv_label_get_letter_on &rArr; _lv_txt_get_next_line &rArr; lv_txt_get_next_word &rArr; lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attach_event
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_dialplate_create
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dialplate.o(.constdata)
</UL>
<P><STRONG><a name="[f3]"></a>view_will_appear</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, dialplate.o(i.view_will_appear))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = view_will_appear &rArr; lv_group_add_obj &rArr; lv_group_refocus &rArr; lv_group_focus_prev &rArr; focus_next_core &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; _lv_inv_area &rArr; _lv_area_is_in &rArr; _lv_area_is_point_on &rArr;  _lv_area_is_point_on (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_wait_release
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_remove_all_objs
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_get_default
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_add_obj
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_act
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dialplate.o(.constdata)
</UL>
<P><STRONG><a name="[f5]"></a>view_will_disappear</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dialplate.o(i.view_will_disappear))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = view_will_disappear &rArr; lv_group_remove_all_objs &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; _lv_inv_area &rArr; _lv_area_is_in &rArr; _lv_area_is_point_on &rArr;  _lv_area_is_point_on (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_remove_all_objs
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_get_default
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_del
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dialplate.o(.constdata)
</UL>
<P><STRONG><a name="[268]"></a>count_create</STRONG> (Thumb, 1144 bytes, Stack size 32 bytes, dialplateview.o(i.count_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 512<LI>Call Chain = count_create &rArr; lv_label_set_text &rArr; lv_label_refr_text &rArr; lv_label_get_letter_on &rArr; _lv_txt_get_next_line &rArr; lv_txt_get_next_word &rArr; lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_pos
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_create
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_text_font
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_text_color
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_radius
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_bg_color
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_init
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_style
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_palette_main
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_flex_main_place
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_flex_flow
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_flex_flow
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_flex_align
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_row
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_column
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_create
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_layout
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_style_all
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_dialplate_create
</UL>

<P><STRONG><a name="[305]"></a>duration_create</STRONG> (Thumb, 516 bytes, Stack size 24 bytes, dialplateview.o(i.duration_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = duration_create &rArr; lv_label_set_text &rArr; lv_label_refr_text &rArr; lv_label_get_letter_on &rArr; _lv_txt_get_next_line &rArr; lv_txt_get_next_word &rArr; lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_pos
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_create
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_text_font
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_text_color
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_radius
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_bg_opa
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_bg_color
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_init
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_style
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_palette_main
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_flex_main_place
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_flex_flow
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_flex_flow
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_row
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_column
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_create
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_layout
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_style_all
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_dialplate_create
</UL>

<P><STRONG><a name="[26c]"></a>lv_color_hex</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, dialplateview.o(i.lv_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_dialplate_style_create
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_dialplate_main_style_create
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_dialplate_iden_style_create
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_dialplate_count_style_create
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_create
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;duration_create
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;count_create
</UL>

<P><STRONG><a name="[269]"></a>lv_obj_remove_style_all</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, dialplateview.o(i.lv_obj_remove_style_all))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = lv_obj_remove_style_all &rArr; lv_obj_remove_style &rArr; trans_del &rArr; lv_style_remove_prop &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_style
</UL>
<BR>[Called By]<UL><LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_create
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;duration_create
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;count_create
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_dialplate_create
</UL>

<P><STRONG><a name="[52e]"></a>main_create</STRONG> (Thumb, 584 bytes, Stack size 32 bytes, dialplateview.o(i.main_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 512<LI>Call Chain = main_create &rArr; lv_label_set_text &rArr; lv_label_refr_text &rArr; lv_label_get_letter_on &rArr; _lv_txt_get_next_line &rArr; lv_txt_get_next_word &rArr; lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_pos
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_create
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_text_font
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_text_color
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_radius
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_bg_opa
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_bg_color
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_init
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_style
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_palette_main
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_flex_main_place
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_flex_flow
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_flex_flow
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_row
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_column
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_create
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_layout
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_style_all
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_dialplate_create
</UL>

<P><STRONG><a name="[533]"></a>nt_dialplate_count_style_create</STRONG> (Thumb, 210 bytes, Stack size 8 bytes, dialplateview.o(i.nt_dialplate_count_style_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = nt_dialplate_count_style_create &rArr; lv_style_set_text_color &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_reset
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_init
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_text_color
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_radius
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_border_width
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_border_color
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_opa
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_color
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_border_opa
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_dialplate_create
</UL>

<P><STRONG><a name="[536]"></a>nt_dialplate_iden_style_create</STRONG> (Thumb, 206 bytes, Stack size 8 bytes, dialplateview.o(i.nt_dialplate_iden_style_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = nt_dialplate_iden_style_create &rArr; lv_style_set_text_color &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_reset
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_init
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_text_color
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_radius
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_border_width
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_border_color
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_opa
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_color
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_border_opa
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_dialplate_create
</UL>

<P><STRONG><a name="[537]"></a>nt_dialplate_main_style_create</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, dialplateview.o(i.nt_dialplate_main_style_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = nt_dialplate_main_style_create &rArr; lv_style_set_text_color &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_reset
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_init
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_text_color
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_radius
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_border_width
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_border_color
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_opa
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_color
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_border_opa
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_dialplate_create
</UL>

<P><STRONG><a name="[535]"></a>nt_dialplate_style_create</STRONG> (Thumb, 208 bytes, Stack size 8 bytes, dialplateview.o(i.nt_dialplate_style_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = nt_dialplate_style_create &rArr; lv_style_set_text_color &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_reset
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_init
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_text_color
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_radius
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_border_width
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_border_color
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_opa
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_color
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_border_opa
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_dialplate_create
</UL>

<P><STRONG><a name="[1ed]"></a>attach_event</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, infos.o(i.attach_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = attach_event &rArr; lv_obj_add_event_cb &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_event_cb
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;view_load
</UL>

<P><STRONG><a name="[78]"></a>on_event</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, infos.o(i.on_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = on_event &rArr; nt_start_page &rArr; nt_page_state_update &rArr;  nt_page_state_update (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_start_page
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_code
</UL>
<BR>[Address Reference Count : 1]<UL><LI> infos.o(i.attach_event)
</UL>
<P><STRONG><a name="[c4]"></a>ontimer_update</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, infos.o(i.ontimer_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ontimer_update &rArr; update &rArr; lv_tick_elaps
</UL>
<BR>[Calls]<UL><LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update
</UL>
<BR>[Address Reference Count : 1]<UL><LI> infos.o(i.view_did_appear)
</UL>
<P><STRONG><a name="[54b]"></a>update</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, infos.o(i.update))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = update &rArr; lv_tick_elaps
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_get
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_elaps
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ontimer_update
</UL>

<P><STRONG><a name="[fb]"></a>view_did_appear</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, infos.o(i.view_did_appear))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = view_did_appear &rArr; lv_timer_create &rArr; _lv_ll_ins_head &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_create
</UL>
<BR>[Address Reference Count : 1]<UL><LI> infos.o(.constdata)
</UL>
<P><STRONG><a name="[fd]"></a>view_did_disappear</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, infos.o(i.view_did_disappear))
<BR>[Address Reference Count : 1]<UL><LI> infos.o(.constdata)
</UL>
<P><STRONG><a name="[f9]"></a>view_did_load</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, infos.o(i.view_did_load))
<BR>[Address Reference Count : 1]<UL><LI> infos.o(.constdata)
</UL>
<P><STRONG><a name="[fe]"></a>view_did_unload</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, infos.o(i.view_did_unload))
<BR>[Address Reference Count : 1]<UL><LI> infos.o(.constdata)
</UL>
<P><STRONG><a name="[f8]"></a>view_load</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, infos.o(i.view_load))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = view_load &rArr; infos_create &rArr; lv_obj_set_size &rArr; lv_obj_set_width &rArr; lv_obj_set_style_width &rArr; lv_obj_set_local_style_prop &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;infos_create
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attach_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> infos.o(.constdata)
</UL>
<P><STRONG><a name="[fa]"></a>view_will_appear</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, infos.o(i.view_will_appear))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = view_will_appear &rArr; lv_group_add_obj &rArr; lv_group_refocus &rArr; lv_group_focus_prev &rArr; focus_next_core &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; _lv_inv_area &rArr; _lv_area_is_in &rArr; _lv_area_is_point_on &rArr;  _lv_area_is_point_on (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_wait_release
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_remove_all_objs
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_get_default
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_add_obj
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_act
</UL>
<BR>[Address Reference Count : 1]<UL><LI> infos.o(.constdata)
</UL>
<P><STRONG><a name="[fc]"></a>view_will_disappear</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, infos.o(i.view_will_disappear))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = view_will_disappear &rArr; lv_group_remove_all_objs &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; _lv_inv_area &rArr; _lv_area_is_in &rArr; _lv_area_is_point_on &rArr;  _lv_area_is_point_on (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_remove_all_objs
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_get_default
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_del
</UL>
<BR>[Address Reference Count : 1]<UL><LI> infos.o(.constdata)
</UL>
<P><STRONG><a name="[538]"></a>lv_color_hex</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, infosview.o(i.lv_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_infos_style_create
</UL>

<P><STRONG><a name="[36c]"></a>nt_infos_style_create</STRONG> (Thumb, 208 bytes, Stack size 8 bytes, infosview.o(i.nt_infos_style_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = nt_infos_style_create &rArr; lv_style_set_text_color &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_reset
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_init
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_text_color
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_radius
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_border_width
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_border_color
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_opa
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_color
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_border_opa
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;infos_create
</UL>

<P><STRONG><a name="[1ee]"></a>attach_event</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, recent.o(i.attach_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = attach_event &rArr; lv_obj_add_event_cb &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_event_cb
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;view_load
</UL>

<P><STRONG><a name="[79]"></a>on_event</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, recent.o(i.on_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = on_event &rArr; nt_start_page &rArr; nt_page_state_update &rArr;  nt_page_state_update (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_start_page
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_code
</UL>
<BR>[Address Reference Count : 1]<UL><LI> recent.o(i.attach_event)
</UL>
<P><STRONG><a name="[c5]"></a>ontimer_update</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, recent.o(i.ontimer_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ontimer_update &rArr; update &rArr; lv_tick_elaps
</UL>
<BR>[Calls]<UL><LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update
</UL>
<BR>[Address Reference Count : 1]<UL><LI> recent.o(i.view_did_appear)
</UL>
<P><STRONG><a name="[54c]"></a>update</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, recent.o(i.update))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = update &rArr; lv_tick_elaps
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_get
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_elaps
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ontimer_update
</UL>

<P><STRONG><a name="[102]"></a>view_did_appear</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, recent.o(i.view_did_appear))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = view_did_appear &rArr; lv_timer_create &rArr; _lv_ll_ins_head &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_create
</UL>
<BR>[Address Reference Count : 1]<UL><LI> recent.o(.constdata)
</UL>
<P><STRONG><a name="[104]"></a>view_did_disappear</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, recent.o(i.view_did_disappear))
<BR>[Address Reference Count : 1]<UL><LI> recent.o(.constdata)
</UL>
<P><STRONG><a name="[100]"></a>view_did_load</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, recent.o(i.view_did_load))
<BR>[Address Reference Count : 1]<UL><LI> recent.o(.constdata)
</UL>
<P><STRONG><a name="[105]"></a>view_did_unload</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, recent.o(i.view_did_unload))
<BR>[Address Reference Count : 1]<UL><LI> recent.o(.constdata)
</UL>
<P><STRONG><a name="[ff]"></a>view_load</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, recent.o(i.view_load))
<BR><BR>[Stack]<UL><LI>Max Depth = 1128<LI>Call Chain = view_load &rArr; nt_recent_create &rArr; quantity_create &rArr; lv_spinbox_set_digit_format &rArr; lv_spinbox_updatevalue &rArr; lv_textarea_set_text &rArr; lv_textarea_add_char &rArr; insert_handler &rArr; lv_textarea_add_text &rArr;  lv_textarea_add_char (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_recent_create
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attach_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> recent.o(.constdata)
</UL>
<P><STRONG><a name="[101]"></a>view_will_appear</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, recent.o(i.view_will_appear))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = view_will_appear &rArr; lv_group_add_obj &rArr; lv_group_refocus &rArr; lv_group_focus_prev &rArr; focus_next_core &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; _lv_inv_area &rArr; _lv_area_is_in &rArr; _lv_area_is_point_on &rArr;  _lv_area_is_point_on (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_wait_release
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_remove_all_objs
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_get_default
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_add_obj
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_act
</UL>
<BR>[Address Reference Count : 1]<UL><LI> recent.o(.constdata)
</UL>
<P><STRONG><a name="[103]"></a>view_will_disappear</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, recent.o(i.view_will_disappear))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = view_will_disappear &rArr; lv_group_remove_all_objs &rArr; lv_obj_invalidate &rArr; lv_obj_invalidate_area &rArr; _lv_inv_area &rArr; _lv_area_is_in &rArr; _lv_area_is_point_on &rArr;  _lv_area_is_point_on (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_remove_all_objs
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_get_default
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_del
</UL>
<BR>[Address Reference Count : 1]<UL><LI> recent.o(.constdata)
</UL>
<P><STRONG><a name="[232]"></a>capacity_create</STRONG> (Thumb, 326 bytes, Stack size 32 bytes, recentview.o(i.capacity_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 1112<LI>Call Chain = capacity_create &rArr; lv_spinbox_set_digit_format &rArr; lv_spinbox_updatevalue &rArr; lv_textarea_set_text &rArr; lv_textarea_add_char &rArr; insert_handler &rArr; lv_textarea_add_text &rArr;  lv_textarea_add_char (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_pos
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_create
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_text_font
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_text_color
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_radius
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_bg_opa
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_bg_color
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_init
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_style
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_flex_main_place
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_flex_flow
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_flex_flow
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_row
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_column
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_create
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btn_create
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_set_range
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_set_digit_format
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_create
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_layout
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_style_all
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_recent_create
</UL>

<P><STRONG><a name="[30d]"></a>estimate_create</STRONG> (Thumb, 392 bytes, Stack size 32 bytes, recentview.o(i.estimate_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 512<LI>Call Chain = estimate_create &rArr; lv_label_set_text &rArr; lv_label_refr_text &rArr; lv_label_get_letter_on &rArr; _lv_txt_get_next_line &rArr; lv_txt_get_next_word &rArr; lv_font_get_glyph_width &rArr; lv_font_get_glyph_dsc
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_pos
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_create
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_text_font
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_text_color
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_radius
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_bg_opa
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_bg_color
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_init
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_style
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_flex_main_place
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_flex_flow
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_flex_flow
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_row
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_column
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_create
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_layout
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_value
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_create
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_style_all
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_recent_create
</UL>

<P><STRONG><a name="[237]"></a>lv_color_hex</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, recentview.o(i.lv_color_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quantity_create
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_recent_style_create
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;estimate_create
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;capacity_create
</UL>

<P><STRONG><a name="[234]"></a>lv_obj_remove_style_all</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, recentview.o(i.lv_obj_remove_style_all))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = lv_obj_remove_style_all &rArr; lv_obj_remove_style &rArr; trans_del &rArr; lv_style_remove_prop &rArr; lv_mem_alloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_style
</UL>
<BR>[Called By]<UL><LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quantity_create
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;estimate_create
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;capacity_create
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_recent_create
</UL>

<P><STRONG><a name="[546]"></a>nt_recent_style_create</STRONG> (Thumb, 208 bytes, Stack size 8 bytes, recentview.o(i.nt_recent_style_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = nt_recent_style_create &rArr; lv_style_set_text_color &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; lv_tlsf_realloc &rArr; lv_tlsf_malloc &rArr; block_prepare_used &rArr; block_trim_free &rArr; block_split &rArr; block_mark_as_free &rArr; block_link_next &rArr; block_next &rArr; block_is_last
</UL>
<BR>[Calls]<UL><LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_reset
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_init
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_text_color
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_radius
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_border_width
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_border_color
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_opa
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_color
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_border_opa
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_recent_create
</UL>

<P><STRONG><a name="[547]"></a>quantity_create</STRONG> (Thumb, 326 bytes, Stack size 32 bytes, recentview.o(i.quantity_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 1112<LI>Call Chain = quantity_create &rArr; lv_spinbox_set_digit_format &rArr; lv_spinbox_updatevalue &rArr; lv_textarea_set_text &rArr; lv_textarea_add_char &rArr; insert_handler &rArr; lv_textarea_add_text &rArr;  lv_textarea_add_char (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_pos
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_create
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_text_font
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_text_color
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_radius
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_bg_opa
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_bg_color
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_init
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_style
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_flex_main_place
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_flex_flow
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_flex_flow
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_row
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_column
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_create
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btn_create
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_set_range
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_set_digit_format
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_create
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_layout
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_style_all
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nt_recent_create
</UL>

<P><STRONG><a name="[554]"></a>series</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, strifica.o(i.series))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = series &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strifica
</UL>

<P><STRONG><a name="[560]"></a>strified</STRONG> (Thumb, 282 bytes, Stack size 32 bytes, strifica.o(i.strified))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = strified &rArr; __2snprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strifica
</UL>

<P><STRONG><a name="[5a9]"></a>_fadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub_clz.o(x$fpl$fadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub
</UL>

<P><STRONG><a name="[5a5]"></a>_fsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub_clz.o(x$fpl$fsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
</UL>

<P><STRONG><a name="[12c]"></a>_fp_digits</STRONG> (Thumb, 432 bytes, Stack size 96 bytes, _printf_fp_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_d2e
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_udiv10
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[6b]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
